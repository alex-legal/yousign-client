{
  "openapi": "3.0.0",
  "info": {
    "title": "Public Api v3",
    "version": "3.0",
    "description": "Build the best experience of digital signature through your own platform. Increase your conversion rates, leverage your data and reduce your costs with Yousign API.",
    "contact": { "name": "Support", "email": "contact@yousign.com" }
  },
  "servers": [
    {
      "url": "https://api-sandbox.yousign.app/v3",
      "description": "Sandbox URL"
    },
    { "url": "https://api.yousign.app/v3", "description": "Production URL" },
    { "url": "https://dev.yousign.io/api_public/v3" }
  ],
  "paths": {
    "/signature_requests": {
      "post": {
        "operationId": "post-signature_requests",
        "summary": "Initiate a new signature request",
        "tags": ["Signature Request"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "description": "Name of the signature request"
                  },
                  "delivery_mode": {
                    "type": "string",
                    "enum": ["none", "email"],
                    "description": "Delivery mode to notify signers."
                  },
                  "ordered_signers": {
                    "type": "boolean",
                    "description": "Enable an ordered workflow, each signer will be requested to sign in a sequential order"
                  },
                  "reminder_settings": {
                    "type": "object",
                    "description": "Enable automatic reminders for pending signers.",
                    "nullable": true,
                    "default": null,
                    "properties": {
                      "interval_in_days": {
                        "type": "number",
                        "enum": [1, 2, 7, 14]
                      },
                      "max_occurrences": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 10,
                        "example": 5
                      }
                    },
                    "required": ["interval_in_days", "max_occurrences"]
                  },
                  "timezone": {
                    "type": "string",
                    "example": "Europe/Paris",
                    "description": "tz database format"
                  },
                  "email_custom_note": {
                    "type": "string",
                    "maxLength": 500,
                    "example": "Please sign these documents as soon as possible.",
                    "description": "A custom note added to emails sent to signers."
                  },
                  "expiration_date": {
                    "type": "string",
                    "format": "date",
                    "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                    "description": "Due date of the signature request (yyyy-mm-dd). Default to 6 month after the activation."
                  },
                  "template_id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "description": "Create a signature request from an existing template. This parameter is not available in Sandbox."
                  },
                  "external_id": {
                    "type": "string",
                    "pattern": "^[\\w\\-@.%+]+$",
                    "maxLength": 255,
                    "description": "Store a custom id that will be added to webhooks & appended to redirect urls.",
                    "nullable": true
                  },
                  "branding_id": {
                    "type": "string",
                    "format": "uuid",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "example": "3a93d3b5-fb3b-4abf-9e70-26315b33506b",
                    "description": "Use a specific branding to customize the signature experience.",
                    "nullable": true
                  },
                  "custom_experience_id": {
                    "type": "string",
                    "format": "uuid",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "example": "3a93d3b5-fb3b-4abf-9e70-26315b33506b",
                    "description": "Use a specific Custom Experience to customize the signature experience.",
                    "nullable": true
                  },
                  "documents": {
                    "deprecated": true,
                    "type": "array",
                    "maxItems": 5,
                    "uniqueItems": true,
                    "description": "You can directly attach orphan documents to the signature request.",
                    "items": {
                      "type": "string",
                      "format": "uuid",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                      "example": "89120884-d29a-4b1a-ac7b-a9e73a872795"
                    }
                  },
                  "signers": {
                    "deprecated": true,
                    "type": "array",
                    "description": "Can only be used if you add documents at the same time.",
                    "items": {
                      "description": "Create signers",
                      "anyOf": [
                        {
                          "title": "SignatureRequest_SignerFromInfoInput",
                          "type": "object",
                          "description": "Create a signer from info",
                          "properties": {
                            "info": {
                              "type": "object",
                              "description": "create new signer",
                              "required": [
                                "first_name",
                                "last_name",
                                "email",
                                "locale"
                              ],
                              "properties": {
                                "first_name": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 255
                                },
                                "last_name": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 255
                                },
                                "email": {
                                  "type": "string",
                                  "minLength": 1,
                                  "format": "email"
                                },
                                "phone_number": {
                                  "type": "string",
                                  "minLength": 1,
                                  "description": "E.164 format. Becomes mandatory if `signature_authentication_mode` requires a phone number.",
                                  "nullable": true
                                },
                                "locale": {
                                  "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1approvers~1%7BapproverId%7D/patch/requestBody/content/application~1json/schema/properties/info/properties/locale"
                                }
                              }
                            },
                            "fields": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1signers/post/requestBody/content/application~1json/schema/oneOf/0/properties/fields/items"
                              }
                            },
                            "signature_level": {
                              "type": "string",
                              "default": "electronic_signature",
                              "enum": [
                                "electronic_signature",
                                "advanced_electronic_signature",
                                "electronic_signature_with_qualified_certificate",
                                "qualified_electronic_signature_mode_1"
                              ]
                            },
                            "signature_authentication_mode": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "enum": [null, "otp_email", "otp_sms", "no_otp"]
                            },
                            "redirect_urls": {
                              "type": "object",
                              "properties": {
                                "success": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 255,
                                  "nullable": true
                                },
                                "error": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 255,
                                  "nullable": true
                                }
                              }
                            },
                            "custom_text": {
                              "type": "object",
                              "properties": {
                                "request_subject": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 150,
                                  "nullable": true
                                },
                                "request_body": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 500,
                                  "nullable": true
                                },
                                "reminder_subject": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 150,
                                  "nullable": true
                                },
                                "reminder_body": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 500,
                                  "nullable": true
                                }
                              }
                            }
                          },
                          "required": ["info", "signature_level"]
                        },
                        {
                          "title": "SignatureRequest_SignerFromUserIdInput",
                          "type": "object",
                          "description": "Create a signer from a user",
                          "properties": {
                            "user_id": {
                              "type": "string",
                              "format": "uuid",
                              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                              "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
                              "description": "Create signer from an existing user"
                            },
                            "fields": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1signers/post/requestBody/content/application~1json/schema/oneOf/0/properties/fields/items"
                              }
                            },
                            "signature_level": {
                              "type": "string",
                              "default": "electronic_signature",
                              "enum": [
                                "electronic_signature",
                                "advanced_electronic_signature",
                                "electronic_signature_with_qualified_certificate",
                                "qualified_electronic_signature_mode_1"
                              ]
                            },
                            "signature_authentication_mode": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "enum": [null, "otp_email", "otp_sms", "no_otp"]
                            },
                            "redirect_urls": {
                              "type": "object",
                              "properties": {
                                "success": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 255,
                                  "nullable": true
                                },
                                "error": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 255,
                                  "nullable": true
                                }
                              }
                            },
                            "custom_text": {
                              "type": "object",
                              "properties": {
                                "request_subject": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 150,
                                  "nullable": true
                                },
                                "request_body": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 500,
                                  "nullable": true
                                },
                                "reminder_subject": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 150,
                                  "nullable": true
                                },
                                "reminder_body": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 500,
                                  "nullable": true
                                }
                              }
                            }
                          },
                          "required": ["user_id", "signature_level"]
                        },
                        {
                          "title": "SignatureRequest_SignerFromContactIdInput",
                          "type": "object",
                          "description": "Create signer from a contact",
                          "properties": {
                            "contact_id": {
                              "type": "string",
                              "description": "Create signer from an existing contact",
                              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                              "example": "ddecfb85-8a45-4254-b940-6171b8df0a90",
                              "format": "uuid"
                            },
                            "fields": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1signers/post/requestBody/content/application~1json/schema/oneOf/0/properties/fields/items"
                              }
                            },
                            "signature_level": {
                              "type": "string",
                              "default": "electronic_signature",
                              "enum": [
                                "electronic_signature",
                                "advanced_electronic_signature",
                                "electronic_signature_with_qualified_certificate",
                                "qualified_electronic_signature_mode_1"
                              ]
                            },
                            "signature_authentication_mode": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "enum": [null, "otp_email", "otp_sms", "no_otp"]
                            },
                            "redirect_urls": {
                              "type": "object",
                              "properties": {
                                "success": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 255,
                                  "nullable": true
                                },
                                "error": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 255,
                                  "nullable": true
                                }
                              }
                            },
                            "custom_text": {
                              "type": "object",
                              "properties": {
                                "request_subject": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 150,
                                  "nullable": true
                                },
                                "request_body": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 500,
                                  "nullable": true
                                },
                                "reminder_subject": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 150,
                                  "nullable": true
                                },
                                "reminder_body": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 500,
                                  "nullable": true
                                }
                              }
                            }
                          },
                          "required": ["contact_id", "signature_level"]
                        }
                      ]
                    }
                  },
                  "workspace_id": {
                    "type": "string",
                    "description": "Scope the signature request to a specific workspace",
                    "format": "uuid",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
                    "nullable": true
                  },
                  "audit_trail_locale": {
                    "type": "string",
                    "enum": ["en", "fr"],
                    "description": "Define the locale for the generated audit trail.",
                    "nullable": true,
                    "example": "en"
                  }
                },
                "required": ["name", "delivery_mode"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "SignatureRequest",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1,
                      "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "draft",
                        "ongoing",
                        "done",
                        "deleted",
                        "expired",
                        "canceled",
                        "approval",
                        "rejected"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "example": "signature request name"
                    },
                    "delivery_mode": {
                      "type": "string",
                      "enum": ["email", "none"]
                    },
                    "created_at": {
                      "type": "string",
                      "minLength": 1,
                      "example": "2024-01-18T22:59:00+00:00",
                      "format": "date-time"
                    },
                    "ordered_signers": {
                      "type": "boolean",
                      "description": "Enable an ordered workflow, each signer will be requested to sign in a sequential order"
                    },
                    "reminder_settings": {
                      "type": "object",
                      "required": ["interval_in_days", "max_occurrences"],
                      "nullable": true,
                      "properties": {
                        "interval_in_days": {
                          "type": "number",
                          "enum": [1, 2, 7, 14]
                        },
                        "max_occurrences": {
                          "type": "number",
                          "maximum": 10,
                          "minimum": 1
                        }
                      }
                    },
                    "timezone": { "type": "string", "example": "Europe/Paris" },
                    "email_custom_note": {
                      "type": "string",
                      "example": "Please sign these documents as soon as possible.",
                      "nullable": true
                    },
                    "expiration_date": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-18T22:59:00+00:00"
                    },
                    "source": {
                      "type": "string",
                      "enum": [
                        "app",
                        "public_api",
                        "connector_hubspot_api",
                        "connector_salesforce_api",
                        "connector_google_api",
                        "connector_zapier_api"
                      ]
                    },
                    "signers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "status": {
                            "type": "string",
                            "enum": [
                              "initiated",
                              "notified",
                              "verified",
                              "processing",
                              "consent_given",
                              "signed",
                              "aborted",
                              "error"
                            ]
                          }
                        },
                        "required": ["id", "status"]
                      }
                    },
                    "approvers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "status": {
                            "type": "string",
                            "enum": [
                              "initiated",
                              "notified",
                              "approved",
                              "rejected"
                            ]
                          }
                        },
                        "required": ["id", "status"]
                      }
                    },
                    "documents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "nature": {
                            "type": "string",
                            "enum": ["attachment", "signable_document"]
                          }
                        },
                        "required": ["id", "nature"]
                      }
                    },
                    "sender": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "id": { "type": "string" },
                        "email": { "type": "string" }
                      }
                    },
                    "external_id": {
                      "type": "string",
                      "example": "An_external-ID",
                      "nullable": true
                    },
                    "branding_id": {
                      "type": "string",
                      "format": "uuid",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                      "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                      "nullable": true,
                      "deprecated": true
                    },
                    "custom_experience_id": {
                      "type": "string",
                      "format": "uuid",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                      "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                      "nullable": true
                    },
                    "workspace_id": {
                      "type": "string",
                      "format": "uuid",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                      "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c"
                    },
                    "audit_trail_locale": {
                      "type": "string",
                      "enum": ["en", "fr"],
                      "example": "en"
                    }
                  },
                  "required": [
                    "id",
                    "status",
                    "name",
                    "delivery_mode",
                    "created_at",
                    "ordered_signers",
                    "reminder_settings",
                    "timezone",
                    "email_custom_note",
                    "expiration_date",
                    "source",
                    "signers",
                    "documents",
                    "sender",
                    "external_id",
                    "branding_id",
                    "custom_experience_id",
                    "audit_trail_locale"
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      },
      "get": {
        "operationId": "get-signature_requests",
        "summary": "List all Signature Requests",
        "tags": ["Signature Request"],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "ongoing",
                "done",
                "deleted",
                "expired",
                "canceled",
                "approval",
                "rejected"
              ]
            },
            "in": "query",
            "name": "status",
            "description": "Filter by status"
          },
          { "$ref": "#/paths/~1users/get/parameters/0" },
          {
            "schema": {
              "type": "string",
              "example": "an_external_id",
              "pattern": "^[\\w\\-@.%+]+$"
            },
            "in": "query",
            "name": "external_id",
            "description": "Filter by external_id"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["app", "public_api"],
                "default": "public_api"
              }
            },
            "in": "query",
            "name": "source[]",
            "description": "Filter by source"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/paths/~1users/get/responses/200/content/application~1json/schema/properties/meta"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1signature_requests/post/responses/201/content/application~1json/schema"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" }
        }
      }
    },
    "/signature_requests/{signatureRequestId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/parameters/0/schema"
          },
          "name": "signatureRequestId",
          "description": "Signature Request Id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "operationId": "get-signature_requests-signatureRequestId",
        "summary": "Fetch a signature request",
        "tags": ["Signature Request"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1signature_requests/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      },
      "patch": {
        "operationId": "patch-signature_requests-signatureRequestId",
        "summary": "Update a Signature Request",
        "tags": ["Signature Request"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128
                  },
                  "delivery_mode": {
                    "type": "string",
                    "enum": ["none", "email"],
                    "description": "Delivery mode to notify signers."
                  },
                  "ordered_signers": {
                    "type": "boolean",
                    "description": "Enable an ordered workflow, each signer will be requested to sign in a sequential order"
                  },
                  "reminder_settings": {
                    "type": "object",
                    "nullable": true,
                    "properties": {
                      "interval_in_days": {
                        "type": "number",
                        "enum": [1, 2, 7, 14]
                      },
                      "max_occurrences": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 10,
                        "example": 5
                      }
                    },
                    "required": ["interval_in_days", "max_occurrences"]
                  },
                  "timezone": {
                    "type": "string",
                    "example": "Europe/Paris",
                    "description": "tz database format"
                  },
                  "email_custom_note": {
                    "type": "string",
                    "maxLength": 500,
                    "example": "Please sign these documents as soon as possible.",
                    "nullable": true
                  },
                  "expiration_date": {
                    "type": "string",
                    "format": "date",
                    "description": "Due date of the signature request (yyyy-mm-dd).",
                    "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
                  },
                  "external_id": {
                    "type": "string",
                    "pattern": "^[\\w\\-@.%+]+$",
                    "maxLength": 255,
                    "nullable": true
                  },
                  "branding_id": {
                    "type": "string",
                    "format": "uuid",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "example": "3a93d3b5-fb3b-4abf-9e70-26315b33506b",
                    "nullable": true
                  },
                  "custom_experience_id": {
                    "type": "string",
                    "format": "uuid",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "example": "3a93d3b5-fb3b-4abf-9e70-26315b33506b",
                    "description": "Use a specific Custom Experience to customize the signature experience.",
                    "nullable": true
                  },
                  "workspace_id": {
                    "type": "string",
                    "description": "Transfer the Signature Request into a given Workspace.",
                    "format": "uuid",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "example": "3a93d3b5-fb3b-4abf-9e70-26315b33506b",
                    "nullable": true
                  },
                  "audit_trail_locale": {
                    "type": "string",
                    "enum": ["en", "fr"],
                    "description": "Define the locale for the generated audit trail.",
                    "nullable": true,
                    "example": "en"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1signature_requests/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      },
      "delete": {
        "operationId": "delete-signature_requests-signatureRequestId",
        "summary": "Delete a signature request",
        "description": "Delete a signature request (in draft status)",
        "tags": ["Signature Request"],
        "responses": {
          "204": {
            "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/delete/responses/204"
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      }
    },
    "/signature_requests/{signatureRequestId}/activate": {
      "parameters": [
        {
          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D/parameters/0"
        }
      ],
      "post": {
        "operationId": "post-signature_requests-signatureRequestId-signatures",
        "summary": "Activate a signature request",
        "tags": ["Signature Request"],
        "responses": {
          "201": {
            "description": "The signature request has been activated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "SignatureRequestActivated",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1,
                      "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "draft",
                        "ongoing",
                        "done",
                        "deleted",
                        "expired",
                        "canceled",
                        "approval",
                        "rejected"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "example": "signature request name"
                    },
                    "delivery_mode": {
                      "type": "string",
                      "enum": ["email", "none"]
                    },
                    "created_at": {
                      "type": "string",
                      "minLength": 1,
                      "example": "2024-01-18T22:59:00+00:00",
                      "format": "date-time"
                    },
                    "ordered_signers": {
                      "type": "boolean",
                      "description": "Enable an ordered workflow, each signer will be requested to sign in a sequential order"
                    },
                    "reminder_settings": {
                      "type": "object",
                      "required": ["interval_in_days", "max_occurrences"],
                      "nullable": true,
                      "properties": {
                        "interval_in_days": {
                          "type": "number",
                          "enum": [1, 2, 7, 14]
                        },
                        "max_occurrences": {
                          "type": "number",
                          "maximum": 10,
                          "minimum": 1
                        }
                      }
                    },
                    "timezone": { "type": "string", "example": "Europe/Paris" },
                    "email_custom_note": {
                      "type": "string",
                      "example": "Please sign these documents as soon as possible.",
                      "nullable": true
                    },
                    "expiration_date": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-18T22:59:00+00:00"
                    },
                    "signers": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "description": "",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "minLength": 1,
                            "format": "uuid"
                          },
                          "status": {
                            "type": "string",
                            "minLength": 1,
                            "enum": [
                              "initiated",
                              "notified",
                              "verified",
                              "processing",
                              "consent_given",
                              "signed",
                              "aborted",
                              "error"
                            ]
                          },
                          "signature_link": {
                            "nullable": true,
                            "type": "string",
                            "minLength": 1,
                            "format": "uri"
                          },
                          "signature_link_expiration_date": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-01-18T22:59:00+00:00"
                          }
                        },
                        "required": [
                          "id",
                          "status",
                          "signature_link",
                          "signature_link_expiration_date"
                        ]
                      }
                    },
                    "approvers": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "description": "",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "minLength": 1,
                            "format": "uuid"
                          },
                          "status": {
                            "type": "string",
                            "minLength": 1,
                            "enum": [
                              "initiated",
                              "notified",
                              "approved",
                              "rejected"
                            ]
                          },
                          "approval_link": {
                            "nullable": true,
                            "type": "string",
                            "minLength": 1,
                            "format": "uri"
                          },
                          "approval_link_expiration_date": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-01-18T22:59:00+00:00"
                          }
                        },
                        "required": [
                          "id",
                          "status",
                          "approval_link",
                          "approval_link_expiration_date"
                        ]
                      }
                    },
                    "documents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "nature": { "type": "string" }
                        },
                        "required": ["id", "nature"]
                      }
                    },
                    "external_id": {
                      "type": "string",
                      "maxLength": 255,
                      "pattern": "^[\\w\\-@.%+]+$",
                      "nullable": true
                    },
                    "branding_id": {
                      "type": "string",
                      "format": "uuid",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                      "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                      "nullable": true
                    },
                    "custom_experience_id": {
                      "type": "string",
                      "format": "uuid",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                      "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                      "nullable": true
                    },
                    "audit_trail_locale": {
                      "type": "string",
                      "enum": ["en", "fr"],
                      "example": "en"
                    }
                  },
                  "required": [
                    "id",
                    "status",
                    "name",
                    "delivery_mode",
                    "created_at",
                    "ordered_signers",
                    "reminder_settings",
                    "timezone",
                    "email_custom_note",
                    "expiration_date",
                    "signers",
                    "documents",
                    "external_id",
                    "branding_id",
                    "custom_experience_id",
                    "audit_trail_locale"
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      }
    },
    "/signature_requests/{signatureRequestId}/cancel": {
      "parameters": [
        {
          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D/parameters/0"
        }
      ],
      "post": {
        "operationId": "post-signature_requests-signatureRequestId-cancel",
        "summary": "Cancel a Signature Request",
        "tags": ["Signature Request"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "enum": [
                      "contractualization_aborted",
                      "errors_in_document",
                      "other"
                    ]
                  },
                  "custom_note": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 500
                  }
                },
                "required": ["reason", "custom_note"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The signature request has been canceled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1signature_requests/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      }
    },
    "/signature_requests/{signatureRequestId}/reactivate": {
      "parameters": [
        {
          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D/parameters/0"
        }
      ],
      "post": {
        "operationId": "post-signature_requests-signatureRequestId-reactivate",
        "summary": "Reactivate an expired signature request",
        "tags": ["Signature Request"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "expiration_date": {
                    "type": "string",
                    "format": "date",
                    "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                    "description": "Due date of the signature request (yyyy-mm-dd). Default to 6 month after the activation."
                  }
                },
                "required": ["expiration_date"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The signature request has been reactivated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1signature_requests/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      }
    },
    "/signature_requests/{signatureRequestId}/documents": {
      "parameters": [
        {
          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D/parameters/0"
        }
      ],
      "post": {
        "operationId": "post-signature_requests-signatureRequestId-documents",
        "summary": "Add Document to a Signature Request",
        "tags": ["Document"],
        "requestBody": {
          "description": "Sending file with metadata",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/paths/~1documents/post/requestBody/content/multipart~1form-data/schema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1documents/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      },
      "get": {
        "operationId": "get-signature_requests-signatureRequestId-documents",
        "summary": "List Signature Request's documents",
        "tags": ["Document"],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": ["attachment", "signable_document"]
            },
            "in": "query",
            "name": "nature",
            "description": "Filter by nature"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/paths/~1documents/post/responses/201/content/application~1json/schema"
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      }
    },
    "/signature_requests/{signatureRequestId}/documents/download": {
      "parameters": [
        {
          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D/parameters/0"
        }
      ],
      "get": {
        "operationId": "get-signature_requests-signatureRequestId-documents-download",
        "summary": "Download Signature Request's documents",
        "tags": ["Document"],
        "parameters": [
          {
            "schema": { "type": "string", "enum": ["current", "completed"] },
            "in": "query",
            "name": "version",
            "description": "Specify documents version to download, \"completed\" is only available when the signature request status is \"done\"."
          },
          {
            "schema": { "type": "boolean" },
            "in": "query",
            "name": "archive",
            "description": "Force zip archive download"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/zip, application/pdf": {
                "schema": { "type": "string", "format": "binary" }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      }
    },
    "/signature_requests/{signatureRequestId}/documents/{documentId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D/parameters/0"
        },
        {
          "schema": {
            "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/parameters/0/schema"
          },
          "name": "documentId",
          "in": "path",
          "required": true,
          "description": "Document Id"
        }
      ],
      "get": {
        "operationId": "get-signature_requests-:signatureRequestId-documents-:-documentId",
        "summary": "Get a Document",
        "tags": ["Document"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1documents/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      },
      "delete": {
        "operationId": "delete-signature_requests-signatureRequestId-documents-documentId",
        "summary": "Delete a Document",
        "tags": ["Document"],
        "responses": {
          "204": {
            "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/delete/responses/204"
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      },
      "patch": {
        "operationId": "patch-signature_requests-signatureRequestId-documents-documentId",
        "summary": "Update a Document",
        "tags": ["Document"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nature": {
                    "type": "string",
                    "enum": ["attachment", "signable_document"]
                  },
                  "insert_after_id": {
                    "type": "string",
                    "format": "uuid",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
                    "description": "Insert just after the position of the specified document id",
                    "nullable": true
                  },
                  "password": {
                    "type": "string",
                    "description": "The password required to unlock the document if it is protected",
                    "example": "MyPa$$word"
                  },
                  "initials": {
                    "nullable": true,
                    "anyOf": [
                      {
                        "$ref": "#/paths/~1documents/post/requestBody/content/multipart~1form-data/schema/properties/initials/anyOf/0"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1documents/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      }
    },
    "/signature_requests/{signatureRequestId}/documents/{documentId}/download": {
      "parameters": [
        {
          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D/parameters/0"
        },
        {
          "schema": {
            "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/parameters/0/schema"
          },
          "name": "documentId",
          "in": "path",
          "required": true,
          "description": "Document Id"
        }
      ],
      "get": {
        "operationId": "get-signature_requests-signatureRequestId-documents-documents-id-download",
        "summary": "Download a single Signature Request's Document",
        "tags": ["Document"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/pdf": {
                "schema": { "type": "string", "format": "binary" }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      }
    },
    "/signature_requests/{signatureRequestId}/documents/{documentId}/replace": {
      "parameters": [
        {
          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D/parameters/0"
        },
        {
          "schema": {
            "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/parameters/0/schema"
          },
          "name": "documentId",
          "in": "path",
          "required": true,
          "description": "Document Id"
        }
      ],
      "post": {
        "operationId": "post-signature_requests-signatureRequestId-documents-documentId-replace",
        "summary": "Replace a Document in a Signature Request",
        "tags": ["Document"],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": { "type": "string", "format": "binary" }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1documents/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      }
    },
    "/signature_requests/{signatureRequestId}/signers": {
      "parameters": [
        {
          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D/parameters/0"
        }
      ],
      "post": {
        "operationId": "post-signature_requests-signatureRequestId-signers",
        "summary": "Create a new Signer",
        "tags": ["Signer"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "oneOf": [
                  {
                    "description": "Create a new signer from scratch",
                    "properties": {
                      "info": {
                        "type": "object",
                        "required": [
                          "first_name",
                          "last_name",
                          "email",
                          "locale"
                        ],
                        "properties": {
                          "first_name": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                          },
                          "last_name": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                          },
                          "email": {
                            "type": "string",
                            "minLength": 1,
                            "format": "email"
                          },
                          "phone_number": {
                            "type": "string",
                            "minLength": 1,
                            "description": "E.164 format. Becomes mandatory if `signature_authentication_mode` requires a phone number.",
                            "nullable": true
                          },
                          "locale": {
                            "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1approvers~1%7BapproverId%7D/patch/requestBody/content/application~1json/schema/properties/info/properties/locale"
                          }
                        }
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "oneOf": [
                            {
                              "properties": {
                                "document_id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                                  "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": ["signature"]
                                },
                                "height": {
                                  "type": "number",
                                  "minimum": 37,
                                  "maximum": 32767,
                                  "description": "Default value is 37"
                                },
                                "width": {
                                  "type": "number",
                                  "minimum": 85,
                                  "maximum": 32767,
                                  "description": "Default value is 85"
                                },
                                "page": { "type": "number", "minimum": 1 },
                                "x": {
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 32767
                                },
                                "y": {
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 32767
                                }
                              },
                              "required": [
                                "document_id",
                                "type",
                                "page",
                                "x",
                                "y"
                              ]
                            },
                            {
                              "properties": {
                                "document_id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                                  "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": ["mention"]
                                },
                                "width": {
                                  "type": "number",
                                  "minimum": 24,
                                  "description": "If not set, the width is automatically calculated with the mention length"
                                },
                                "page": { "type": "number", "minimum": 1 },
                                "x": {
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 32767
                                },
                                "y": {
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 32767
                                },
                                "mention": { "type": "string" }
                              },
                              "required": [
                                "document_id",
                                "type",
                                "page",
                                "x",
                                "y",
                                "mention"
                              ]
                            },
                            {
                              "properties": {
                                "document_id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                                  "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                },
                                "type": { "type": "string", "enum": ["text"] },
                                "width": {
                                  "type": "number",
                                  "minimum": 24,
                                  "example": 90,
                                  "description": "If not set, the width is automatically calculated with the max_length value"
                                },
                                "height": {
                                  "type": "number",
                                  "minimum": 24,
                                  "example": 150,
                                  "description": "The height must be 24 or a multiple of 15 greater than 24. If height is provided, max_length must be less than or equal to the maximum number of characters based on the width and height of the text field."
                                },
                                "page": { "type": "number", "minimum": 1 },
                                "x": {
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 32767
                                },
                                "y": {
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 32767
                                },
                                "max_length": {
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 32767
                                },
                                "question": {
                                  "type": "string",
                                  "example": "Where is Brian ?",
                                  "maxLength": 255
                                },
                                "instruction": {
                                  "type": "string",
                                  "example": "Give Brian's location",
                                  "nullable": true
                                },
                                "optional": { "type": "boolean" }
                              },
                              "required": [
                                "document_id",
                                "type",
                                "page",
                                "x",
                                "y",
                                "max_length",
                                "question",
                                "optional"
                              ]
                            },
                            {
                              "properties": {
                                "document_id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                                  "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": ["checkbox"]
                                },
                                "page": { "type": "number", "minimum": 1 },
                                "x": {
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 32767
                                },
                                "y": {
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 32767
                                },
                                "size": {
                                  "type": "number",
                                  "minimum": 8,
                                  "maximum": 30,
                                  "description": "The omission of size parameter is considered as deprecated. The size determines both the width and height of the checkbox."
                                },
                                "optional": { "type": "boolean" },
                                "name": {
                                  "type": "string",
                                  "example": "Checkbox 1",
                                  "nullable": true
                                },
                                "checked": { "type": "boolean" }
                              },
                              "required": [
                                "document_id",
                                "type",
                                "page",
                                "x",
                                "y",
                                "optional",
                                "checked"
                              ]
                            },
                            {
                              "properties": {
                                "document_id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                                  "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": ["radio_group"]
                                },
                                "page": { "type": "number", "minimum": 1 },
                                "optional": { "type": "boolean" },
                                "radios": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "x": {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 32767
                                      },
                                      "y": {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 32767
                                      },
                                      "size": {
                                        "type": "number",
                                        "minimum": 8,
                                        "maximum": 30,
                                        "description": "The omission of size parameter is considered as deprecated. The size determines both the width and height of the checkbox."
                                      }
                                    },
                                    "required": ["x", "y"]
                                  }
                                }
                              },
                              "required": [
                                "document_id",
                                "type",
                                "page",
                                "optional",
                                "radios"
                              ]
                            }
                          ],
                          "type": "object"
                        }
                      },
                      "insert_after_id": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                        "description": "Insert just after the position of the specified signer id",
                        "nullable": true
                      },
                      "signature_level": {
                        "type": "string",
                        "enum": [
                          "electronic_signature",
                          "advanced_electronic_signature",
                          "electronic_signature_with_qualified_certificate",
                          "qualified_electronic_signature_mode_1"
                        ]
                      },
                      "signature_authentication_mode": {
                        "type": "string",
                        "enum": ["otp_email", "otp_sms", "no_otp"],
                        "nullable": true
                      },
                      "redirect_urls": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "nullable": true
                          },
                          "error": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "nullable": true
                          }
                        }
                      },
                      "custom_text": {
                        "type": "object",
                        "properties": {
                          "request_subject": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 150,
                            "nullable": true
                          },
                          "request_body": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 500,
                            "nullable": true
                          },
                          "reminder_subject": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 150,
                            "nullable": true
                          },
                          "reminder_body": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 500,
                            "nullable": true
                          }
                        }
                      },
                      "delivery_mode": {
                        "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1signers~1%7BsignerId%7D/patch/requestBody/content/application~1json/schema/properties/delivery_mode"
                      }
                    },
                    "required": ["info", "signature_level"]
                  },
                  {
                    "description": "Create a new signer from an existing user",
                    "properties": {
                      "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                        "description": "Create signer from an existing user"
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1signers/post/requestBody/content/application~1json/schema/oneOf/0/properties/fields/items"
                        }
                      },
                      "insert_after_id": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                        "description": "Insert just after the position of the specified signer id",
                        "nullable": true
                      },
                      "signature_level": {
                        "type": "string",
                        "enum": [
                          "electronic_signature",
                          "advanced_electronic_signature",
                          "electronic_signature_with_qualified_certificate",
                          "qualified_electronic_signature_mode_1"
                        ]
                      },
                      "signature_authentication_mode": {
                        "type": "string",
                        "enum": ["otp_email", "otp_sms", "no_otp"],
                        "nullable": true
                      },
                      "redirect_urls": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "nullable": true
                          },
                          "error": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "nullable": true
                          }
                        }
                      },
                      "custom_text": {
                        "type": "object",
                        "properties": {
                          "request_subject": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 150,
                            "nullable": true
                          },
                          "request_body": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 500,
                            "nullable": true
                          },
                          "reminder_subject": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 150,
                            "nullable": true
                          },
                          "reminder_body": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 500,
                            "nullable": true
                          }
                        }
                      },
                      "delivery_mode": {
                        "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1signers~1%7BsignerId%7D/patch/requestBody/content/application~1json/schema/properties/delivery_mode"
                      }
                    },
                    "required": ["user_id", "signature_level"]
                  },
                  {
                    "description": "Create a new signer from an existing contact",
                    "properties": {
                      "contact_id": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                        "description": "Create signer from an existing contact"
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1signers/post/requestBody/content/application~1json/schema/oneOf/0/properties/fields/items"
                        }
                      },
                      "insert_after_id": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                        "description": "Insert just after the position of the specified signer id",
                        "nullable": true
                      },
                      "signature_level": {
                        "type": "string",
                        "enum": [
                          "electronic_signature",
                          "advanced_electronic_signature",
                          "electronic_signature_with_qualified_certificate",
                          "qualified_electronic_signature_mode_1"
                        ]
                      },
                      "signature_authentication_mode": {
                        "type": "string",
                        "enum": ["otp_email", "otp_sms", "no_otp"],
                        "nullable": true
                      },
                      "redirect_urls": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "nullable": true
                          },
                          "error": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "nullable": true
                          }
                        }
                      },
                      "custom_text": {
                        "type": "object",
                        "properties": {
                          "request_subject": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 150,
                            "nullable": true
                          },
                          "request_body": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 500,
                            "nullable": true
                          },
                          "reminder_subject": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 150,
                            "nullable": true
                          },
                          "reminder_body": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 500,
                            "nullable": true
                          }
                        }
                      },
                      "delivery_mode": {
                        "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1signers~1%7BsignerId%7D/patch/requestBody/content/application~1json/schema/properties/delivery_mode"
                      }
                    },
                    "required": ["contact_id", "signature_level"]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Signer",
                  "type": "object",
                  "title": "Signer",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uuid"
                    },
                    "info": {
                      "type": "object",
                      "required": [
                        "first_name",
                        "last_name",
                        "email",
                        "phone_number",
                        "locale"
                      ],
                      "properties": {
                        "first_name": { "type": "string", "minLength": 1 },
                        "last_name": { "type": "string", "minLength": 1 },
                        "email": {
                          "type": "string",
                          "minLength": 1,
                          "format": "email"
                        },
                        "phone_number": {
                          "type": "string",
                          "minLength": 1,
                          "description": "E.164 format. Becomes mandatory if `signature_authentication_mode` requires a phone number.",
                          "nullable": true
                        },
                        "locale": {
                          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1approvers~1%7BapproverId%7D/patch/requestBody/content/application~1json/schema/properties/info/properties/locale"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "initiated",
                        "notified",
                        "verified",
                        "processing",
                        "consent_given",
                        "signed",
                        "aborted",
                        "error"
                      ],
                      "minLength": 1
                    },
                    "fields": {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "oneOf": [
                          {
                            "title": "FieldSignature",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                              },
                              "document_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                              },
                              "type": {
                                "type": "string",
                                "enum": ["signature"]
                              },
                              "height": {
                                "type": "number",
                                "minimum": 37,
                                "maximum": 32767
                              },
                              "width": {
                                "type": "number",
                                "minimum": 85,
                                "maximum": 32767
                              },
                              "page": { "type": "number", "minimum": 1 },
                              "x": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 32767
                              },
                              "y": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 32767
                              }
                            },
                            "required": [
                              "id",
                              "document_id",
                              "type",
                              "height",
                              "width",
                              "page",
                              "x",
                              "y"
                            ]
                          },
                          {
                            "title": "FieldText",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                              },
                              "document_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                              },
                              "type": { "type": "string", "enum": ["text"] },
                              "width": {
                                "type": "number",
                                "minimum": 24,
                                "example": 90,
                                "description": "If not set, the width is automatically calculated with the max_length value"
                              },
                              "height": {
                                "type": "number",
                                "minimum": 24,
                                "example": 150,
                                "description": "The height must be 24 or a multiple of 15 greater than 24. If height is provided, max_length must be less than or equal to the maximum number of characters based on the width and height of the text field."
                              },
                              "page": { "type": "number", "minimum": 1 },
                              "x": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 32767
                              },
                              "y": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 32767
                              },
                              "question": {
                                "type": "string",
                                "example": "Where is Brian ?",
                                "maxLength": 255
                              },
                              "instruction": {
                                "type": "string",
                                "nullable": true,
                                "example": "Give Brian's location"
                              },
                              "optional": { "type": "boolean" },
                              "answer": {
                                "type": "string",
                                "nullable": true,
                                "example": "Brian is in the kitchen !"
                              },
                              "max_length": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 32767
                              }
                            },
                            "required": [
                              "id",
                              "document_id",
                              "type",
                              "height",
                              "width",
                              "page",
                              "x",
                              "y",
                              "question",
                              "instruction",
                              "optional",
                              "answer",
                              "max_length"
                            ]
                          },
                          {
                            "title": "FieldMention",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                              },
                              "document_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                              },
                              "type": { "type": "string", "enum": ["mention"] },
                              "height": {
                                "type": "number",
                                "minimum": 24,
                                "maximum": 24
                              },
                              "width": { "type": "number", "minimum": 24 },
                              "page": { "type": "number", "minimum": 1 },
                              "x": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 32767
                              },
                              "y": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 32767
                              },
                              "mention": { "type": "string" }
                            },
                            "required": [
                              "id",
                              "document_id",
                              "type",
                              "height",
                              "width",
                              "page",
                              "x",
                              "y",
                              "mention"
                            ]
                          },
                          {
                            "title": "FieldCheckbox",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                              },
                              "document_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                              },
                              "type": {
                                "type": "string",
                                "enum": ["checkbox"]
                              },
                              "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 128,
                                "example": "Checkbox name",
                                "description": "Checkbox name",
                                "nullable": true
                              },
                              "checked": {
                                "type": "boolean",
                                "description": "Signer has checked the checkbox"
                              },
                              "page": { "type": "number", "minimum": 1 },
                              "optional": { "type": "boolean" },
                              "x": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 32767
                              },
                              "y": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 32767
                              },
                              "size": {
                                "type": "number",
                                "minimum": 8,
                                "maximum": 30,
                                "description": "The size determines both the width and height of the checkbox."
                              }
                            },
                            "required": [
                              "id",
                              "document_id",
                              "type",
                              "name",
                              "checked",
                              "page",
                              "optional",
                              "x",
                              "y"
                            ]
                          },
                          {
                            "title": "FieldRadioButtonGroup",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                              },
                              "document_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                              },
                              "type": {
                                "type": "string",
                                "enum": ["radio_group"]
                              },
                              "page": { "type": "number", "minimum": 1 },
                              "optional": {
                                "type": "boolean",
                                "description": "Does the Signer has to select one of the radio buttons from this group?"
                              },
                              "radios": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "x": {
                                      "type": "number",
                                      "minimum": 0,
                                      "maximum": 32767
                                    },
                                    "y": {
                                      "type": "number",
                                      "minimum": 0,
                                      "maximum": 32767
                                    },
                                    "size": {
                                      "type": "number",
                                      "minimum": 8,
                                      "maximum": 30,
                                      "description": "The size determines both the width and height of the checkbox."
                                    }
                                  },
                                  "required": ["x", "y", "size"]
                                }
                              }
                            },
                            "required": [
                              "id",
                              "document_id",
                              "type",
                              "page",
                              "optional",
                              "radios"
                            ]
                          }
                        ]
                      }
                    },
                    "signature_level": {
                      "type": "string",
                      "enum": [
                        "electronic_signature",
                        "advanced_electronic_signature",
                        "electronic_signature_with_qualified_certificate",
                        "qualified_electronic_signature_mode_1"
                      ],
                      "default": "electronic_signature"
                    },
                    "signature_authentication_mode": {
                      "type": "string",
                      "nullable": true,
                      "default": null,
                      "enum": [null, "otp_email", "otp_sms", "no_otp"]
                    },
                    "signature_link": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uri",
                      "nullable": true
                    },
                    "signature_link_expiration_date": {
                      "nullable": true,
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-18T22:59:00+00:00"
                    },
                    "signature_image_preview": {
                      "type": "string",
                      "minLength": 1,
                      "nullable": true
                    },
                    "redirect_urls": {
                      "type": "object",
                      "description": "",
                      "required": ["success", "error"],
                      "properties": {
                        "success": {
                          "type": "string",
                          "minLength": 1,
                          "example": "https://example.com/success",
                          "nullable": true
                        },
                        "error": {
                          "type": "string",
                          "minLength": 1,
                          "example": "https://example.com/error",
                          "nullable": true
                        }
                      }
                    },
                    "custom_text": {
                      "type": "object",
                      "required": [
                        "request_subject",
                        "request_body",
                        "reminder_subject",
                        "reminder_body"
                      ],
                      "properties": {
                        "request_subject": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 150,
                          "nullable": true
                        },
                        "request_body": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 500,
                          "nullable": true
                        },
                        "reminder_subject": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 150,
                          "nullable": true
                        },
                        "reminder_body": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 500,
                          "nullable": true
                        }
                      }
                    },
                    "delivery_mode": {
                      "type": "string",
                      "enum": ["email", "none"],
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "info",
                    "status",
                    "fields",
                    "signature_level",
                    "signature_authentication_mode",
                    "signature_link",
                    "signature_link_expiration_date",
                    "signature_image_preview",
                    "redirect_urls",
                    "custom_text",
                    "delivery_mode"
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      },
      "get": {
        "operationId": "get-signature_requests-signatureRequestId-signers",
        "summary": "List Signature Request's Signers",
        "tags": ["Signer"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1signers/post/responses/201/content/application~1json/schema"
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      }
    },
    "/signature_requests/{signatureRequestId}/signers/{signerId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D/parameters/0"
        },
        {
          "schema": {
            "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/parameters/0/schema"
          },
          "name": "signerId",
          "description": "Signer Id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "operationId": "get-signers-signersId",
        "summary": "Get a Signer",
        "tags": ["Signer"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1signers/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      },
      "patch": {
        "operationId": "patch-signature_requests-signatureRequestId-signers-signerId",
        "summary": "Update a Signer",
        "tags": ["Signer"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "info": {
                    "type": "object",
                    "nullable": true,
                    "properties": {
                      "first_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                      },
                      "last_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                      },
                      "email": {
                        "type": "string",
                        "minLength": 1,
                        "format": "email"
                      },
                      "phone_number": {
                        "type": "string",
                        "minLength": 1,
                        "description": "E.164 format"
                      },
                      "locale": {
                        "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1approvers~1%7BapproverId%7D/patch/requestBody/content/application~1json/schema/properties/info/properties/locale"
                      }
                    }
                  },
                  "insert_after_id": {
                    "type": "string",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "format": "uuid",
                    "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
                    "nullable": true
                  },
                  "signature_level": {
                    "type": "string",
                    "default": "electronic_signature",
                    "enum": [
                      "electronic_signature",
                      "advanced_electronic_signature",
                      "electronic_signature_with_qualified_certificate",
                      "qualified_electronic_signature_mode_1"
                    ]
                  },
                  "signature_authentication_mode": {
                    "type": "string",
                    "enum": ["otp_email", "otp_sms", "no_otp"],
                    "nullable": true
                  },
                  "redirect_urls": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255,
                        "nullable": true
                      },
                      "error": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255,
                        "nullable": true
                      }
                    }
                  },
                  "custom_text": {
                    "type": "object",
                    "properties": {
                      "request_subject": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 150,
                        "nullable": true
                      },
                      "request_body": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 500,
                        "nullable": true
                      },
                      "reminder_subject": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 150,
                        "nullable": true
                      },
                      "reminder_body": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 500,
                        "nullable": true
                      }
                    }
                  },
                  "delivery_mode": {
                    "type": "string",
                    "description": "Override the delivery mode of the Signature Request for this Signer",
                    "enum": ["email", "none"],
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1signers/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      },
      "delete": {
        "operationId": "delete-signature_requests-signatureRequestId-signers-signerId",
        "summary": "Delete a Signer",
        "tags": ["Signer"],
        "responses": {
          "204": {
            "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/delete/responses/204"
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      }
    },
    "/signature_requests/{signatureRequestId}/signers/{signerId}/send_reminder": {
      "parameters": [
        {
          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D/parameters/0"
        },
        {
          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1signers~1%7BsignerId%7D/parameters/1"
        }
      ],
      "post": {
        "operationId": "post-signature_requests-signatureRequestId-signers-signerId-send_reminder",
        "summary": "Send manual reminder to a Signer",
        "tags": ["Signature Request"],
        "responses": {
          "201": { "description": "Created" },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      }
    },
    "/signature_requests/{signatureRequestId}/signers/{signerId}/audit_trails/download": {
      "parameters": [
        {
          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D/parameters/0"
        },
        {
          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1signers~1%7BsignerId%7D/parameters/1"
        }
      ],
      "get": {
        "operationId": "get-signers-signerId-audit_trails-download",
        "summary": "Download audit trail PDF",
        "tags": ["Signer"],
        "responses": {
          "200": {
            "description": "Audit trail PDF",
            "content": {
              "application/pdf": {
                "schema": { "type": "string", "format": "binary" }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      }
    },
    "/signature_requests/{signatureRequestId}/signers/{signerId}/audit_trails": {
      "parameters": [
        {
          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D/parameters/0"
        },
        {
          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1signers~1%7BsignerId%7D/parameters/1"
        }
      ],
      "get": {
        "operationId": "get-signature_requests-signatureRequestId-signers-signerId-audit_trails",
        "summary": "Get signer audit trail",
        "tags": ["Signer"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": { "type": "number" },
                    "signature_request": { "type": "object" },
                    "sender": { "type": "object" },
                    "signer": { "type": "object" },
                    "documents": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {}
                    },
                    "organization": { "type": "object" },
                    "authentication": { "type": "object" },
                    "electronic_signature_level": { "type": "object" }
                  },
                  "required": [
                    "version",
                    "signature_request",
                    "sender",
                    "signer",
                    "documents",
                    "organization",
                    "authentication"
                  ],
                  "example": {
                    "sender": {
                      "id": "3409ab3f-9295-4a69-9923-e9d32d9533d6",
                      "type": "User",
                      "email": "johnny.wallyday@example.com",
                      "last_name": "Wallyday",
                      "first_name": "Johnny",
                      "ip_address": "172.18.0.1",
                      "phone_number": "+447123456789"
                    },
                    "signer": {
                      "id": "44e4b0f8-55c9-48a9-803f-d89957525270",
                      "last_name": "Wallyday",
                      "first_name": "Johnny",
                      "ip_address": "172.18.0.1",
                      "phone_number": "+447123456789",
                      "email_address": "johnny.wallyday@example.com",
                      "consent_given_at": "2021-07-05 12:21:42.352630",
                      "signature_process_completed_at": "2021-07-05 12:21:43.656000"
                    },
                    "version": 5,
                    "documents": [
                      {
                        "id": "a9534a42-bbc1-4355-b270-58f315eda779",
                        "name": "sample.pdf",
                        "mime_type": "application/pdf",
                        "signatures": [
                          {
                            "hash": "4396f6a9f0554928f7bcc8e645a6441cb432c1606137ac8f3a735aef83946974",
                            "reason": "Signed by Johnny Wallyday",
                            "certificate": {
                              "dn": "CN=Yousign, C=FR, O=Yousign, OU=794513986, serialNumber=2019-02-15 10:07:35:938",
                              "oid": "1.2.250.1.302.1.7.1.0",
                              "hash": "69570e2d5cc2b352b2249ba32b16195722099a89aa35de71ee1e745f771d66c5",
                              "content": "-----BEGIN CERTIFICATE-----\nMIIF8DCCA9igAwIBAgIIdfWiF8OAJo0wDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBTSUdOMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTkwMjE1MDg1NzM2WhcNMjIwMjE0\nMDkwNzAwWjBnMRAwDgYDVQQDDAdZb3VzaWduMSAwHgYDVQQFExcyMDE5LTAyLTE1\nIDEwOjA3OjM1OjkzODESMBAGA1UECwwJNzk0NTEzOTg2MRAwDgYDVQQKDAdZb3Vz\naWduMQswCQYDVQQGEwJGUjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nAIWI+w9xQ9uSt4Lb/l14Yu8yRvCWer06bzm5RFvqgZRiD2Cq2Vx8LNzi0pGCxBdI\nQ9nlWcxCAh67Lp/OygCKpUN2DnNiIiORK5b283VKASlGMy5frVOCKiq2YCz0vA6k\npIqzBP7DKV/CsZ3EqP0uw9C12EH3PrBJGQq4WOZI1Q5Fs2JAhOwfq/wq2orG424y\n0A9+smh8J3DjwSCoMQZrdHd/obK3w8AaTGI535dqWIZ0wKTZBZ7xahGAPGXo9cy9\nUXFtazxWGIcu5uYjRLtlUyialcUgB0db1eyOzFoRJCsaE6s7QgBhQUUfDkXs1UIp\nD0BfB/K2kPxGENm2Uk6WAfcCAwEAAaOCAYYwggGCMAwGA1UdEwEB/wQCMAAwHwYD\nVR0jBBgwFoAUzmRTx3jf2iI16mJGhB48l67NzPUwSwYDVR0gBEQwQjBABgoqgXoB\ngi4BBwEAMDIwMAYIKwYBBQUHAgEWJGh0dHA6Ly95b3VzaWduLmZyL2ZyL3B1Ymxp\nYy9kb2N1bWVudDAgBgNVHSUEGTAXBgorBgEEAYI3CgMMBgkqhkiG9y8BAQUwgbIG\nA1UdHwSBqjCBpzA1oDOgMYYvaHR0cDovL3RtcC55b3VzaWduLmZyL2NybC95b3Vz\naWduc2Fzc2lnbjJjYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAyLnlvdXNpZ24uZnIv\nY3JsL3lvdXNpZ25zYXNzaWduMmNhLmNybDA2oDSgMoYwaHR0cDovL3RtcDMueW91\nc2lnbi5mci9jcmwveW91c2lnbnNhc3NpZ24yY2EuY3JsMB0GA1UdDgQWBBTgXAE8\nONE89UOu8TjrtBH9cbd92jAOBgNVHQ8BAf8EBAMCBkAwDQYJKoZIhvcNAQELBQAD\nggIBAAF+VPpcphjyoU8RvQO14ojWV51wJxsx5ShsvtXPsQ7dBws8XmthuTyyYxtM\nE3dldkJsaQt8vK7/AUURwO7YX7PHVlwIqm2kpNThZ4+sEib3SOivP8vpfIP3mD0+\nIFREI/8adIWYyiYzp1xjuuAoZ6lyg2JsOQ/67nyS+y7sUQ++GfQulb5yjkMytmYs\nPJ0uyjnNAI/+hy4okIY7qgHFZaDGBSqdGU28NZcCEeBLwjcH4ET2Q1LvJ7nkKQMM\ncxw+TXdy7cgIAjdfCymjJ701s43JKI01NFrNZ0I20jTOuh2qB4Kf8fQFwmutTnRM\nP4ZglXsXZkyL9snUWwMSAP9QP13fPD6EDTTshyijvwHb6zbrFg3U7J0m/Sjmqp2A\nzD+pj777dQ2jg0zTJ3WLOosE1/tt60ygK3HhiVnnyM8sdjTrZ6ca9++TgnRthKss\nR35c/1Be3RJtYnar2yn3bA2pklLcjnV8Q3ZSks4ll7XnEI9V8EQSNHkmno7k+asl\nWeQ8eC82fkwCwzXMLBTt1kN+0qXfpvVoSITPSVlOvdCsFCRSC3JMYHUY6c9oUUlV\nCCEBWxe/Vm8R+AG4i3zk9wIoLDLW2eeOx1G61QFtIlgJPbKRLiDZhaGZq1PN8T2o\nD/1S7m9PMISw1hrWHpJM+gZpRLsfRp5EH3ieRFzt24fpIosf\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIGnDCCBISgAwIBAgIIfVpT4jgxW6cwDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBST09UMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTYwMTI3MTYyODExWhcNMjYwMTI3\nMTYyODExWjB/MSQwIgYDVQQDDBtZT1VTSUdOIFNBUyAtIFNJR04yIFRFU1QgQ0Ex\nEjAQBgNVBAsMCTc5NDUxMzk4NjEUMBIGA1UECgwLWU9VU0lHTiBTQVMxDTALBgNV\nBAcMBENBRU4xETAPBgNVBAgMCENBTFZBRE9TMQswCQYDVQQGEwJGUjCCAiIwDQYJ\nKoZIhvcNAQEBBQADggIPADCCAgoCggIBALUsirI2GYG9qu3U2S4V4JI0V9ohNP3W\nEpssSBcepPBV4UPtwAbFGvJqtGO/0nNZO0J7UwUb0sZBnedFl96tRQff3PECyO9k\n1B1/8rK1TbLPQPhTYWlrvX69wHXJFPxf/JkL4l4Lp6nFS80SYlaRj2RHHJ8HDj8S\nP1oULnhW2f2i8AlJwFe34eLJbWgeI5D7UAo59GMQ6bO4aVMaaDWvXsKOn8qmCUwF\ngtQNOqtYyLgURr4qivbjsZEv5H4Ee+wR5J+U6wd9dpIoTV2g1mExNlKVoj9qX9rh\n4al4G80fKNUT8bVnzxmdkDZzuzKm+rNIN6Fnc5CTHu2IcMHcuvKMRvsSJ+0fiz1E\nb/xsKO18Aiy5XOEQFqDrXRKC5AMmF/zB9Fh1Xe7Bi6IQo15NOjOCHLiBTARsMBJ8\nRWTuTv89qnL1lECogFusbptDG4Gu7Y7M13V8gOoGAxBs6uALjoseFZcnLQlIjZCV\nL0xyhrXFCLFnv4gy2+xY1bJNueD3cLFkzaxiCJ4WKesmRIfc6vHaQNl5NpU+9tFb\nU6o01c3fjZUdIh/MR3GFIXNpPsilhl///5aT5h2L98Gmb2q7tqSbFqm5z17MG3uS\ne4zCt+UD7MI8oCF2CELo79xMjtmqEwIf0IU8MxaLaLSZ0J164ZyHwvfIewgBp8XF\nqLn0jrZNiocXAgMBAAGjggEaMIIBFjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQY\nMBaAFGXEFaTuRlW+zr11R8A0QEYcGvuRMIGyBgNVHR8EgaowgacwNaAzoDGGL2h0\ndHA6Ly90bXAueW91c2lnbi5mci9jcmwveW91c2lnbnNhc3Jvb3QyY2EuY3JsMDag\nNKAyhjBodHRwOi8vdG1wMi55b3VzaWduLmZyL2NybC95b3VzaWduc2Fzcm9vdDJj\nYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAzLnlvdXNpZ24uZnIvY3JsL3lvdXNpZ25z\nYXNyb290MmNhLmNybDAdBgNVHQ4EFgQUzmRTx3jf2iI16mJGhB48l67NzPUwDgYD\nVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQBZ8ru8LEQ1qzQqG/Rx420f\ncN4YNM1cXV+DwpWOw46Oh9U7BG1i/wYPy6uEZvj/n+nm/MkbajrzTViZnKMRs7Wy\nCWBqvAfl4gcbWvrRzdVwsbd3UbsxD5UD1CkJYl5/4gPvCae6YVCF9WtnH2lSy/Gv\n5bbIfyXF++iNQn+lLe59EhA3WinTql/yk/SPUNVn4/IZ0UWrw1IPS3kmnIal1mk7\npL45n5G51qAHpSbAoTsCeRBJZ6jr38n+FimZahnBZTu4+XycDVicrydpsopQiTt8\nry+mP1b9Nd4eoHR4/F/82w1rNfAM0NJKL8w3qr8lMdxsbANMvW0ixgjRnBpuRRB4\n5iUA5Mb2DbiYJARBoruYqYGya317Gcvtk4w0O48CXR+HPXygHh/63De1JdOUjSc2\nHagr6jp7NKbn/XmWBjWuoG9J9d9sC5U/mgjw5Xjf9jKGuUGz46EtlzzpojVB7fJA\nE2Ye0kOuLANpoTFAI4EJe5nTJz0HsFG3nDshsD9Mb1/kUBSGUDWijL5f0LDqf562\nkTioMpkK7ivZxQksF8+bMId5sUNrDVA/6lhn8tD5gzGacSU7IMfIH3EUKcI1NoWm\nhV+aI8EbXP6251cF74y/tejTUQLdOQ9ut3PsxYmTTDqr8RPI6UZeh2yibzSmgGwU\nfylsTiF/gVGm5cpWCrULCw==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIGnDCCBISgAwIBAgIIT0TY3eM9ut0wDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBST09UMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTYwMTI3MTYyNjE2WhcNMzYwMTI3\nMTYyNjE2WjB/MSQwIgYDVQQDDBtZT1VTSUdOIFNBUyAtIFJPT1QyIFRFU1QgQ0Ex\nEjAQBgNVBAsMCTc5NDUxMzk4NjEUMBIGA1UECgwLWU9VU0lHTiBTQVMxDTALBgNV\nBAcMBENBRU4xETAPBgNVBAgMCENBTFZBRE9TMQswCQYDVQQGEwJGUjCCAiIwDQYJ\nKoZIhvcNAQEBBQADggIPADCCAgoCggIBALXMHUFwSacaI5TjtMRw4kJ9o1ve/IZo\noj+2HOpW3iqs74cmsYjpHbJD0UAdh3SpdlLFK1/WBf0uEbzn6z7gRfUkEAo5EnHs\nM1iTfCXWDtA+xd9X4h2UAVEdXRzglvOvT275fjI1uj9Zi4Rz95drhlGkZVCDIMuv\n7fazkT868grWSfGSUc2C8d9+kOL4pCKuSanOc/nwD61F+oQ6KeEMtmpbr57Yy+qY\ntaF6ieKiDGn0aDj3yImnA9YqfFlX4mCyn+LmiqrXyEn0Z5iYLbO0wXkyPqhcO9c9\ngS1Y8Y/1AEvxnaLlV3eG402ZYUS6tT27o+tpdCAIx+3zMhNsPI9wXUjlVr/8ts+/\nuOUUCUWoBK3J6R1zG3urCdnuor8xAaWK/OHtvg8rXoXEfi8ujWV3EbiwIwiUHVh4\nrJIE1vhsVPW/sTM9yEjRFks0swyoX6QupEuaZLV4DbmcEbmZ2XIH5Cw2c1qwUTk2\n8vQzKHszLdRb9scnjd3yHsef5ZAHS9hUoFIfG+MzINGm3U6v4exspSw/EshSavVj\nR+gL0l+sdK4L6xe++K++Gpp5xn5cZUJeg4YtdgGju7lMdGpJVVwl0Y8UAEJt9xgC\nMvGctrkoaUuBjOhrGQQITDMsNrtgi28s7rUB6k+yxcaGBBp2PyAIsIe0e1wKGm1N\nHjGtqY0IV1tFAgMBAAGjggEaMIIBFjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQY\nMBaAFGXEFaTuRlW+zr11R8A0QEYcGvuRMIGyBgNVHR8EgaowgacwNaAzoDGGL2h0\ndHA6Ly90bXAueW91c2lnbi5mci9jcmwveW91c2lnbnNhc3Jvb3QyY2EuY3JsMDag\nNKAyhjBodHRwOi8vdG1wMi55b3VzaWduLmZyL2NybC95b3VzaWduc2Fzcm9vdDJj\nYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAzLnlvdXNpZ24uZnIvY3JsL3lvdXNpZ25z\nYXNyb290MmNhLmNybDAdBgNVHQ4EFgQUZcQVpO5GVb7OvXVHwDRARhwa+5EwDgYD\nVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQCuxOXQDSYF0RpYQWonRDlU\nZ64IaGJ5buU4tGzf7rAgIQdXbO/VjjfF9UsjnLopNwWkuSJvINm21obYHcoSwvpz\nlwS/3uJCLxaw5q4SVJ4x5rajh/2qtFzcThSh48rcXcqoxAmc6BzQuIOm9cFUD2Ri\nqUJmg5O+CoLuE1b4i+CsCFL3AoWnBHFZ4YtInQBFIRBhMNPICvYOCF6jjgmMxkWU\nM8SEp7FSFfsy/oPI1dt+k9JjHCXhtWO9ndLvvwvLcjqRO3ItiF9IazsNcNLhaIMA\nlvYiQ+jLpckAuTxj7XHQyJSEofTMPr+ZSgQwUc337MJyxPhTDkch5cQBfnC20Usk\nyjdwwaeiwnNMhESwgDa4Oqw5IOmq+VmqtR+9F9yxACrpyph593F1zYwv7ikik5dI\nIYACb2fKLQrcnCfhm0k1Nt9UXoc9mQzFUK0DWJNLeGJo0rfRQh5ZqhcBG2U0KZFQ\nRtQQEf3zXJxQJGlCn1UMZMJswAzfhMTdGPNzyDI2u+9Q8WT7M2f59Idiae2m79uG\nuStRwN7Vnrpa399YXixOpNTz6d0NFBOAq1Nfwy5cnQDCnT9JkrKidrFKyA21b67m\nSfJIpMSPfFbt3g0h7JPWK7OC4Ydydh92e7/IUhtkudKMoazlwSJ7484dE7NyTpol\n62H0sW/1gmFzE6/QmCUR+w==\n-----END CERTIFICATE-----",
                              "generated_at": "2019-02-15 09:07:36.000000"
                            }
                          }
                        ],
                        "initial_hash": "8decc8571946d4cd70a024949e033a2a2a54377fe9f1c1b944c20f9ee11a9e51",
                        "initial_storage_id": "fdad7bcf-73d5-4a73-945d-ba7b738c530b"
                      }
                    ],
                    "organization": {
                      "id": "d89a0f7b-bd3f-494d-ab61-71b69f24a3d9",
                      "name": "Universalt Music"
                    },
                    "authentication": {
                      "mode": "sms",
                      "message": "eSIGNATURE: 791994 is your security code to confirm the signature of your documents.",
                      "validated_at": "2021-07-05 12:21:40.468338"
                    },
                    "signature_request": {
                      "id": "4d164217-60e7-4733-b56c-65ad637eadce",
                      "name": "My new request",
                      "sent_at": "2021-07-05 12:21:21.805745",
                      "expired_at": "2022-01-05 22:59:00.000000"
                    },
                    "electronic_signature_level": {
                      "level": "Simple electronic signature"
                    }
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      }
    },
    "/signature_requests/{signatureRequestId}/approvers": {
      "parameters": [
        {
          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D/parameters/0"
        }
      ],
      "post": {
        "summary": "Create a new approver",
        "operationId": "post-signature_requests-signatureRequestId-approvers",
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Approver",
                  "type": "object",
                  "title": "Approver",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "minLength": 1,
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                      "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744"
                    },
                    "status": {
                      "type": "string",
                      "enum": ["initiated", "notified", "approved", "rejected"]
                    },
                    "info": {
                      "type": "object",
                      "required": [
                        "first_name",
                        "last_name",
                        "email",
                        "phone_number",
                        "locale"
                      ],
                      "properties": {
                        "first_name": { "type": "string", "minLength": 1 },
                        "last_name": { "type": "string", "minLength": 1 },
                        "email": {
                          "type": "string",
                          "minLength": 1,
                          "format": "email"
                        },
                        "phone_number": {
                          "type": "string",
                          "minLength": 1,
                          "description": "E.164 format.",
                          "nullable": true
                        },
                        "locale": {
                          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1approvers~1%7BapproverId%7D/patch/requestBody/content/application~1json/schema/properties/info/properties/locale"
                        }
                      }
                    },
                    "approval_link": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uri",
                      "nullable": true
                    },
                    "approval_link_expiration_date": {
                      "nullable": true,
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-18T22:59:00+00:00"
                    }
                  },
                  "required": ["id", "status", "info"]
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "description": "Create a new approver from scratch",
                    "properties": {
                      "info": {
                        "type": "object",
                        "required": [
                          "first_name",
                          "last_name",
                          "email",
                          "locale"
                        ],
                        "properties": {
                          "first_name": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                          },
                          "last_name": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                          },
                          "email": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "E.164 format.",
                            "minLength": 1,
                            "nullable": true
                          },
                          "locale": {
                            "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1approvers~1%7BapproverId%7D/patch/requestBody/content/application~1json/schema/properties/info/properties/locale"
                          }
                        }
                      }
                    },
                    "required": ["info"]
                  },
                  {
                    "properties": {
                      "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                      }
                    },
                    "description": "Create a new approver from an existing user",
                    "required": ["user_id"]
                  },
                  {
                    "properties": {
                      "contact_id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "format": "uuid",
                        "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744"
                      }
                    },
                    "description": "Create a new approver from an existing contact",
                    "required": ["contact_id"]
                  },
                  {
                    "properties": {
                      "signer_id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "format": "uuid",
                        "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744"
                      }
                    },
                    "description": "Create a new approver from an existing signer",
                    "required": ["signer_id"]
                  }
                ],
                "type": "object"
              }
            }
          },
          "description": "An Approver object to be added to the signature request."
        },
        "tags": ["Approver"]
      }
    },
    "/signature_requests/{signatureRequestId}/approvers/{approverId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D/parameters/0"
        },
        {
          "schema": {
            "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/parameters/0/schema"
          },
          "name": "approverId",
          "description": "Approver Id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get an Approver",
        "operationId": "get-signature_requests-signatureRequestId-approvers-approverId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1approvers/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        },
        "tags": ["Approver"]
      },
      "delete": {
        "summary": "Delete an Approver",
        "operationId": "delete-signature_requests-signatureRequestId-approvers-approverId",
        "tags": ["Approver"],
        "responses": {
          "204": {
            "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/delete/responses/204"
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      },
      "patch": {
        "summary": "Update an Approver",
        "operationId": "patch-signature_requests-signatureRequestId-approvers-approverId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1approvers/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "info": {
                    "type": "object",
                    "nullable": true,
                    "properties": {
                      "first_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                      },
                      "last_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                      },
                      "email": {
                        "type": "string",
                        "minLength": 1,
                        "format": "email"
                      },
                      "phone_number": {
                        "type": "string",
                        "minLength": 1,
                        "description": "E.164 format"
                      },
                      "locale": {
                        "type": "string",
                        "enum": ["en", "fr", "de", "it", "nl", "es", "pl"],
                        "minLength": 1
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Approver"]
      }
    },
    "/signature_requests/{signatureRequestId}/followers": {
      "parameters": [
        {
          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D/parameters/0"
        }
      ],
      "post": {
        "operationId": "post-signature_requests-signatureRequestId-followers",
        "summary": "Create new followers",
        "tags": ["Follower"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "john.doe@example.com"
                    },
                    "locale": {
                      "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1approvers~1%7BapproverId%7D/patch/requestBody/content/application~1json/schema/properties/info/properties/locale"
                    }
                  },
                  "required": ["email", "locale"]
                },
                "description": "A list of Follower objects to be added to the signature request."
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                      },
                      "locale": {
                        "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1approvers~1%7BapproverId%7D/patch/requestBody/content/application~1json/schema/properties/info/properties/locale"
                      }
                    },
                    "required": ["email", "locale"]
                  },
                  "example": [
                    { "email": "john.doe@example.com", "locale": "fr" },
                    { "email": "jane.doe@example.com", "locale": "en" }
                  ],
                  "description": "A list of Followers added to the signature request."
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      }
    },
    "/signature_requests/{signatureRequestId}/audit_trails/download": {
      "parameters": [
        {
          "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D/parameters/0"
        }
      ],
      "get": {
        "operationId": "get-signature_requests-signatureRequestId-audit_trails-download",
        "summary": "Download signature request audit trails",
        "tags": ["Signature Request"],
        "responses": {
          "200": {
            "description": "Return an application/pdf or application/zip archive with all audit trails",
            "content": {
              "application/zip": {
                "schema": { "type": "string", "format": "binary" }
              },
              "application/pdf": {
                "schema": { "type": "string", "format": "binary" }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        },
        "parameters": []
      }
    },
    "/custom_experiences": {
      "post": {
        "summary": "Create a Custom Experience",
        "operationId": "post-custom-experience",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "landing_page_disabled": {
                    "type": "boolean",
                    "nullable": true,
                    "default": false
                  },
                  "side_panel_disabled": {
                    "type": "boolean",
                    "nullable": true,
                    "default": false
                  },
                  "background_color": { "type": "string", "nullable": true },
                  "button_color": { "type": "string", "nullable": true },
                  "text_color": { "type": "string", "nullable": true },
                  "text_button_color": { "type": "string", "nullable": true },
                  "disabled_notifications": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "type": "string",
                      "enum": [
                        "approver.expiration_date_reminder",
                        "approver.canceled",
                        "approver.expiration_date_updated",
                        "follower.approved",
                        "follower.canceled",
                        "follower.completed",
                        "follower.expired",
                        "follower.rejected",
                        "follower.signed",
                        "sender.approved",
                        "sender.canceled",
                        "sender.completed",
                        "sender.rejected",
                        "sender.signed",
                        "signer.expiration_date_reminder",
                        "signer.canceled",
                        "signer.completed",
                        "signer.signed",
                        "signer.expiration_date_updated",
                        "signer.signature_requested"
                      ],
                      "example": "approver.canceled"
                    }
                  },
                  "email_logo_disabled": {
                    "type": "boolean",
                    "nullable": true,
                    "default": false
                  },
                  "email_header_text_disabled": {
                    "type": "boolean",
                    "nullable": true,
                    "default": false
                  },
                  "email_footer_signature_disabled": {
                    "type": "boolean",
                    "nullable": true,
                    "default": false
                  },
                  "email_expiration_text_disabled": {
                    "type": "boolean",
                    "nullable": true,
                    "default": false
                  },
                  "redirect_urls": {
                    "type": "object",
                    "nullable": true,
                    "required": ["success", "error"],
                    "properties": {
                      "success": { "type": "string" },
                      "error": { "type": "string" }
                    }
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "name": { "type": "string" },
                    "landing_page_disabled": { "type": "boolean" },
                    "side_panel_disabled": { "type": "boolean" },
                    "background_color": { "type": "string", "nullable": true },
                    "button_color": { "type": "string", "nullable": true },
                    "text_color": { "type": "string", "nullable": true },
                    "text_button_color": { "type": "string", "nullable": true },
                    "disabled_notifications": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1custom_experiences/post/requestBody/content/application~1json/schema/properties/disabled_notifications/items"
                      }
                    },
                    "email_logo_disabled": { "type": "boolean" },
                    "email_header_text_disabled": { "type": "boolean" },
                    "email_footer_signature_disabled": { "type": "boolean" },
                    "email_expiration_text_disabled": { "type": "boolean" },
                    "redirect_urls": {
                      "type": "object",
                      "required": ["success", "error"],
                      "properties": {
                        "success": { "type": "string", "nullable": true },
                        "error": { "type": "string", "nullable": true }
                      }
                    },
                    "logo": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "https://yousign.com/custom_experience/89120884-d29a-4b1a-ac7b-a9e73a872795/logo"
                    },
                    "source": {
                      "type": "string",
                      "description": "Custom Experience Source",
                      "nullable": true,
                      "enum": ["app", "public_api"],
                      "example": "app"
                    },
                    "created_at": { "type": "string", "format": "date-time" }
                  },
                  "required": [
                    "id",
                    "landing_page_disabled",
                    "side_panel_disabled",
                    "background_color",
                    "button_color",
                    "text_color",
                    "text_button_color",
                    "disabled_notifications",
                    "email_logo_disabled",
                    "email_header_text_disabled",
                    "email_footer_signature_disabled",
                    "email_expiration_text_disabled",
                    "redirect_urls",
                    "logo",
                    "source",
                    "created_at"
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" }
        },
        "tags": ["Custom Experience"]
      },
      "get": {
        "summary": "List Custom Experiences",
        "operationId": "get-custom_experiences",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/paths/~1users/get/responses/200/content/application~1json/schema/properties/meta"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1custom_experiences/post/responses/201/content/application~1json/schema"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" }
        },
        "parameters": [{ "$ref": "#/paths/~1users/get/parameters/0" }],
        "tags": ["Custom Experience"]
      }
    },
    "/custom_experiences/{customExperienceId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/parameters/0/schema"
          },
          "in": "path",
          "name": "customExperienceId",
          "description": "Custom Experience Id",
          "required": true
        }
      ],
      "delete": {
        "summary": "Delete a Custom Experience",
        "operationId": "delete-custom_experience",
        "responses": {
          "204": {
            "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/delete/responses/204"
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        },
        "tags": ["Custom Experience"]
      },
      "patch": {
        "summary": "Update a Custom Experience",
        "operationId": "patch-custom_experiences-customExperienceId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1custom_experiences/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "landing_page_disabled": {
                    "type": "boolean",
                    "nullable": true,
                    "default": false
                  },
                  "side_panel_disabled": {
                    "type": "boolean",
                    "nullable": true,
                    "default": false
                  },
                  "background_color": { "type": "string", "nullable": true },
                  "button_color": { "type": "string", "nullable": true },
                  "text_color": { "type": "string", "nullable": true },
                  "text_button_color": { "type": "string", "nullable": true },
                  "disabled_notifications": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "$ref": "#/paths/~1custom_experiences/post/requestBody/content/application~1json/schema/properties/disabled_notifications/items"
                    }
                  },
                  "email_logo_disabled": {
                    "type": "boolean",
                    "nullable": true,
                    "default": false
                  },
                  "email_header_text_disabled": {
                    "type": "boolean",
                    "nullable": true,
                    "default": false
                  },
                  "email_footer_signature_disabled": {
                    "type": "boolean",
                    "nullable": true,
                    "default": false
                  },
                  "email_expiration_text_disabled": {
                    "type": "boolean",
                    "nullable": true,
                    "default": false
                  },
                  "redirect_urls": {
                    "type": "object",
                    "nullable": true,
                    "required": ["success", "error"],
                    "properties": {
                      "success": { "type": "string" },
                      "error": { "type": "string" }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [],
        "tags": ["Custom Experience"]
      },
      "get": {
        "summary": "Get a given Custom Experience",
        "operationId": "get-custom_experiences-customExperienceId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1custom_experiences/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        },
        "tags": ["Custom Experience"]
      }
    },
    "/custom_experiences/{customExperienceId}/logo": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/parameters/0/schema"
          },
          "in": "path",
          "name": "customExperienceId",
          "description": "Custom Experience Id",
          "required": true
        }
      ],
      "post": {
        "summary": "Update a Custom Experience Logo",
        "operationId": "patch-custom-experience-logo",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "description": "Upload a file",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "example": "Binary file"
                  }
                },
                "required": ["file"]
              }
            }
          },
          "description": "Update a Custom Experience Logo"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1custom_experiences/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" }
        },
        "tags": ["Custom Experience"]
      },
      "delete": {
        "summary": "Delete a Custom Experience Logo",
        "operationId": "delete-custom_experience-logo",
        "responses": {
          "204": {
            "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/delete/responses/204"
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        },
        "tags": ["Custom Experience"]
      }
    },
    "/electronic_seals": {
      "post": {
        "operationId": "post-electronic-seals",
        "summary": "Create an Electronic Seal",
        "tags": ["Electronic Seal"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "CreateElectronicSealPayload",
                "type": "object",
                "description": "Create an electronic seal",
                "properties": {
                  "document_id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "160473f9-156f-4583-848c-cbc3dec49b4a",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                  },
                  "image_id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "333fa90a-a629-4708-8fe9-160dcb055a9b",
                    "nullable": true,
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                  },
                  "external_id": {
                    "type": "string",
                    "pattern": "^[\\w\\-@.%+]+$",
                    "example": "externalId-123",
                    "maxLength": 255,
                    "description": "Store a custom id that will be added to webhooks",
                    "nullable": true
                  },
                  "timestamp": { "type": "boolean", "default": false },
                  "fields": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "title": "CreateElectronicSealFieldSealPayload",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "seal",
                              "enum": ["seal", "read_only_text"]
                            },
                            "height": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 32767,
                              "example": 200
                            },
                            "width": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 32767,
                              "example": 250
                            },
                            "page": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 32767,
                              "example": 1
                            },
                            "x": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 32767,
                              "example": 0
                            },
                            "y": {
                              "type": "integer",
                              "example": 0,
                              "minimum": 0,
                              "maximum": 32767
                            },
                            "reason": {
                              "type": "string",
                              "nullable": true,
                              "maxLength": 200,
                              "pattern": "^(?!\\s)[0-9A-Za-zĄÀÁÂÃÄÅÇĆÈÉÊËĘÌÍÎÏŁÑŃÒÓÔÕÖŚÙÚÛÜÝŹŻąàáâãäåæçćèéêëęìíîïłñńòóôõöśùúûüýÿźżß`\\'()\\- ]+(?<!\\s)$"
                            }
                          },
                          "required": [
                            "type",
                            "height",
                            "width",
                            "page",
                            "x",
                            "y"
                          ]
                        },
                        {
                          "title": "CreateElectronicSealFieldReadOnlyTextPayload",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": ["read_only_text"],
                              "example": "read_only_text"
                            },
                            "height": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 32767,
                              "example": 200
                            },
                            "width": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 32767,
                              "example": 250
                            },
                            "page": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 32767,
                              "example": 1
                            },
                            "x": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 32767,
                              "example": 0
                            },
                            "y": {
                              "type": "integer",
                              "example": 0,
                              "minimum": 0,
                              "maximum": 32767
                            },
                            "text": { "type": "string", "maxLength": 80 }
                          },
                          "required": [
                            "type",
                            "height",
                            "width",
                            "page",
                            "x",
                            "y"
                          ]
                        }
                      ],
                      "type": "object"
                    }
                  },
                  "signature_level": {
                    "type": "string",
                    "nullable": true,
                    "enum": [
                      "electronic_signature",
                      "advanced_electronic_signature"
                    ]
                  }
                },
                "required": ["document_id", "fields"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ElectronicSeal",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "1365283d-0ba5-4a08-9a58-9818ef428320",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                    },
                    "status": {
                      "type": "string",
                      "enum": ["pending", "processing", "done", "error"],
                      "example": "pending"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-18T22:59:00+00:00"
                    },
                    "document_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "37646975-7e73-41f1-be7f-f4d85d181d03",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                    },
                    "timestamp": { "type": "boolean" },
                    "image_id": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true,
                      "example": "6c82bd7a-d7f7-45e0-82f4-b92222567346",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                    },
                    "external_id": {
                      "type": "string",
                      "pattern": "^[\\w\\-@.%+]+$",
                      "example": "externalId-123",
                      "maxLength": 255,
                      "description": "Store a custom id that will be added to webhooks",
                      "nullable": true
                    },
                    "signature_level": {
                      "type": "string",
                      "example": "electronic_signature",
                      "enum": [
                        "electronic_signature",
                        "advanced_electronic_signature"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "status",
                    "created_at",
                    "document_id",
                    "timestamp",
                    "image_id",
                    "external_id",
                    "signature_level"
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" }
        }
      }
    },
    "/electronic_seals/{electronicSealId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/parameters/0/schema"
          },
          "in": "path",
          "name": "electronicSealId",
          "description": "Electronic Seal Id",
          "required": true
        }
      ],
      "get": {
        "operationId": "get-electronic-seal",
        "summary": "Get an Electronic Seal",
        "tags": ["Electronic Seal"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1electronic_seals/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      }
    },
    "/electronic_seals/{electronicSealId}/audit_trails": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/parameters/0/schema"
          },
          "in": "path",
          "name": "electronicSealId",
          "description": "Electronic Seal Id",
          "required": true
        }
      ],
      "get": {
        "operationId": "getElectronicSealAuditTrail",
        "summary": "Get an Electronic Seal Audit Trail",
        "description": "Get electronic seal audit trail",
        "tags": ["Electronic Seal"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": { "type": "number" },
                    "classification": { "type": "string" },
                    "organization": { "type": "object" },
                    "seal": { "type": "object" },
                    "document": { "type": "object" }
                  },
                  "required": [
                    "version",
                    "classification",
                    "organization",
                    "seal",
                    "document"
                  ],
                  "x-examples": {
                    "example-1": {
                      "version": 1,
                      "classification": "Confidential",
                      "organization": {
                        "id": "d89a0f7b-bd3f-494d-ab61-71b69f24a3d9",
                        "name": "Universalt Music"
                      },
                      "signer": {
                        "id": "44e4b0f8-55c9-48a9-803f-d89957525270",
                        "created_at": "2021-07-05 12:21:42.352630",
                        "seal_process_completed_at": "2021-07-05 12:21:43.656000",
                        "ip_address": "172.18.0.1"
                      },
                      "documents": {
                        "id": "a9534a42-bbc1-4355-b270-58f315eda779",
                        "initial_storage_id": "fdad7bcf-73d5-4a73-945d-ba7b738c530b",
                        "initial_hash": {
                          "algorithm": "sha256",
                          "value": "8decc8571946d4cd70a024949e033a2a2a54377fe9f1c1b944c20f9ee11a9e51"
                        },
                        "mime_type": "application/pdf",
                        "seals": [
                          {
                            "reason": "Signed by Yousign",
                            "hash": {
                              "algorithm": "sha256",
                              "value": "4396f6a9f0554928f7bcc8e645a6441cb432c1606137ac8f3a735aef83946974"
                            },
                            "timestamp": false,
                            "certificate": {
                              "dn": "CN=Yousign, C=FR, O=Yousign, OU=794513986, serialNumber=2019-02-15 10:07:35:938",
                              "oid": "1.2.250.1.302.1.7.1.0",
                              "generated_at": "2019-02-15 09:07:36.000000",
                              "hash": {
                                "algorithm": "sha256",
                                "value": "69570e2d5cc2b352b2249ba32b16195722099a89aa35de71ee1e745f771d66c5"
                              },
                              "content": "-----BEGIN CERTIFICATE-----\nMIIF8DCCA9igAwIBAgIIdfWiF8OAJo0wDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBTSUdOMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTkwMjE1MDg1NzM2WhcNMjIwMjE0\nMDkwNzAwWjBnMRAwDgYDVQQDDAdZb3VzaWduMSAwHgYDVQQFExcyMDE5LTAyLTE1\nIDEwOjA3OjM1OjkzODESMBAGA1UECwwJNzk0NTEzOTg2MRAwDgYDVQQKDAdZb3Vz\naWduMQswCQYDVQQGEwJGUjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nAIWI+w9xQ9uSt4Lb/l14Yu8yRvCWer06bzm5RFvqgZRiD2Cq2Vx8LNzi0pGCxBdI\nQ9nlWcxCAh67Lp/OygCKpUN2DnNiIiORK5b283VKASlGMy5frVOCKiq2YCz0vA6k\npIqzBP7DKV/CsZ3EqP0uw9C12EH3PrBJGQq4WOZI1Q5Fs2JAhOwfq/wq2orG424y\n0A9+smh8J3DjwSCoMQZrdHd/obK3w8AaTGI535dqWIZ0wKTZBZ7xahGAPGXo9cy9\nUXFtazxWGIcu5uYjRLtlUyialcUgB0db1eyOzFoRJCsaE6s7QgBhQUUfDkXs1UIp\nD0BfB/K2kPxGENm2Uk6WAfcCAwEAAaOCAYYwggGCMAwGA1UdEwEB/wQCMAAwHwYD\nVR0jBBgwFoAUzmRTx3jf2iI16mJGhB48l67NzPUwSwYDVR0gBEQwQjBABgoqgXoB\ngi4BBwEAMDIwMAYIKwYBBQUHAgEWJGh0dHA6Ly95b3VzaWduLmZyL2ZyL3B1Ymxp\nYy9kb2N1bWVudDAgBgNVHSUEGTAXBgorBgEEAYI3CgMMBgkqhkiG9y8BAQUwgbIG\nA1UdHwSBqjCBpzA1oDOgMYYvaHR0cDovL3RtcC55b3VzaWduLmZyL2NybC95b3Vz\naWduc2Fzc2lnbjJjYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAyLnlvdXNpZ24uZnIv\nY3JsL3lvdXNpZ25zYXNzaWduMmNhLmNybDA2oDSgMoYwaHR0cDovL3RtcDMueW91\nc2lnbi5mci9jcmwveW91c2lnbnNhc3NpZ24yY2EuY3JsMB0GA1UdDgQWBBTgXAE8\nONE89UOu8TjrtBH9cbd92jAOBgNVHQ8BAf8EBAMCBkAwDQYJKoZIhvcNAQELBQAD\nggIBAAF+VPpcphjyoU8RvQO14ojWV51wJxsx5ShsvtXPsQ7dBws8XmthuTyyYxtM\nE3dldkJsaQt8vK7/AUURwO7YX7PHVlwIqm2kpNThZ4+sEib3SOivP8vpfIP3mD0+\nIFREI/8adIWYyiYzp1xjuuAoZ6lyg2JsOQ/67nyS+y7sUQ++GfQulb5yjkMytmYs\nPJ0uyjnNAI/+hy4okIY7qgHFZaDGBSqdGU28NZcCEeBLwjcH4ET2Q1LvJ7nkKQMM\ncxw+TXdy7cgIAjdfCymjJ701s43JKI01NFrNZ0I20jTOuh2qB4Kf8fQFwmutTnRM\nP4ZglXsXZkyL9snUWwMSAP9QP13fPD6EDTTshyijvwHb6zbrFg3U7J0m/Sjmqp2A\nzD+pj777dQ2jg0zTJ3WLOosE1/tt60ygK3HhiVnnyM8sdjTrZ6ca9++TgnRthKss\nR35c/1Be3RJtYnar2yn3bA2pklLcjnV8Q3ZSks4ll7XnEI9V8EQSNHkmno7k+asl\nWeQ8eC82fkwCwzXMLBTt1kN+0qXfpvVoSITPSVlOvdCsFCRSC3JMYHUY6c9oUUlV\nCCEBWxe/Vm8R+AG4i3zk9wIoLDLW2eeOx1G61QFtIlgJPbKRLiDZhaGZq1PN8T2o\nD/1S7m9PMISw1hrWHpJM+gZpRLsfRp5EH3ieRFzt24fpIosf\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIGnDCCBISgAwIBAgIIfVpT4jgxW6cwDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBST09UMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTYwMTI3MTYyODExWhcNMjYwMTI3\nMTYyODExWjB/MSQwIgYDVQQDDBtZT1VTSUdOIFNBUyAtIFNJR04yIFRFU1QgQ0Ex\nEjAQBgNVBAsMCTc5NDUxMzk4NjEUMBIGA1UECgwLWU9VU0lHTiBTQVMxDTALBgNV\nBAcMBENBRU4xETAPBgNVBAgMCENBTFZBRE9TMQswCQYDVQQGEwJGUjCCAiIwDQYJ\nKoZIhvcNAQEBBQADggIPADCCAgoCggIBALUsirI2GYG9qu3U2S4V4JI0V9ohNP3W\nEpssSBcepPBV4UPtwAbFGvJqtGO/0nNZO0J7UwUb0sZBnedFl96tRQff3PECyO9k\n1B1/8rK1TbLPQPhTYWlrvX69wHXJFPxf/JkL4l4Lp6nFS80SYlaRj2RHHJ8HDj8S\nP1oULnhW2f2i8AlJwFe34eLJbWgeI5D7UAo59GMQ6bO4aVMaaDWvXsKOn8qmCUwF\ngtQNOqtYyLgURr4qivbjsZEv5H4Ee+wR5J+U6wd9dpIoTV2g1mExNlKVoj9qX9rh\n4al4G80fKNUT8bVnzxmdkDZzuzKm+rNIN6Fnc5CTHu2IcMHcuvKMRvsSJ+0fiz1E\nb/xsKO18Aiy5XOEQFqDrXRKC5AMmF/zB9Fh1Xe7Bi6IQo15NOjOCHLiBTARsMBJ8\nRWTuTv89qnL1lECogFusbptDG4Gu7Y7M13V8gOoGAxBs6uALjoseFZcnLQlIjZCV\nL0xyhrXFCLFnv4gy2+xY1bJNueD3cLFkzaxiCJ4WKesmRIfc6vHaQNl5NpU+9tFb\nU6o01c3fjZUdIh/MR3GFIXNpPsilhl///5aT5h2L98Gmb2q7tqSbFqm5z17MG3uS\ne4zCt+UD7MI8oCF2CELo79xMjtmqEwIf0IU8MxaLaLSZ0J164ZyHwvfIewgBp8XF\nqLn0jrZNiocXAgMBAAGjggEaMIIBFjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQY\nMBaAFGXEFaTuRlW+zr11R8A0QEYcGvuRMIGyBgNVHR8EgaowgacwNaAzoDGGL2h0\ndHA6Ly90bXAueW91c2lnbi5mci9jcmwveW91c2lnbnNhc3Jvb3QyY2EuY3JsMDag\nNKAyhjBodHRwOi8vdG1wMi55b3VzaWduLmZyL2NybC95b3VzaWduc2Fzcm9vdDJj\nYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAzLnlvdXNpZ24uZnIvY3JsL3lvdXNpZ25z\nYXNyb290MmNhLmNybDAdBgNVHQ4EFgQUzmRTx3jf2iI16mJGhB48l67NzPUwDgYD\nVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQBZ8ru8LEQ1qzQqG/Rx420f\ncN4YNM1cXV+DwpWOw46Oh9U7BG1i/wYPy6uEZvj/n+nm/MkbajrzTViZnKMRs7Wy\nCWBqvAfl4gcbWvrRzdVwsbd3UbsxD5UD1CkJYl5/4gPvCae6YVCF9WtnH2lSy/Gv\n5bbIfyXF++iNQn+lLe59EhA3WinTql/yk/SPUNVn4/IZ0UWrw1IPS3kmnIal1mk7\npL45n5G51qAHpSbAoTsCeRBJZ6jr38n+FimZahnBZTu4+XycDVicrydpsopQiTt8\nry+mP1b9Nd4eoHR4/F/82w1rNfAM0NJKL8w3qr8lMdxsbANMvW0ixgjRnBpuRRB4\n5iUA5Mb2DbiYJARBoruYqYGya317Gcvtk4w0O48CXR+HPXygHh/63De1JdOUjSc2\nHagr6jp7NKbn/XmWBjWuoG9J9d9sC5U/mgjw5Xjf9jKGuUGz46EtlzzpojVB7fJA\nE2Ye0kOuLANpoTFAI4EJe5nTJz0HsFG3nDshsD9Mb1/kUBSGUDWijL5f0LDqf562\nkTioMpkK7ivZxQksF8+bMId5sUNrDVA/6lhn8tD5gzGacSU7IMfIH3EUKcI1NoWm\nhV+aI8EbXP6251cF74y/tejTUQLdOQ9ut3PsxYmTTDqr8RPI6UZeh2yibzSmgGwU\nfylsTiF/gVGm5cpWCrULCw==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIGnDCCBISgAwIBAgIIT0TY3eM9ut0wDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBST09UMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTYwMTI3MTYyNjE2WhcNMzYwMTI3\nMTYyNjE2WjB/MSQwIgYDVQQDDBtZT1VTSUdOIFNBUyAtIFJPT1QyIFRFU1QgQ0Ex\nEjAQBgNVBAsMCTc5NDUxMzk4NjEUMBIGA1UECgwLWU9VU0lHTiBTQVMxDTALBgNV\nBAcMBENBRU4xETAPBgNVBAgMCENBTFZBRE9TMQswCQYDVQQGEwJGUjCCAiIwDQYJ\nKoZIhvcNAQEBBQADggIPADCCAgoCggIBALXMHUFwSacaI5TjtMRw4kJ9o1ve/IZo\noj+2HOpW3iqs74cmsYjpHbJD0UAdh3SpdlLFK1/WBf0uEbzn6z7gRfUkEAo5EnHs\nM1iTfCXWDtA+xd9X4h2UAVEdXRzglvOvT275fjI1uj9Zi4Rz95drhlGkZVCDIMuv\n7fazkT868grWSfGSUc2C8d9+kOL4pCKuSanOc/nwD61F+oQ6KeEMtmpbr57Yy+qY\ntaF6ieKiDGn0aDj3yImnA9YqfFlX4mCyn+LmiqrXyEn0Z5iYLbO0wXkyPqhcO9c9\ngS1Y8Y/1AEvxnaLlV3eG402ZYUS6tT27o+tpdCAIx+3zMhNsPI9wXUjlVr/8ts+/\nuOUUCUWoBK3J6R1zG3urCdnuor8xAaWK/OHtvg8rXoXEfi8ujWV3EbiwIwiUHVh4\nrJIE1vhsVPW/sTM9yEjRFks0swyoX6QupEuaZLV4DbmcEbmZ2XIH5Cw2c1qwUTk2\n8vQzKHszLdRb9scnjd3yHsef5ZAHS9hUoFIfG+MzINGm3U6v4exspSw/EshSavVj\nR+gL0l+sdK4L6xe++K++Gpp5xn5cZUJeg4YtdgGju7lMdGpJVVwl0Y8UAEJt9xgC\nMvGctrkoaUuBjOhrGQQITDMsNrtgi28s7rUB6k+yxcaGBBp2PyAIsIe0e1wKGm1N\nHjGtqY0IV1tFAgMBAAGjggEaMIIBFjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQY\nMBaAFGXEFaTuRlW+zr11R8A0QEYcGvuRMIGyBgNVHR8EgaowgacwNaAzoDGGL2h0\ndHA6Ly90bXAueW91c2lnbi5mci9jcmwveW91c2lnbnNhc3Jvb3QyY2EuY3JsMDag\nNKAyhjBodHRwOi8vdG1wMi55b3VzaWduLmZyL2NybC95b3VzaWduc2Fzcm9vdDJj\nYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAzLnlvdXNpZ24uZnIvY3JsL3lvdXNpZ25z\nYXNyb290MmNhLmNybDAdBgNVHQ4EFgQUZcQVpO5GVb7OvXVHwDRARhwa+5EwDgYD\nVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQCuxOXQDSYF0RpYQWonRDlU\nZ64IaGJ5buU4tGzf7rAgIQdXbO/VjjfF9UsjnLopNwWkuSJvINm21obYHcoSwvpz\nlwS/3uJCLxaw5q4SVJ4x5rajh/2qtFzcThSh48rcXcqoxAmc6BzQuIOm9cFUD2Ri\nqUJmg5O+CoLuE1b4i+CsCFL3AoWnBHFZ4YtInQBFIRBhMNPICvYOCF6jjgmMxkWU\nM8SEp7FSFfsy/oPI1dt+k9JjHCXhtWO9ndLvvwvLcjqRO3ItiF9IazsNcNLhaIMA\nlvYiQ+jLpckAuTxj7XHQyJSEofTMPr+ZSgQwUc337MJyxPhTDkch5cQBfnC20Usk\nyjdwwaeiwnNMhESwgDa4Oqw5IOmq+VmqtR+9F9yxACrpyph593F1zYwv7ikik5dI\nIYACb2fKLQrcnCfhm0k1Nt9UXoc9mQzFUK0DWJNLeGJo0rfRQh5ZqhcBG2U0KZFQ\nRtQQEf3zXJxQJGlCn1UMZMJswAzfhMTdGPNzyDI2u+9Q8WT7M2f59Idiae2m79uG\nuStRwN7Vnrpa399YXixOpNTz6d0NFBOAq1Nfwy5cnQDCnT9JkrKidrFKyA21b67m\nSfJIpMSPfFbt3g0h7JPWK7OC4Ydydh92e7/IUhtkudKMoazlwSJ7484dE7NyTpol\n62H0sW/1gmFzE6/QmCUR+w==\n-----END CERTIFICATE-----"
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      }
    },
    "/electronic_seals/{electronicSealId}/audit_trails/download": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/parameters/0/schema"
          },
          "in": "path",
          "name": "electronicSealId",
          "description": "Electronic Seal Id",
          "required": true
        }
      ],
      "get": {
        "operationId": "downloadElectronicSealAuditTrail",
        "summary": "Download an Electronic Seal Audit Trail",
        "tags": ["Electronic Seal"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/pdf": {
                "schema": { "type": "string", "format": "binary" }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      }
    },
    "/electronic_seal_documents": {
      "post": {
        "operationId": "uploadElectronicSealDocument",
        "summary": "Upload an Electronic Seal Document",
        "tags": ["Electronic Seal"],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "PDF file"
                  },
                  "password": { "type": "string", "example": "MyPa$$word" }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "1365283d-0ba5-4a08-9a58-9818ef428320",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-18T22:59:00+00:00"
                    }
                  },
                  "required": ["id", "created_at"]
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" }
        }
      }
    },
    "/electronic_seal_documents/{electronicSealDocumentId}/download": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/parameters/0/schema"
          },
          "in": "path",
          "name": "electronicSealDocumentId",
          "description": "Electronic Seal Document Id",
          "required": true
        }
      ],
      "get": {
        "operationId": "download-electronic-seal-document",
        "summary": "Download an Electronic Seal Document",
        "tags": ["Electronic Seal"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/pdf": {
                "schema": { "type": "string", "format": "binary" }
              }
            }
          },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      }
    },
    "/electronic_seal_images": {
      "post": {
        "operationId": "uploadElectronicSealImage",
        "summary": "Upload electronic seal image",
        "description": "Upload electronic seal image",
        "tags": ["Electronic Seal"],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Seal image"
                  },
                  "name": { "type": "string", "example": "My seal image" }
                },
                "required": ["file", "name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "1365283d-0ba5-4a08-9a58-9818ef428320",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                    },
                    "name": { "type": "string", "example": "My seal image" },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-18T22:59:00+00:00"
                    }
                  },
                  "required": ["id", "name", "created_at"]
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" }
        }
      }
    },
    "/webhooks": {
      "post": {
        "operationId": "post-webhooks-subscriptions",
        "summary": "Create a new Webhook subscription",
        "tags": ["Webhook"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "endpoint": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Https target URL of the webhook"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 128,
                    "example": "Lorem Ipsum",
                    "description": "Short description of the webhook",
                    "nullable": true
                  },
                  "sandbox": { "type": "boolean", "example": true },
                  "subscribed_events": {
                    "oneOf": [
                      {
                        "description": "Specific events",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "signature_request.done",
                            "signature_request.activated",
                            "signature_request.reminder_executed",
                            "signature_request.expired",
                            "signature_request.approved",
                            "signer.done",
                            "signer.notified",
                            "signer.link_opened",
                            "signer.identification_blocked",
                            "signer.sender_contacted",
                            "signer.error",
                            "contact.created",
                            "approver.notified",
                            "approver.approved",
                            "approver.rejected",
                            "electronic_seal.error",
                            "electronic_seal.done"
                          ]
                        }
                      },
                      {
                        "description": "All events",
                        "type": "array",
                        "items": { "type": "string", "enum": ["*"] }
                      }
                    ]
                  },
                  "secret_key": {
                    "type": "string",
                    "nullable": true,
                    "description": "Autogenerated 32 bytes key"
                  },
                  "scopes": {
                    "oneOf": [
                      {
                        "description": "Specific scopes",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "app",
                            "public_api",
                            "connector_salesforce_api",
                            "connector_hubspot_api"
                          ]
                        }
                      },
                      {
                        "description": "All scopes",
                        "type": "array",
                        "items": { "type": "string", "enum": ["*"] }
                      }
                    ]
                  },
                  "auto_retry": {
                    "type": "boolean",
                    "description": "If a Webhook request fails for any reason, Yousign will retry the request 8 times using a back-off mechanism after: 2, 6, 30, 60, 300, 1080, 1440, 2880 min"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Is the webhook enabled ?"
                  }
                },
                "required": [
                  "endpoint",
                  "description",
                  "sandbox",
                  "subscribed_events",
                  "scopes",
                  "auto_retry",
                  "enabled"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "WebhookSubscription",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                      "example": "89120884-d29a-4b1a-ac7b-a9e73a872795"
                    },
                    "endpoint": {
                      "type": "string",
                      "maxLength": 255,
                      "description": "Https target URL of the webhook"
                    },
                    "description": {
                      "type": "string",
                      "maxLength": 128,
                      "example": "Lorem Ipsum",
                      "description": "Short description of the webhook",
                      "nullable": true
                    },
                    "sandbox": { "type": "boolean", "example": false },
                    "subscribed_events": {
                      "oneOf": [
                        {
                          "description": "Specific events",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "signature_request.done",
                              "signature_request.activated",
                              "signature_request.reminder_executed",
                              "signature_request.expired",
                              "signature_request.approved",
                              "signer.done",
                              "signer.notified",
                              "signer.link_opened",
                              "signer.identification_blocked",
                              "signer.sender_contacted",
                              "signer.error",
                              "contact.created",
                              "approver.notified",
                              "approver.approved",
                              "approver.rejected",
                              "electronic_seal.error",
                              "electronic_seal.done"
                            ]
                          }
                        },
                        {
                          "description": "All events",
                          "type": "array",
                          "items": { "type": "string", "enum": ["*"] }
                        }
                      ]
                    },
                    "secret_key": {
                      "type": "string",
                      "description": "Autogenerated 32 bytes key"
                    },
                    "scopes": {
                      "oneOf": [
                        {
                          "description": "Specific scopes",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "app",
                              "public_api",
                              "connector_salesforce_api",
                              "connector_hubspot_api"
                            ]
                          }
                        },
                        {
                          "description": "All scopes",
                          "type": "array",
                          "items": { "type": "string", "enum": ["*"] }
                        }
                      ]
                    },
                    "auto_retry": {
                      "type": "boolean",
                      "description": "If a Webhook request fails for any reason, Yousign will retry the request 8 times using a back-off mechanism after: 2, 6, 30, 60, 300, 1080, 1440, 2880 min"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Is the webhook enabled ?"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2024-01-18T22:59:00+00:00",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "nullable": true,
                      "example": "2024-01-18T22:59:00+00:00",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "endpoint",
                    "description",
                    "sandbox",
                    "subscribed_events",
                    "secret_key",
                    "scopes",
                    "auto_retry",
                    "enabled",
                    "created_at",
                    "updated_at"
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      },
      "get": {
        "operationId": "get-webhooks",
        "summary": "List all Webhook subscriptions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/paths/~1webhooks/post/responses/201/content/application~1json/schema"
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": {
            "description": "Access forbidden",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "tags": ["Webhook"]
      }
    },
    "/webhooks/{webhookId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c"
          },
          "name": "webhookId",
          "description": "Webhook Id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "operationId": "get-webhooks-webhookId",
        "summary": "Get a Webhook subscription",
        "tags": ["Webhook"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1webhooks/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      },
      "delete": {
        "operationId": "delete-webhooks-webhookId",
        "summary": "Delete a Webhook subscription",
        "tags": ["Webhook"],
        "responses": {
          "204": { "description": "The resource was deleted successfully" },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      },
      "patch": {
        "operationId": "patch-webhooks-webhookId",
        "summary": "Update a Webhook subscription",
        "tags": ["Webhook"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "endpoint": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Https target URL of the webhook"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 128,
                    "example": "Lorem Ipsum",
                    "description": "Short description of the webhook",
                    "nullable": true
                  },
                  "sandbox": { "type": "boolean", "example": true },
                  "subscribed_events": {
                    "oneOf": [
                      {
                        "description": "Specific events",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "signature_request.done",
                            "signature_request.activated",
                            "signature_request.reminder_executed",
                            "signature_request.expired",
                            "signature_request.approved",
                            "signer.done",
                            "signer.notified",
                            "signer.link_opened",
                            "signer.identification_blocked",
                            "signer.sender_contacted",
                            "signer.error",
                            "contact.created",
                            "approver.notified",
                            "approver.approved",
                            "approver.rejected",
                            "electronic_seal.error",
                            "electronic_seal.done"
                          ]
                        }
                      },
                      {
                        "description": "All events",
                        "type": "array",
                        "items": { "type": "string", "enum": ["*"] }
                      }
                    ]
                  },
                  "secret_key": {
                    "type": "string",
                    "nullable": true,
                    "description": "Autogenerated 32 bytes key"
                  },
                  "scopes": {
                    "oneOf": [
                      {
                        "description": "Specific scopes",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "app",
                            "public_api",
                            "connector_salesforce_api",
                            "connector_hubspot_api"
                          ]
                        }
                      },
                      {
                        "description": "All scopes",
                        "type": "array",
                        "items": { "type": "string", "enum": ["*"] }
                      }
                    ]
                  },
                  "auto_retry": {
                    "type": "boolean",
                    "description": "If a Webhook request fails for any reason, Yousign will retry the request 8 times using a back-off mechanism after: 2, 6, 30, 60, 300, 1080, 1440, 2880 min"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Is the webhook enabled ?"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1webhooks/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        }
      }
    },
    "/contacts": {
      "post": {
        "summary": "Create a contact",
        "operationId": "post-contact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "John",
                    "minLength": 1
                  },
                  "last_name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john.doe@example.com"
                  },
                  "locale": {
                    "$ref": "#/paths/~1signature_requests~1%7BsignatureRequestId%7D~1approvers~1%7BapproverId%7D/patch/requestBody/content/application~1json/schema/properties/info/properties/locale"
                  },
                  "phone_number": {
                    "type": "string",
                    "minLength": 1,
                    "description": "E.164 format"
                  },
                  "company_name": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Yousign SAS",
                    "maxLength": 255
                  },
                  "job_title": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "example": "Developer"
                  },
                  "address_line_1": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "34 Rue Malfilatre"
                  },
                  "address_line_2": {
                    "type": "string",
                    "example": "1st floor",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "address_city": {
                    "type": "string",
                    "example": "Caen",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "address_postal_code": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "example": "14000"
                  },
                  "address_country": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "example": "France"
                  },
                  "workspace_id": {
                    "type": "string",
                    "format": "uuid",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "example": "69120884-d29a-4b1a-ac7b-a9e73a872795",
                    "nullable": true
                  }
                },
                "required": ["first_name", "last_name", "email", "locale"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Contact",
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "format": "uuid" },
                    "first_name": { "type": "string" },
                    "last_name": { "type": "string" },
                    "email": { "type": "string", "format": "email" },
                    "locale": { "type": "string" },
                    "phone_number": {
                      "type": "string",
                      "description": "E.164 format",
                      "nullable": true
                    },
                    "company_name": { "type": "string", "nullable": true },
                    "job_title": { "type": "string", "nullable": true },
                    "address_line_1": { "type": "string", "nullable": true },
                    "address_line_2": { "type": "string", "nullable": true },
                    "address_city": { "type": "string", "nullable": true },
                    "address_postal_code": {
                      "type": "string",
                      "nullable": true
                    },
                    "address_country": { "type": "string", "nullable": true },
                    "workspace_id": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true,
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                      "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c"
                    }
                  },
                  "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "email",
                    "locale",
                    "phone_number",
                    "company_name",
                    "job_title",
                    "address_line_1",
                    "address_line_2",
                    "address_city",
                    "address_postal_code",
                    "address_country"
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        },
        "tags": ["Contact"]
      },
      "get": {
        "summary": "List all Contacts",
        "operationId": "get-contacts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/paths/~1users/get/responses/200/content/application~1json/schema/properties/meta"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1contacts/post/responses/201/content/application~1json/schema"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" }
        },
        "parameters": [{ "$ref": "#/paths/~1users/get/parameters/0" }],
        "tags": ["Contact"]
      }
    },
    "/contacts/{contactId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/parameters/0/schema"
          },
          "in": "path",
          "name": "contactId",
          "description": "Contact Id",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a Contact",
        "operationId": "get-contact-contactId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1contacts/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        },
        "tags": ["Contact"]
      },
      "delete": {
        "summary": "Delete a Contact",
        "operationId": "delete-contacts-contactId",
        "responses": {
          "204": { "description": "No Content" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        },
        "tags": ["Contact"]
      }
    },
    "/consumptions": {
      "get": {
        "summary": "Get consumptions",
        "description": "Get signatures consumption by source",
        "operationId": "get-consumptions",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "example": "2022-12-10"
            },
            "in": "query",
            "name": "from",
            "description": "The \"from\" date must not be more than 1 year in the past",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/paths/~1consumptions/get/parameters/0/schema"
            },
            "in": "query",
            "name": "to",
            "description": "The \"to\" date must be more recent than the \"from\" date",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/parameters/0/schema"
            },
            "in": "query",
            "name": "authentication_key"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "app": {
                      "type": "object",
                      "required": [
                        "electronic_signature",
                        "advanced_electronic_signature",
                        "advanced_electronic_signature_with_qualified_certificate"
                      ],
                      "properties": {
                        "electronic_signature": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "advanced_electronic_signature": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "advanced_electronic_signature_with_qualified_certificate": {
                          "type": "integer",
                          "minimum": 0
                        }
                      }
                    },
                    "api": {
                      "type": "object",
                      "required": [
                        "electronic_signature",
                        "advanced_electronic_signature",
                        "advanced_electronic_signature_with_qualified_certificate"
                      ],
                      "properties": {
                        "electronic_signature": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "advanced_electronic_signature": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "advanced_electronic_signature_with_qualified_certificate": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "electronic_seal": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "connector": {
                      "type": "object",
                      "required": [
                        "electronic_signature",
                        "advanced_electronic_signature",
                        "advanced_electronic_signature_with_qualified_certificate"
                      ],
                      "properties": {
                        "electronic_signature": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "advanced_electronic_signature": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "advanced_electronic_signature_with_qualified_certificate": {
                          "type": "integer",
                          "minimum": 0
                        }
                      }
                    }
                  },
                  "required": ["app", "api", "connector"]
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        },
        "tags": ["Consumption"]
      }
    },
    "/consumptions/export": {
      "get": {
        "summary": "Export consumption data",
        "description": "Get a binary .csv file containing all the consumption data of the underlying signatures",
        "operationId": "get-consumptions-export",
        "parameters": [
          {
            "schema": {
              "$ref": "#/paths/~1consumptions/get/parameters/0/schema"
            },
            "in": "query",
            "name": "from",
            "description": "The \"from\" date must not be more than 1 year in the past",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/paths/~1consumptions/get/parameters/0/schema"
            },
            "in": "query",
            "name": "to",
            "description": "The \"to\" date must be more recent than the \"from\" date",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/paths/~1webhooks~1%7BwebhookId%7D/parameters/0/schema"
            },
            "in": "query",
            "name": "authentication_key"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a .csv file containing the raw consumption data.",
            "content": { "text/csv": { "schema": { "type": "string" } } }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" },
          "404": { "$ref": "#/paths/~1webhooks/post/responses/404" }
        },
        "tags": ["Consumption"]
      }
    },
    "/workspaces": {
      "get": {
        "operationId": "get-workspaces",
        "summary": "List all Workspaces",
        "tags": ["Workspace"],
        "parameters": [{ "$ref": "#/paths/~1users/get/parameters/0" }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/paths/~1users/get/responses/200/content/application~1json/schema/properties/meta"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Workspace",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                            "readOnly": true
                          },
                          "name": { "type": "string" },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "users": {
                            "type": "array",
                            "items": { "type": "object" },
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                                "readOnly": true
                              }
                            }
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "created_at",
                          "updated_at",
                          "users"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" }
        }
      }
    },
    "/users": {
      "get": {
        "operationId": "get-users",
        "summary": "List all Users",
        "tags": ["User"],
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "required": false,
            "schema": { "type": "string" },
            "description": "After cursor (pagination)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "type": "object",
                      "description": "Cursor based pagination",
                      "properties": {
                        "next_cursor": {
                          "type": "string",
                          "nullable": true,
                          "minLength": 1
                        }
                      },
                      "required": ["next_cursor"]
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "User",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c"
                          },
                          "first_name": { "type": "string" },
                          "last_name": { "type": "string" },
                          "email": { "type": "string", "format": "email" },
                          "phone_number": {
                            "type": "string",
                            "description": "E.164 format"
                          },
                          "locale": { "type": "string" },
                          "avatar": { "type": "string", "nullable": true },
                          "job_title": { "type": "string", "nullable": true },
                          "is_active": { "type": "boolean" },
                          "role": {
                            "type": "string",
                            "enum": ["owner", "admin", "member"]
                          },
                          "workspaces": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                                  "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c"
                                }
                              },
                              "required": ["id"]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "first_name",
                          "last_name",
                          "email",
                          "phone_number",
                          "locale",
                          "avatar",
                          "job_title",
                          "is_active",
                          "role"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ViolationResponse",
                  "type": "object",
                  "properties": {
                    "type": { "type": "string" },
                    "detail": { "type": "string" }
                  },
                  "required": ["type", "detail"]
                }
              }
            }
          },
          "401": {
            "description": "Access unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "detail": { "type": "string" } },
                  "required": ["detail"]
                }
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/documents": {
      "post": {
        "operationId": "post-documents",
        "summary": "Upload a Document",
        "deprecated": true,
        "x-readme": { "samples-enabled": false, "explorer-enabled": false },
        "tags": ["Document"],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Binary file"
                  },
                  "nature": {
                    "type": "string",
                    "enum": ["attachment", "signable_document"]
                  },
                  "password": { "type": "string", "example": "MyPa$$word" },
                  "initials": {
                    "nullable": true,
                    "anyOf": [
                      {
                        "title": "InitialsArea",
                        "type": "object",
                        "properties": {
                          "alignment": {
                            "type": "string",
                            "enum": ["left", "right", "center"],
                            "description": "Initials alignment on the document"
                          },
                          "y": {
                            "type": "integer",
                            "minimum": 0,
                            "example": 10,
                            "description": "y-axis position on the document"
                          }
                        },
                        "required": ["alignment", "y"]
                      }
                    ]
                  },
                  "parse_anchors": { "type": "boolean" }
                },
                "required": ["file", "nature"]
              }
            }
          },
          "description": "Upload a Document"
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Document to attach to a Signature Request",
                  "type": "object",
                  "title": "Document",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "89120884-d29a-4b1a-ac7b-a9e73a872796",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                      "format": "uuid"
                    },
                    "filename": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255
                    },
                    "nature": {
                      "type": "string",
                      "enum": ["attachment", "signable_document"]
                    },
                    "content_type": {
                      "type": "string",
                      "example": "application/pdf"
                    },
                    "sha256": {
                      "type": "string",
                      "description": "Sha256 checksum"
                    },
                    "is_protected": { "type": "boolean" },
                    "is_signed": { "type": "boolean" },
                    "created_at": {
                      "type": "string",
                      "example": "2024-01-18T22:59:00+00:00",
                      "format": "date-time"
                    },
                    "total_pages": {
                      "type": "integer",
                      "description": "Number of pages for signable document",
                      "minimum": 1,
                      "nullable": true
                    },
                    "is_locked": {
                      "type": "boolean",
                      "description": "If protected by password and not yet unlocked"
                    },
                    "initials": {
                      "type": "object",
                      "required": ["alignment", "y"],
                      "nullable": true,
                      "properties": {
                        "alignment": {
                          "type": "string",
                          "enum": ["left", "center", "right"],
                          "description": "Initials alignment on the document"
                        },
                        "y": {
                          "type": "integer",
                          "description": " y-axis position on the document",
                          "minimum": 0
                        }
                      }
                    },
                    "total_anchors": {
                      "type": "integer",
                      "description": "Number of parsed anchors from the document."
                    }
                  },
                  "required": [
                    "id",
                    "filename",
                    "nature",
                    "content_type",
                    "sha256",
                    "is_protected",
                    "is_signed",
                    "created_at",
                    "total_pages",
                    "is_locked",
                    "initials",
                    "total_anchors"
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/paths/~1users/get/responses/400" },
          "401": { "$ref": "#/paths/~1users/get/responses/401" },
          "403": { "$ref": "#/paths/~1webhooks/get/responses/403" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": { "bearerAuth": { "type": "http", "scheme": "bearer" } }
  },
  "tags": [
    { "name": "Approver" },
    { "name": "Consumption" },
    { "name": "Contact" },
    { "name": "Custom Experience" },
    { "name": "Document" },
    { "name": "Electronic Seal" },
    { "name": "Fields" },
    { "name": "Follower" },
    { "name": "Signature Request" },
    { "name": "Signer" },
    { "name": "User" },
    { "name": "Webhook" },
    { "name": "Workspace" }
  ],
  "security": [{ "bearerAuth": [] }],
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}
