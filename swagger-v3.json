{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "contact@yousign.com",
      "name": "Support",
      "url": "https://yousign.com/contact"
    },
    "description": "Build the best experience of digital signature through your own platform. Increase your conversion rates, leverage your data and reduce your costs with Yousign API.",
    "license": { "name": "proprietary", "url": "https://yousign.com/terms" },
    "title": "Public Api v3",
    "version": "3.0"
  },
  "servers": [
    {
      "description": "Sandbox URL",
      "url": "https://api-sandbox.yousign.app/v3"
    },
    { "description": "Production URL", "url": "https://api.yousign.app/v3" }
  ],
  "security": [{ "bearerAuth": [] }],
  "tags": [
    {
      "description": "Person responsible for validating a Signature Request.",
      "name": "Approver"
    },
    {
      "description": "Set of documents generated once a Signature Request is completed.",
      "name": "Audit Trail"
    },
    {
      "description": "This resource provides tracking of the API usage.",
      "name": "Consumption"
    },
    {
      "description": "A saved profile containing some information (name, language, email address, etc.) that can be re-used to create a Signer, Approver, or Follower.",
      "name": "Contact"
    },
    {
      "description": "Allows to customize the look and feel of the signature experience.",
      "name": "Custom Experience"
    },
    {
      "description": "Document that is attached to the Signature Request.",
      "name": "Document"
    },
    {
      "description": "This resource is the digital version of the company stamp.",
      "name": "Electronic Seal"
    },
    {
      "description": "Set of documents generated once a Electronic Seal is completed.",
      "name": "Electronic Seal Audit Trail"
    },
    {
      "description": "Document that is attached to the Electronic Seal.",
      "name": "Electronic Seal Document"
    },
    {
      "description": "Set of Image which can be used in Electronic Seal.",
      "name": "Electronic Seal Image"
    },
    {
      "description": "Dynamic content that will appear on a Document.",
      "name": "Field"
    },
    {
      "description": "Person who is kept informed about the progress of the signing process without being an Approver or a Signer.",
      "name": "Follower"
    },
    {
      "description": "Categorization tag that can be added to a Signature Request.",
      "name": "Label"
    },
    {
      "description": "Extra information attached to a Signature Request.",
      "name": "Metadata"
    },
    {
      "description": "Process of inviting Signers to sign a Document.",
      "name": "Signature Request"
    },
    {
      "description": "Person who will sign a Signature Request.",
      "name": "Signer"
    },
    {
      "description": "Process of asking signers to upload specific documents during the signature process.",
      "name": "Signer Document Request"
    },
    {
      "description": "Process of asking signers to consent to specific needs during the signature process.",
      "name": "Signer Consent Request"
    },
    {
      "description": "A person who can access the Yousign web app of your organization.",
      "name": "User"
    },
    {
      "description": "The Invitation of a new User to join the Yousign organization.",
      "name": "User Invitation"
    },
    {
      "description": "Webhook subscription; enables real-time notifications about events that happen in your Yousign organization.",
      "name": "Webhook"
    },
    {
      "description": "A way to partition your Yousign organization into separate entities.",
      "name": "Workspace"
    },
    {
      "description": "Pre-configuration of all elements of a Signature Request, such as Documents, Signers, Approvers, Fields, and settings.",
      "name": "Template"
    },
    {
      "description": "A feature allowing to store and retrieve documents on Arkhineo for some customers migrated from v2",
      "name": "Archive"
    },
    {
      "description": "Operations that are in beta version, and may be changed or removed in the future.",
      "name": "Beta"
    },
    {
      "description": "Operations that are no longer recommended for use.",
      "name": "Deprecated"
    },
    {
      "description": "KYC Process of verifying the identity associated with a bank account document.",
      "name": "Bank Account Verification"
    },
    {
      "description": "KYC Process of verifying the identity associated with an identity document.",
      "name": "Identity Document Verification"
    },
    {
      "description": "KYC Process of verifying the identity associated with a document.",
      "name": "Identity Video Verification"
    },
    {
      "description": "Retrieve structured and official data about a company.",
      "name": "Company Verification"
    },
    {
      "description": "Check if individuals appear on international sanctions lists or as politically exposed persons (PEPs).",
      "name": "Watchlist Verification"
    },
    {
      "description": "KYC Process of verifying a proof of address document.",
      "name": "Proof of Address Verification"
    },
    {
      "description": "KYC Process of verifying the ownership of a bank account.",
      "name": "Bank Account Connection Verification"
    },
    {
      "description": "KYC Process of verifying a person’s or company’s banking information via the Sepamail DIAMOND network.",
      "name": "Bank Account Lookup Verification"
    }
  ],
  "paths": {
    "/archives": {
      "post": {
        "description": "Archive a file in a secure digital safe for 10 years",
        "operationId": "post-archives",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": { "$ref": "#/components/schemas/UploadArchivedFile" }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ArchivedFile" }
              }
            },
            "description": "The upload of the archived file is successful.",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Direct upload an archived file",
        "tags": ["Archive"]
      }
    },
    "/archives/{archivedFileId}/download": {
      "get": {
        "description": "Download the archived file using the ArchivedFileId.",
        "operationId": "get-archives-archivedFileId-download",
        "parameters": [
          {
            "description": "ArchivedFileId",
            "in": "path",
            "name": "archivedFileId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": { "format": "binary", "type": "string" }
              }
            },
            "description": "Download of archived file is successful",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Download archived file",
        "tags": ["Archive"]
      }
    },
    "/bank_account_verifications": {
      "get": {
        "deprecated": true,
        "description": "Deprecated endpoint, do not use.\nReturns the list of all Bank Account Verifications within your organization.\n",
        "operationId": "get-bank_account_verifications",
        "parameters": [
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Filter by status",
            "in": "query",
            "name": "status",
            "schema": {
              "enum": ["pending", "approved", "declined", "inconclusive"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_bank_account_verifications_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "[DEPRECATED] List Bank Account Verifications",
        "tags": ["Deprecated"]
      },
      "post": {
        "deprecated": true,
        "description": "Deprecated endpoint, do not use.\nCreates a new Bank Account Verification resource.\n",
        "operationId": "post-bank_account_verifications",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/LegacyCreateBankAccountVerification"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyBankAccountVerificationCreated"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "[DEPRECATED] Initiate a new Bank Account Verification",
        "tags": ["Deprecated"]
      }
    },
    "/bank_account_verifications/{bankAccountVerificationId}": {
      "get": {
        "deprecated": true,
        "description": "Deprecated endpoint, do not use.\nGet the detailed results of a bank account verification.\n",
        "operationId": "get-bank_account_verifications-bankAccountVerificationId",
        "parameters": [
          {
            "description": "The bank account verification ID",
            "in": "path",
            "name": "bankAccountVerificationId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_bank_account_verifications_bankAccountVerificationId_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "[DEPRECATED] Retrieve a bank account verification",
        "tags": ["Deprecated"]
      }
    },
    "/consumptions": {
      "get": {
        "deprecated": true,
        "description": "Get signatures Consumption by source",
        "operationId": "get-consumptions",
        "parameters": [
          {
            "description": "The \"from\" date must not be more than 1 year in the past",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": { "$ref": "#/components/schemas/DateYMD" }
          },
          {
            "description": "The \"to\" date must be more recent than the \"from\" date",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": { "$ref": "#/components/schemas/DateYMD" }
          },
          {
            "description": "The API authentication key to use to retrieve the data",
            "in": "query",
            "name": "authentication_key",
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Consumption" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Get Consumptions",
        "tags": ["Consumption"]
      }
    },
    "/consumptions/addons": {
      "get": {
        "description": "Retrieves detailed addon consumption for the current subscription period.",
        "operationId": "get-consumption-addon",
        "parameters": [
          {
            "description": "A list of add-ons to filter the results on.",
            "in": "query",
            "name": "addons",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "electronic_signature",
                  "advanced_electronic_signature",
                  "qualified_electronic_signature_identity_verification",
                  "qualified_electronic_signature_saved_identity",
                  "electronic_seal",
                  "advanced_electronic_seal",
                  "archiving"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_consumption_addon_200_response"
                }
              }
            },
            "description": "Return the addons consumption per addon.",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Get detailed addon consumption.",
        "tags": ["Consumption"]
      }
    },
    "/consumptions/detail": {
      "get": {
        "description": "Returns the consumption of your organization over a specified period.",
        "operationId": "get-consumption-detail",
        "parameters": [
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The starting date for data retrieval.",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": { "$ref": "#/components/schemas/DateYMD" }
          },
          {
            "description": "The end date for data retrieval. The `to` date must be later than the `from` date and within one year of the `from` date.",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": { "$ref": "#/components/schemas/DateYMD" }
          },
          {
            "description": "Specifies how data is grouped. By default, it returns the total consumption for the entire organization. If set to `workspace`, the data will be grouped by Workspace.",
            "in": "query",
            "name": "breakdown_type",
            "required": false,
            "schema": {
              "default": "organization",
              "enum": ["organization", "workspace"],
              "type": "string"
            }
          },
          {
            "description": "A list of Workspace IDs to filter the results.",
            "in": "query",
            "name": "workspace_ids",
            "required": false,
            "schema": {
              "items": { "$ref": "#/components/schemas/UUID" },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_consumption_detail_200_response"
                }
              }
            },
            "description": "Return the detailed consumption.",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Get detailed Consumption data",
        "tags": ["Consumption"]
      }
    },
    "/consumptions/export": {
      "get": {
        "description": "Get a binary .csv file containing all the Consumption data of the underlying signatures",
        "operationId": "get-consumptions-export",
        "parameters": [
          {
            "description": "The \"from\" date must not be more than 1 year in the past",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": { "$ref": "#/components/schemas/DateYMD" }
          },
          {
            "description": "The \"to\" date must be more recent than the \"from\" date",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": { "$ref": "#/components/schemas/DateYMD" }
          },
          {
            "description": "The API authentication key to use to retrieve the data",
            "in": "query",
            "name": "authentication_key",
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": { "text/csv": { "schema": { "type": "string" } } },
            "description": "Returns a .csv file containing the raw Consumption data.",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Export Consumption data",
        "tags": ["Consumption"]
      }
    },
    "/contacts": {
      "get": {
        "description": "Returns the list of all the Contacts within your organization.",
        "operationId": "get-contacts",
        "parameters": [
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_contacts_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Contacts",
        "tags": ["Contact"]
      },
      "post": {
        "description": "Creates a new Contact.",
        "operationId": "post-contact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateContact" }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Contact" }
              }
            },
            "description": "Created",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Create a Contact",
        "tags": ["Contact"]
      }
    },
    "/contacts/{contactId}": {
      "delete": {
        "description": "Deletes a given Contact.",
        "operationId": "delete-contacts-contactId",
        "parameters": [
          {
            "description": "Contact Id",
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentDelete" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Delete a Contact",
        "tags": ["Contact"]
      },
      "get": {
        "description": "Retrieves a given Contact.",
        "operationId": "get-contacts-contactId",
        "parameters": [
          {
            "description": "Contact Id",
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Contact" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Get a Contact",
        "tags": ["Contact"]
      },
      "patch": {
        "description": "Updates a given Contact.\nAny parameters not provided are left unchanged.\n",
        "operationId": "patch-contacts-contactId",
        "parameters": [
          {
            "description": "Contact Id",
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateContact" }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Contact" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Update a Contact",
        "tags": ["Contact"]
      }
    },
    "/custom_experiences": {
      "get": {
        "description": "Returns the list of all Custom Experiences in your Organization.\nYou can limit the number of items returned by using pagination.\n",
        "operationId": "get-custom_experiences",
        "parameters": [
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_custom_experiences_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Custom Experiences",
        "tags": ["Custom Experience"]
      },
      "post": {
        "description": "Creates a new Custom Experience.",
        "operationId": "post-custom-experience",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomExperience"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomExperience" }
              }
            },
            "description": "Created",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Create a Custom Experience",
        "tags": ["Custom Experience"]
      }
    },
    "/custom_experiences/{customExperienceId}": {
      "delete": {
        "description": "Deletes a given Custom Experience.",
        "operationId": "delete-custom_experience",
        "parameters": [
          {
            "description": "Custom Experience Id",
            "in": "path",
            "name": "customExperienceId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentDelete" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Delete a Custom Experience",
        "tags": ["Custom Experience"]
      },
      "get": {
        "description": "Retrieves a given Custom Experience.",
        "operationId": "get-custom_experiences-customExperienceId",
        "parameters": [
          {
            "description": "Custom Experience Id",
            "in": "path",
            "name": "customExperienceId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomExperience" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Get a Custom Experience",
        "tags": ["Custom Experience"]
      },
      "patch": {
        "description": "Updates a given Custom Experience.\nAny parameters not provided are left unchanged.\n",
        "operationId": "patch-custom_experiences-customExperienceId",
        "parameters": [
          {
            "description": "Custom Experience Id",
            "in": "path",
            "name": "customExperienceId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomExperience"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomExperience" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Update a Custom Experience",
        "tags": ["Custom Experience"]
      }
    },
    "/custom_experiences/{customExperienceId}/logo": {
      "delete": {
        "description": "Deletes the logo of a Custom Experience.",
        "operationId": "delete-custom_experience-logo",
        "parameters": [
          {
            "description": "Custom Experience Id",
            "in": "path",
            "name": "customExperienceId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentDelete" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Delete a Custom Experience logo",
        "tags": ["Custom Experience"]
      },
      "post": {
        "description": "Updates the logo of a given Custom Experience by uploading the image of your choice.",
        "operationId": "patch-custom-experience-logo",
        "parameters": [
          {
            "description": "Custom Experience Id",
            "in": "path",
            "name": "customExperienceId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/patch_custom_experience_logo_request"
              }
            }
          },
          "description": "Update a Custom Experience logo"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomExperience" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Update a Custom Experience logo",
        "tags": ["Custom Experience"]
      }
    },
    "/documents": {
      "post": {
        "deprecated": true,
        "description": "Deprecated endpoint, do not use.",
        "operationId": "post-documents",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocumentFromMultipart"
              }
            }
          },
          "description": "Upload a Document"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Document" }
              }
            },
            "description": "Created",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "[DEPRECATED] Upload a Document",
        "tags": ["Deprecated"],
        "x-readme": { "samples-enabled": false, "explorer-enabled": false }
      }
    },
    "/electronic_seal_documents": {
      "post": {
        "description": "Create an Electronic Seal Document from an other one.",
        "operationId": "upload-electronic_seal-document",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateElectronicSealDocument"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateElectronicSealDocumentFromJson"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectronicSealDocument"
                }
              }
            },
            "description": "Created",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Create an Electronic Seal Document",
        "tags": ["Electronic Seal Document"]
      }
    },
    "/electronic_seal_documents/{electronicSealDocumentId}/download": {
      "get": {
        "description": "Download a given Electronic Seal Document.",
        "operationId": "download-electronic-seal-document",
        "parameters": [
          {
            "description": "Electronic Seal Id",
            "in": "path",
            "name": "electronicSealDocumentId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/pdf": {
                "schema": { "format": "binary", "type": "string" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Download an Electronic Seal Document",
        "tags": ["Electronic Seal Document"]
      }
    },
    "/electronic_seal_images": {
      "get": {
        "description": "Lists Electronic Seal Images.\nThe list is paginated and can be filtered by the `after` cursor.\n",
        "operationId": "list-electronic_seal-images",
        "parameters": [
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list_electronic_seal_images_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Electronic Seal Images",
        "tags": ["Electronic Seal"]
      },
      "post": {
        "description": "Upload an Electronic Seal Image to use for creating an Electronic Seal (can be used for several Electronic Seals).",
        "operationId": "upload-electronic_seal-image",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadElectronicSealImage"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ElectronicSealImage" }
              }
            },
            "description": "Created",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Upload an Electronic Seal Image",
        "tags": ["Electronic Seal Image"]
      }
    },
    "/electronic_seal_images/{electronicSealImageId}": {
      "delete": {
        "description": "Deletes a given Electronic Seal Image.",
        "operationId": "delete-electronic-seal-image",
        "parameters": [
          {
            "description": "Electronic Seal Image Id",
            "in": "path",
            "name": "electronicSealImageId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentDelete" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Delete an Electronic Seal Image",
        "tags": ["Electronic Seal Image"]
      }
    },
    "/electronic_seal_images/{electronicSealImageId}/download": {
      "get": {
        "description": "Download a given Electronic Seal Image.",
        "operationId": "download-electronic-seal-image",
        "parameters": [
          {
            "description": "Electronic Seal Image Id",
            "in": "path",
            "name": "electronicSealImageId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "image/png": {
                "schema": { "format": "binary", "type": "string" }
              },
              "image/jpg": {
                "schema": { "format": "binary", "type": "string" }
              },
              "image/gif": {
                "schema": { "format": "binary", "type": "string" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Download an Electronic Seal Image",
        "tags": ["Electronic Seal Image"]
      }
    },
    "/electronic_seals": {
      "post": {
        "description": "Create a new Electronic Seal",
        "operationId": "post-electronic-seals",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateElectronicSealPayload"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ElectronicSeal" }
              }
            },
            "description": "Created",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Create an Electronic Seal",
        "tags": ["Electronic Seal"]
      }
    },
    "/electronic_seals/{electronicSealId}": {
      "get": {
        "description": "Retrieves a given Electronic Seal.",
        "operationId": "get-electronic-seal",
        "parameters": [
          {
            "description": "Electronic Seal Id",
            "in": "path",
            "name": "electronicSealId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ElectronicSeal" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Get an Electronic Seal",
        "tags": ["Electronic Seal"]
      }
    },
    "/electronic_seals/{electronicSealId}/audit_trails": {
      "get": {
        "description": "Electronic Seal Audit Trail is only available when the Electronic Seal is \"done\".",
        "operationId": "get-electronic_seal-audit_trail",
        "parameters": [
          {
            "description": "Electronic Seal Id",
            "in": "path",
            "name": "electronicSealId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectronicSealAuditTrail"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Get an Electronic Seal Audit Trail",
        "tags": ["Electronic Seal Audit Trail"]
      }
    },
    "/electronic_seals/{electronicSealId}/audit_trails/download": {
      "get": {
        "description": "Electronic Seal Audit Trail is only available when the Electronic Seal is \"done\".",
        "operationId": "download-electronic_seal-audit_trail",
        "parameters": [
          {
            "description": "Electronic Seal Id",
            "in": "path",
            "name": "electronicSealId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/pdf": {
                "schema": { "format": "binary", "type": "string" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Download an Electronic Seal Audit Trail",
        "tags": ["Electronic Seal Audit Trail"]
      }
    },
    "/id_document_verifications": {
      "get": {
        "deprecated": true,
        "description": "Deprecated endpoint, do not use.\nReturns the list of all ID Document Verifications within your organization.\n",
        "operationId": "get-id_document_verifications",
        "parameters": [
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Filter by status",
            "in": "query",
            "name": "status",
            "schema": {
              "enum": ["pending", "approved", "declined", "inconclusive"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_id_document_verifications_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "[DEPRECATED] List ID Document Verifications",
        "tags": ["Deprecated"]
      },
      "post": {
        "deprecated": true,
        "description": "Deprecated endpoint, do not use.\nVerify a person’s ID document by sending the file containing their ID document (ID card, passport, residence permit or driving license).\n",
        "operationId": "create_id_document_verification",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/create_id_document_verification_request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyIdDocumentVerificationCreated"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "[DEPRECATED] Initiate a new ID document verification",
        "tags": ["Deprecated"]
      }
    },
    "/id_document_verifications/{idDocumentVerificationId}": {
      "get": {
        "deprecated": true,
        "description": "Deprecated endpoint, do not use.\nGet the detailed results of an ID document verification, including the status of the verification, the reasons in case of rejection and the data extracted from the ID document.\n",
        "operationId": "get_id_document_verification",
        "parameters": [
          {
            "description": "The ID document verification ID",
            "in": "path",
            "name": "idDocumentVerificationId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_id_document_verification_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "[DEPRECATED] Retrieve an ID document verification",
        "tags": ["Deprecated"]
      }
    },
    "/labels": {
      "get": {
        "description": "Returns the list of all the Labels within your organization.",
        "operationId": "get-labels",
        "parameters": [
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Filter by `name`. Allowed operators: `eq`, `in`.\nExample: `name[eq]=Miscellaneous`\n",
            "example": { "eq": ["Miscellaneous"] },
            "explode": true,
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "description": "Filter by name.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_labels_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Labels",
        "tags": ["Label"]
      },
      "post": {
        "description": "Creates a new Label in the organization.",
        "operationId": "post-labels",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateLabel" }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Label" }
              }
            },
            "description": "Created",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Create a new Label",
        "tags": ["Label"]
      }
    },
    "/labels/{labelId}": {
      "delete": {
        "description": "Deletes a given Label. This will remove the Label from all Signature Requests it is associated with.",
        "operationId": "delete-labels-id",
        "parameters": [
          {
            "description": "Label Id",
            "in": "path",
            "name": "labelId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentDelete" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Delete a Label",
        "tags": ["Label"]
      },
      "get": {
        "description": "Retrieves a given Label within your organization.",
        "operationId": "get-labels-id",
        "parameters": [
          {
            "description": "Label Id",
            "in": "path",
            "name": "labelId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Label" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Get a Label",
        "tags": ["Label"]
      },
      "patch": {
        "description": "Updates a given Label.\nAny parameters not provided are left unchanged.\n",
        "operationId": "patch-label-id",
        "parameters": [
          {
            "description": "Label Id",
            "in": "path",
            "name": "labelId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateLabel" }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Label" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Update a Label",
        "tags": ["Label"]
      }
    },
    "/signature_requests": {
      "get": {
        "description": "Returns the list of all Signatures Requests in your organization. You can limit the number of items returned by using filters and pagination. Consult our guide for more details and examples.",
        "operationId": "get-signature_requests",
        "parameters": [
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Filter by `status`. Allowed operators: `eq`, `in`.\nExample: `status[in]=draft,done`\n",
            "example": { "eq": ["draft"], "in": ["draft", "done"] },
            "explode": true,
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "Filter by status.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "Filter by `created_at`. Allowed operators: `eq`, `between`, `before`, `after`.\nFormat: the date format required is `yyyy-mm-dd`\nExample: `created_at[between]=2025-03-02,2025-03-04`\n",
            "example": {
              "between": ["2025-03-02", "2025-03-04"],
              "before": ["2025-03-02"]
            },
            "explode": true,
            "in": "query",
            "name": "created_at",
            "required": false,
            "schema": {
              "description": "Filter by date of creation.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "Filter by `workspace_id`. Allowed operators: `eq`.\nExample: `workspace_id[eq]=9b6ed2f3-244f-487a-baa1-bbe4f51c8748`\n",
            "example": { "eq": ["9b6ed2f3-244f-487a-baa1-bbe4f51c8748"] },
            "explode": true,
            "in": "query",
            "name": "workspace_id",
            "required": false,
            "schema": {
              "description": "Filter by workspace_id.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "Filter by `external_id`. Allowed operators: `eq`.\nExample: `external_id[eq]=an-external-id`\n",
            "example": { "eq": ["an-external-id"] },
            "explode": true,
            "in": "query",
            "name": "external_id",
            "required": false,
            "schema": {
              "description": "Filter by external_id.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "Filter by `source`. Allowed operators: `eq`, `in`.\nExample: `source[in]=public_api,app`\n",
            "example": { "eq": ["public_api"], "in": ["public_api", "app"] },
            "explode": true,
            "in": "query",
            "name": "source",
            "required": false,
            "schema": {
              "description": "Filter by source.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "Search on name",
            "in": "query",
            "name": "q",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Filter by Label's `name`. Allowed operators: `eq`, `in`.\nExample: `label.name[in]=To Sign,Miscellaneous`\n",
            "example": {
              "eq": ["To Sign"],
              "in": ["To Sign", "Miscellaneous"]
            },
            "explode": true,
            "in": "query",
            "name": "label.name",
            "required": false,
            "schema": {
              "description": "Case sensitive filter by Label's name.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_signature_requests_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Signature Requests",
        "tags": ["Signature Request"]
      },
      "post": {
        "description": "Creates a new Signature Request resource.",
        "operationId": "post-signature_requests",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSignatureRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SignatureRequest" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Initiate a new Signature Request",
        "tags": ["Signature Request"]
      }
    },
    "/signature_requests/{signatureRequestId}": {
      "delete": {
        "description": "Deletes a given Signature Request, not possible if the Signature Request is in `approval` and `ongoing` status.",
        "operationId": "delete-signature_requests-signatureRequestId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "If true it will permanently delete the Signature Request. It will no longer be retrievable.",
            "in": "query",
            "name": "permanent_delete",
            "schema": { "default": false, "type": "boolean" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentDelete" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Delete a Signature Request",
        "tags": ["Signature Request"]
      },
      "get": {
        "description": "Retrieves a given Signature Request.",
        "operationId": "get-signature_requests-signatureRequestId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SignatureRequest" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Fetch a Signature Request",
        "tags": ["Signature Request"]
      },
      "patch": {
        "description": "Updates a given Signature Request. Any parameters not provided are left unchanged.",
        "operationId": "patch-signature_requests-signatureRequestId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSignatureRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SignatureRequest" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Update a Signature Request",
        "tags": ["Signature Request"]
      }
    },
    "/signature_requests/{signatureRequestId}/activate": {
      "post": {
        "description": "Activates a Signature request, so it is not in `draft` status anymore.\nIf the `delivery_mode` is not `null`, activating the Signature Request will trigger the notifications to Approvers/Followers/Signers.\n",
        "operationId": "post-signature_requests-signatureRequestId-activate",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateSignatureRequest"
              }
            },
            "*/*": {}
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignatureRequestActivated"
                }
              }
            },
            "description": "The Signature Request has been activated",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Activate a Signature Request",
        "tags": ["Signature Request"]
      }
    },
    "/signature_requests/{signatureRequestId}/approvers": {
      "post": {
        "description": "Adds an Approver to a given Signature Request.",
        "operationId": "post-signature_requests-signatureRequestId-approvers",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateApprover" }
            }
          },
          "description": "An Approver object to be added to the Signature Request."
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Approver" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Create a new Approver",
        "tags": ["Approver"]
      }
    },
    "/signature_requests/{signatureRequestId}/approvers/{approverId}": {
      "delete": {
        "description": "Deletes a given Approver from a Signature Request.",
        "operationId": "delete-signature_requests-signatureRequestId-approvers-approverId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Approver Id",
            "in": "path",
            "name": "approverId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentDelete" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Delete an Approver",
        "tags": ["Approver"]
      },
      "get": {
        "description": "Retrieves a given Approver.",
        "operationId": "get-signature_requests-signatureRequestId-approvers-approverId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Approver Id",
            "in": "path",
            "name": "approverId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Approver" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Get an Approver",
        "tags": ["Approver"]
      },
      "patch": {
        "description": "Updates a given Approver. Any parameters not provided are left unchanged.",
        "operationId": "patch-signature_requests-signatureRequestId-approvers-approverId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Approver Id",
            "in": "path",
            "name": "approverId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateApprover" }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Approver" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Update an Approver",
        "tags": ["Approver"]
      }
    },
    "/signature_requests/{signatureRequestId}/approvers/{approverId}/send_reminder": {
      "post": {
        "description": "Sends a reminder to a given Approver to review their Signature Request.\nOnly possible when the Signature Request status is `approval` and the Approver status is `notified`.\n",
        "operationId": "post-signature_requests-signatureRequestId-approvers-approverId-send_reminder",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Approver Id",
            "in": "path",
            "name": "approverId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "201": {
            "description": "Reminder has been sent.",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Send manual reminder to an Approver",
        "tags": ["Approver"]
      }
    },
    "/signature_requests/{signatureRequestId}/audit_trails/download": {
      "get": {
        "description": "Download the PDF version of all the Audit Trails attached to a given Signature Request. Each Audit Trail is bound to a different Signer. Only possible when the Signature Request status is `done`.",
        "operationId": "get-signature_requests-signatureRequestId-audit_trails-download",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Download all Audit Trails merged as a single PDF file",
            "in": "query",
            "name": "merge",
            "schema": { "default": false, "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/zip, application/pdf": {
                "schema": { "format": "binary", "type": "string" }
              }
            },
            "description": "Return an application/pdf or application/zip archive with all Audit Trails",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Download Signature Request Audit Trails",
        "tags": ["Audit Trail"]
      }
    },
    "/signature_requests/{signatureRequestId}/cancel": {
      "post": {
        "description": "Cancels a Signature Request when it is in `approval` or `ongoing` status. A canceled Signature Request cannot be reactivated.",
        "operationId": "post-signature_requests-signatureRequestId-cancel",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/post_signature_requests_signatureRequestId_cancel_request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SignatureRequest" }
              }
            },
            "description": "The Signature Request has been canceled",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Cancel a Signature Request",
        "tags": ["Signature Request"]
      }
    },
    "/signature_requests/{signatureRequestId}/consent_requests": {
      "get": {
        "description": "Returns a list of Signer Consent Requests for a given Signature Request.",
        "operationId": "get-signature_requests-signatureRequestId-signer_consent_requests",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_signature_requests_signatureRequestId_signer_consent_requests_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Signer Consent Requests of the Signature Request",
        "tags": ["Signer Consent Request"]
      },
      "post": {
        "description": "Adds a Signer Consent Request to a given Signature Request. This action is only permitted when the Signature Request is a draft.",
        "operationId": "post-signature_requests-signatureRequestId-consent_requests",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSignerConsentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignerConsentRequest"
                }
              }
            },
            "description": "Created",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Add Signer Consent Request to a Signature Request",
        "tags": ["Signer Consent Request"]
      }
    },
    "/signature_requests/{signatureRequestId}/consent_requests/{consentRequestId}": {
      "delete": {
        "description": "Delete a Signer Consent Request from signature request. This action is only permitted when the Signature Request is a draft.",
        "operationId": "delete-signature_requests-signatureRequestId-consent_requests-consentRequestId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Consent Request Id",
            "in": "path",
            "name": "consentRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentDelete" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Delete a Signer Consent Request",
        "tags": ["Signer Consent Request"]
      },
      "patch": {
        "description": "Updates a given Signer Consent Request.\nAny parameters not provided are left unchanged.\nThis action is only permitted when the Signature Request is a draft.\n",
        "operationId": "patch-signature_requests-signatureRequestId-consent_requests-consentRequestId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Consent Request Id",
            "in": "path",
            "name": "consentRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSignerConsentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignerConsentRequest"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Update a Signer Consent Request",
        "tags": ["Signer Consent Request"]
      }
    },
    "/signature_requests/{signatureRequestId}/consent_requests/{consentRequestId}/signers/{signerId}": {
      "delete": {
        "description": "Remove a Signer from a given Signer Consent Request. This action is only permitted when the Signature Request is a draft.",
        "operationId": "delete-signature_requests-signatureRequestId-consent_requests-consentRequestId-signers-signerId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Consent Request Id",
            "in": "path",
            "name": "consentRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Id",
            "in": "path",
            "name": "signerId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentDelete" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Remove a Signer from a given Signer Consent Request",
        "tags": ["Signer Consent Request"]
      },
      "put": {
        "description": "Adds a Signer to a given Signer Consent Request. This action is only permitted when the Signature Request is a draft.",
        "operationId": "put-signature_requests-signatureRequestId-consent_requests-consentRequestId-signers-signerId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Consent Request Id",
            "in": "path",
            "name": "consentRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Id",
            "in": "path",
            "name": "signerId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": {
            "description": "The Signer has been added successfully to Signer Consent Request",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Adds a Signer to a given Signer Consent Request",
        "tags": ["Signer Consent Request"]
      }
    },
    "/signature_requests/{signatureRequestId}/document_requests": {
      "get": {
        "description": "Returns a list of Signer Document Requests for a given Signature Request.",
        "operationId": "get-signature_requests-signatureRequestId-signer_document_requests",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_signature_requests_signatureRequestId_signer_document_requests_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Signer Document Requests of the Signature Request",
        "tags": ["Signer Document Request"]
      },
      "post": {
        "description": "Adds a Signer Document Request to a given Signature Request.",
        "operationId": "post-signature_requests-signatureRequestId-document_requests",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSignerDocumentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignerDocumentRequest"
                }
              }
            },
            "description": "Created",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Add Signer Document Request to a Signature Request",
        "tags": ["Signer Document Request"],
        "x-readme": { "explorer-enabled": false }
      }
    },
    "/signature_requests/{signatureRequestId}/document_requests/{documentRequestId}": {
      "delete": {
        "description": "Delete a Signer Document Request from signature request. This action is only permitted when the Signature Request is a draft.",
        "operationId": "delete-signature_requests-signatureRequestId-document_requests-documentRequestId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Document Request Id",
            "in": "path",
            "name": "documentRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentDelete" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Delete a Signer Document Request",
        "tags": ["Signer Document Request"]
      }
    },
    "/signature_requests/{signatureRequestId}/document_requests/{documentRequestId}/signers/{signerId}": {
      "delete": {
        "description": "Remove a Signer to a given Signer Document Request. This action is only permitted when the Signature Request is a draft.",
        "operationId": "delete-signature_requests-signatureRequestId-document_requests-documentRequestId-signers-signerId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Document Request Id",
            "in": "path",
            "name": "documentRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Id",
            "in": "path",
            "name": "signerId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentDelete" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Remove a Signer to a given Signer Document Request",
        "tags": ["Signer Document Request"]
      },
      "put": {
        "description": "Adds a Signer to a given Signer Document Request. This action is only permitted when the Signature Request is a draft.",
        "operationId": "put-signature_requests-signatureRequestId-document_requests-documentRequestId-signers-signerId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Document Request Id",
            "in": "path",
            "name": "documentRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Id",
            "in": "path",
            "name": "signerId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignerDocumentRequest"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Adds a Signer to a given Signer Document Request",
        "tags": ["Signer Document Request"]
      }
    },
    "/signature_requests/{signatureRequestId}/documents": {
      "get": {
        "description": "Returns a list of Documents for a given Signature Request.",
        "operationId": "get-signature_requests-signatureRequestId-documents",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Filter by `nature`. Allowed operators: `eq`.\nExample: `nature[eq]=attachment` or `nature[eq]=signable_document`.\n",
            "example": { "eq": ["attachment"] },
            "explode": true,
            "in": "query",
            "name": "nature",
            "required": false,
            "schema": {
              "description": "Filter by nature.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/Document" },
                  "type": "array"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Signature Request's Documents",
        "tags": ["Document"]
      },
      "post": {
        "description": "Add a sealed Document to a given Signature Request.",
        "operationId": "post-signature_requests-signatureRequestId-documents",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocumentFromMultipart"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocumentFromJson"
              }
            }
          },
          "description": "Sending file with metadata"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Document" }
              }
            },
            "description": "Created",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Add a sealed Document to a Signature Request",
        "tags": ["Document"],
        "x-readme": { "explorer-enabled": true }
      }
    },
    "/signature_requests/{signatureRequestId}/documents/download": {
      "get": {
        "description": "Downloads the PDF version of all Documents attached to a given Signature Request.",
        "operationId": "get-signature_requests-signatureRequestId-documents-download",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Specify Documents version to download, `completed` is only available when the Signature Request status is `done`.",
            "in": "query",
            "name": "version",
            "schema": { "enum": ["current", "completed"], "type": "string" }
          },
          {
            "description": "Force zip archive download",
            "in": "query",
            "name": "archive",
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/zip, application/pdf": {
                "schema": { "format": "binary", "type": "string" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Download Signature Request's Documents",
        "tags": ["Document"]
      }
    },
    "/signature_requests/{signatureRequestId}/documents/{documentId}": {
      "delete": {
        "description": "Deletes a given Document from a Signature Request.",
        "operationId": "delete-signature_requests-signatureRequestId-documents-documentId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Document Id",
            "in": "path",
            "name": "documentId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentDelete" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Delete a Document",
        "tags": ["Document"]
      },
      "get": {
        "description": "Retrieves a given Document.",
        "operationId": "get-signature_requests-signatureRequestId-documents-documentId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Document Id",
            "in": "path",
            "name": "documentId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Document" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Get a Document",
        "tags": ["Document"]
      },
      "patch": {
        "description": "Updates a given Document. Any parameters not provided are left unchanged.",
        "operationId": "patch-signature_requests-signatureRequestId-documents-documentId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Document Id",
            "in": "path",
            "name": "documentId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateDocument" }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Document" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Update a Document",
        "tags": ["Document"]
      }
    },
    "/signature_requests/{signatureRequestId}/documents/{documentId}/download": {
      "get": {
        "description": "Downloads the PDF version of a given Document.",
        "operationId": "get-signature_requests-signatureRequestId-documents-documents-id-download",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Document Id",
            "in": "path",
            "name": "documentId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/pdf": {
                "schema": { "format": "binary", "type": "string" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Download a single Signature Request's Document",
        "tags": ["Document"]
      }
    },
    "/signature_requests/{signatureRequestId}/documents/{documentId}/fields": {
      "get": {
        "description": "Returns a list of Fields for a given Document. You can limit the number of items returned by using filters.",
        "operationId": "get-signature_requests-signatureRequestId-documents-documentId-fields",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Document ID",
            "in": "path",
            "name": "documentId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Filter by `type`. Allowed operators: `eq`, `in`.\nExample: `type[in]=text,checkbox`\n",
            "example": { "eq": ["text"], "in": ["text", "checkbox"] },
            "explode": true,
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "description": "Filter by type.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "Filter by `signer_id`. Allowed operators: `eq`.\nExample: `signer_id[eq]=500800fc-3f91-4e86-a9c9-866809a1e3c9`\n",
            "example": { "eq": ["500800fc-3f91-4e86-a9c9-866809a1e3c9"] },
            "explode": true,
            "in": "query",
            "name": "signer_id",
            "required": false,
            "schema": {
              "description": "Filter by signer_id.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "Filter by `name`. Allowed operators: `eq`.\nExample: `name[eq]=text 1`\n",
            "example": { "eq": ["text 1"] },
            "explode": true,
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "description": "Filter by name.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_signature_requests_signatureRequestId_documents_documentId_fields_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Lists the Fields of a Signature Request Document.",
        "tags": ["Field"]
      },
      "post": {
        "description": "Adds a Field to a given Document.",
        "operationId": "post-signature_requests-signatureRequestId-documents-documentId-fields",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Document ID",
            "in": "path",
            "name": "documentId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateField" }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_signature_requests_signatureRequestId_documents_documentId_fields_200_response_data_inner"
                }
              }
            },
            "description": "Created",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Create a new Field on a Document",
        "tags": ["Field"]
      }
    },
    "/signature_requests/{signatureRequestId}/documents/{documentId}/fields/{fieldId}": {
      "delete": {
        "description": "Deletes a given Field from a Document.",
        "operationId": "delete-signature_requests-signatureRequestId-documents-documentId-fields-fieldId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Document Id",
            "in": "path",
            "name": "documentId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Field Id",
            "in": "path",
            "name": "fieldId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentDelete" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Delete a Field",
        "tags": ["Field"]
      },
      "patch": {
        "description": "Updates a given Field. Any parameters not provided are left unchanged.",
        "operationId": "update-signature_requests-signatureRequestId-documents-documentId-fields-fieldId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Document Id",
            "in": "path",
            "name": "documentId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Field Id",
            "in": "path",
            "name": "fieldId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateField" }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_signature_requests_signatureRequestId_documents_documentId_fields_200_response_data_inner"
                }
              }
            },
            "description": "The Field has been successfully updated.",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Update a Field",
        "tags": ["Field"]
      }
    },
    "/signature_requests/{signatureRequestId}/documents/{documentId}/fields/{fieldId}/answer": {
      "post": {
        "description": "This endpoint can be used on ongoing Signature Requests only.\nIt aims to fill a Field value with a Signer input collected in your custom signing interface. The Fields compatible are Text Fields, Checkboxes and Radio Groups.\n",
        "operationId": "signature_requests-id-documents-id-fields-id-answer",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Document Id",
            "in": "path",
            "name": "documentId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Field Id",
            "in": "path",
            "name": "fieldId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FieldAnswer" }
            }
          }
        },
        "responses": {
          "204": { "$ref": "#/components/responses/NoContent" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Answer a Field",
        "tags": ["Field"]
      }
    },
    "/signature_requests/{signatureRequestId}/documents/{documentId}/replace": {
      "post": {
        "description": "Replace the file of a given Document.",
        "operationId": "post-signature_requests-signatureRequestId-documents-documentId-replace",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Document Id",
            "in": "path",
            "name": "documentId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/post_signature_requests_signatureRequestId_documents_documentId_replace_request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Document" }
              }
            },
            "description": "Created",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Replace a Document in a Signature Request",
        "tags": ["Document"]
      }
    },
    "/signature_requests/{signatureRequestId}/followers": {
      "get": {
        "description": "Returns a list of Followers for a given Signature Request.",
        "operationId": "get-signature_requests-signatureRequestId-followers",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_signature_requests_signatureRequestId_followers_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List the Signature Request's Followers",
        "tags": ["Follower"]
      },
      "post": {
        "description": "Adds a Follower to a given Signature Request.",
        "operationId": "post-signature_requests-signatureRequestId-followers",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateFollowers" }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "A list of Followers added to the Signature Request.",
                  "items": { "$ref": "#/components/schemas/Follower" },
                  "type": "array"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Create new Followers",
        "tags": ["Follower"]
      }
    },
    "/signature_requests/{signatureRequestId}/labels": {
      "get": {
        "description": "Returns the list of Labels associated with a given Signature Request.",
        "operationId": "get-signature_requests-id-labels",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_signature_requests_id_labels_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Labels of a Signature Request",
        "tags": ["Label"]
      }
    },
    "/signature_requests/{signatureRequestId}/labels/{labelId}": {
      "delete": {
        "description": "Removes a Label from a given Signature Request.",
        "operationId": "delete-signature_requests-id-labels-id",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Label Id",
            "in": "path",
            "name": "labelId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContent" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Remove Label from a Signature Request",
        "tags": ["Label"]
      },
      "put": {
        "description": "Associates a Label with a given Signature Request.",
        "operationId": "put-signature_requests-id-labels-id",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Label Id",
            "in": "path",
            "name": "labelId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContent" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Associate a Label with a Signature Request",
        "tags": ["Label"]
      }
    },
    "/signature_requests/{signatureRequestId}/metadata": {
      "delete": {
        "description": "Deletes the Metadata of a given Signature Request.",
        "operationId": "delete-signature_requests-signatureRequestId-metadata",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentDelete" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Delete the Signature Request Metadata",
        "tags": ["Metadata"]
      },
      "get": {
        "description": "Retrieves the Metadata of a given Signature Request.",
        "operationId": "get-signature_requests-signatureRequestId-metadata",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Metadata" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Get the Signature Request Metadata",
        "tags": ["Metadata"]
      },
      "post": {
        "description": "Add Metadata to a given Signature Request.",
        "operationId": "post-signature_requests-signatureRequestId-metadata",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Metadata" }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Metadata" }
              }
            },
            "description": "Created",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Attach Metadata to a Signature Request",
        "tags": ["Metadata"]
      },
      "put": {
        "description": "Updates the Metadata of a given Signature Request. Any parameters not provided are left unchanged.",
        "operationId": "put-signature_requests-signatureRequestId-metadata",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Metadata" }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Metadata" }
              }
            },
            "description": "Updated",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Update Metadata of a Signature Request",
        "tags": ["Metadata"]
      }
    },
    "/signature_requests/{signatureRequestId}/reactivate": {
      "post": {
        "description": "Reactivates a Signature Request when it is in `expired` status.",
        "operationId": "post-signature_requests-signatureRequestId-reactivate",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/post_signature_requests_signatureRequestId_reactivate_request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SignatureRequest" }
              }
            },
            "description": "The Signature Request has been reactivated",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Reactivate an expired Signature Request",
        "tags": ["Signature Request"]
      }
    },
    "/signature_requests/{signatureRequestId}/signers": {
      "get": {
        "description": "Returns a list of Signers for a given Signature Request.",
        "operationId": "get-signature_requests-signatureRequestId-signers",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/Signer" },
                  "type": "array"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Signature Request's Signers",
        "tags": ["Signer"]
      },
      "post": {
        "description": "Adds a Signer to a given Signature Request.",
        "operationId": "post-signature_requests-signatureRequestId-signers",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateSigner" }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Signer" }
              }
            },
            "description": "Created",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Create a new Signer",
        "tags": ["Signer"]
      }
    },
    "/signature_requests/{signatureRequestId}/signers/{signerId}": {
      "delete": {
        "description": "Deletes a given Signer from a Signature Request.",
        "operationId": "delete-signature_requests-signatureRequestId-signers-signerId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Id",
            "in": "path",
            "name": "signerId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentDelete" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Delete a Signer",
        "tags": ["Signer"]
      },
      "get": {
        "description": "Retrieves a given Signer.",
        "operationId": "get-signers-signersId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Id",
            "in": "path",
            "name": "signerId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Signer" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Get a Signer",
        "tags": ["Signer"]
      },
      "patch": {
        "description": "Updates a given Signer.\nAny parameters not provided are left unchanged.\n",
        "operationId": "patch-signature_requests-signatureRequestId-signers-signerId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Id",
            "in": "path",
            "name": "signerId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateSigner" }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Signer" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Update a Signer",
        "tags": ["Signer"]
      }
    },
    "/signature_requests/{signatureRequestId}/signers/{signerId}/audit_trails": {
      "get": {
        "description": "Retrieves the JSON version of the Audit Trail attached to a given Signer. Only possible when Signer status is `signed`.",
        "operationId": "get-signature_requests-signatureRequestId-signers-signerId-audit_trails",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Id",
            "in": "path",
            "name": "signerId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SignerAuditTrail" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Get Signer Audit Trail",
        "tags": ["Audit Trail"]
      }
    },
    "/signature_requests/{signatureRequestId}/signers/{signerId}/audit_trails/download": {
      "get": {
        "description": "Download the PDF version of the Audit Trail attached to a given Signer. Only possible when Signer status is `signed`.",
        "operationId": "get-signers-signerId-audit_trails-download",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Id",
            "in": "path",
            "name": "signerId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/pdf": {
                "schema": { "format": "binary", "type": "string" }
              }
            },
            "description": "Audit Trail PDF",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Download Audit Trail PDF",
        "tags": ["Audit Trail"]
      }
    },
    "/signature_requests/{signatureRequestId}/signers/{signerId}/documents": {
      "delete": {
        "description": "Deletes all documents uploaded by a given Signer for a specific Signature Request.\nDeletion is only possible when Signer status is `signed`.\n",
        "operationId": "delete-signature_requests-signatureRequestId-signers-signerId-documents",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Id",
            "in": "path",
            "name": "signerId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentDelete" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Delete the Documents uploaded by a Signer",
        "tags": ["Signer Document Request"]
      },
      "get": {
        "description": "Returns a list of Documents uploaded by a given Signer.\nOnly possible when Signer status is `signed`.\n",
        "operationId": "get-signature_requests-signatureRequestId-signers-signerId-documents",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Id",
            "in": "path",
            "name": "signerId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_signature_requests_signatureRequestId_signers_signerId_documents_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List the Signer Documents of a Signer",
        "tags": ["Signer Document Request"]
      }
    },
    "/signature_requests/{signatureRequestId}/signers/{signerId}/documents/{signerDocumentId}/download": {
      "get": {
        "description": "Downloads a Document uploaded by a given Signer.\nOnly possible when Signer status is `signed`.\n",
        "operationId": "get-signature_requests-signatureRequestId-signers-signerId-documents-signerDocumentId",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Id",
            "in": "path",
            "name": "signerId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Document Id",
            "in": "path",
            "name": "signerDocumentId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/pdf": {
                "schema": { "format": "binary", "type": "string" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Download a Signer Document",
        "tags": ["Signer Document Request"]
      }
    },
    "/signature_requests/{signatureRequestId}/signers/{signerId}/identity_verification": {
      "post": {
        "description": "Verifying an identity document for a Signer to know if their document is valid before enabling them to sign using Advanced Electronic Signature.",
        "operationId": "post-signature_requests-id-signers-id-identity_verification",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Id",
            "in": "path",
            "name": "signerId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SignerIdentityVerification"
              }
            }
          }
        },
        "responses": {
          "204": { "$ref": "#/components/responses/NoContent" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Pre-verify an identity document",
        "tags": ["Signer"]
      }
    },
    "/signature_requests/{signatureRequestId}/signers/{signerId}/send_otp": {
      "post": {
        "description": "Send a One-Time Password (OTP) to a given Signer. Use this endpoint only if you use your own signing flow.",
        "operationId": "post-signature_requests-signatureRequestId-signers-signerId-send_otp",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Id",
            "in": "path",
            "name": "signerId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContent" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Send a One-Time Password (OTP) to a Signer",
        "tags": ["Signer"]
      }
    },
    "/signature_requests/{signatureRequestId}/signers/{signerId}/send_reminder": {
      "post": {
        "description": "Sends a reminder to a given signer to complete their Signature Request.\nOnly possible when the Signature Request status is `ongoing` and the Signer status is `notified`.\n",
        "operationId": "post-signature_requests-signatureRequestId-signers-signerId-send_reminder",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Id",
            "in": "path",
            "name": "signerId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Send manual reminder to a Signer",
        "tags": ["Signer"]
      }
    },
    "/signature_requests/{signatureRequestId}/signers/{signerId}/sign": {
      "post": {
        "description": "Sign a Signature Request on behalf of a given Signer.",
        "operationId": "post-signature_requests-signatureRequestId-signers-signerId-sign",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Id",
            "in": "path",
            "name": "signerId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SignerSign" }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SignerSignWithUploadedSignatureImage"
              }
            }
          }
        },
        "responses": {
          "204": { "$ref": "#/components/responses/NoContent" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Sign a Signature Request",
        "tags": ["Signer"]
      }
    },
    "/signature_requests/{signatureRequestId}/signers/{signerId}/unblock_identification": {
      "post": {
        "description": "Unblock a Signer during a Qualified Electronic Signature in cases where a mismatch was previously detected between the sender-provided first and/or last name and the information on the Signer's ID document.",
        "operationId": "post-signature_requests-id-signers-id-unblock_identification",
        "parameters": [
          {
            "description": "Signature Request Id",
            "in": "path",
            "name": "signatureRequestId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "Signer Id",
            "in": "path",
            "name": "signerId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContent" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Unblock Signer after an identity mismatch",
        "tags": ["Signer"]
      }
    },
    "/templates": {
      "get": {
        "description": "Returns the list of all Templates within your Organization.",
        "operationId": "get-templates",
        "parameters": [
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_templates_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Templates",
        "tags": ["Template"]
      }
    },
    "/users": {
      "get": {
        "description": "Returns the list of all the Users within your Organization.",
        "operationId": "get-users",
        "parameters": [
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Filter by `email`. Allowed operators: `eq`.\nExample: `email[eq]=user@example.com`\n",
            "example": { "eq": ["user@example.com"] },
            "explode": true,
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "description": "Filter by email.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_users_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Users",
        "tags": ["User"]
      },
      "post": {
        "description": "Creates a new application User and sends them an invitation email.",
        "operationId": "post-users",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateUser" }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            },
            "description": "Created",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Create a new User",
        "tags": ["User"]
      }
    },
    "/users/invitations": {
      "get": {
        "description": "Returns the list of all the Users Invitations within your Organization.",
        "operationId": "get-invitations",
        "parameters": [
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Filter by `email`. Allowed operators: `eq`.\nExample: `email[eq]=user@example.com`\n",
            "example": { "eq": ["user@example.com"] },
            "explode": true,
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "description": "Filter by email.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_invitations_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List User Invitations",
        "tags": ["User Invitation"]
      }
    },
    "/users/invitations/{invitationId}": {
      "get": {
        "description": "Retrieves a given User Invitation.",
        "operationId": "get-users-invitation-invitationId",
        "parameters": [
          {
            "description": "Invitation Id",
            "in": "path",
            "name": "invitationId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserInvitation" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Get an Invitation",
        "tags": ["User Invitation"]
      }
    },
    "/users/{userId}": {
      "delete": {
        "description": "Deletes a given User and its Invitation, only possible when the User is in `invited` status.",
        "operationId": "delete-users-userId",
        "parameters": [
          {
            "description": "User Id",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentDelete" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Delete a User",
        "tags": ["User"]
      },
      "get": {
        "description": "Retrieves a given User within your Organization.",
        "operationId": "get-users-userId",
        "parameters": [
          {
            "description": "User Id",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Get a User",
        "tags": ["User"]
      },
      "patch": {
        "description": "Updates a given User.\nAny parameters not provided are left unchanged.\n",
        "operationId": "patch-users-userId",
        "parameters": [
          {
            "description": "User Id",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUser" }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Update a User",
        "tags": ["User"]
      }
    },
    "/users/{userId}/invitation": {
      "get": {
        "description": "Retrieves the Invitation of a given User. The Invitation only exists when the User is in `invited` status.",
        "operationId": "get-users-userId-invitation",
        "parameters": [
          {
            "description": "User Id",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserInvitation" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Get a User Invitation via the User",
        "tags": ["User Invitation"]
      }
    },
    "/verifications/bank_account_connections": {
      "get": {
        "description": "Returns the list of all Bank Account Connection Verifications within your organization. You can limit the number of items returned by using filters and pagination.",
        "operationId": "get-verifications-bank_account_connections",
        "parameters": [
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Filter by `status`. Allowed operators: `eq`, `in`.\nExample: `status[eq]=verified` or `status[in]=verified,failed`\n",
            "example": { "eq": "verified" },
            "explode": true,
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "Filter by status.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "Filter by `workspace_id`. Allowed operators: `eq`.\nExample: `workspace_id[eq]=9b6ed2f3-244f-487a-baa1-bbe4f51c8748`\n",
            "example": { "eq": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748" },
            "explode": true,
            "in": "query",
            "name": "workspace_id",
            "required": false,
            "schema": {
              "description": "Filter by workspace_id.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_verifications_bank_account_connections_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Bank Account Connection Verifications",
        "tags": ["Bank Account Connection Verification"]
      },
      "post": {
        "description": "Initiate a new Bank Account Connection resource",
        "operationId": "post-verifications-bank_account_connections",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/post_verifications_bank_account_connections_request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountConnectionFull"
                }
              }
            },
            "description": "Created",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Initiate a new Bank Account Connection",
        "tags": ["Bank Account Connection Verification"]
      }
    },
    "/verifications/bank_account_connections/{verificationId}": {
      "get": {
        "description": "Get the detailed results of a Bank Account Connection Verification.",
        "operationId": "get-verifications-bank_account_connections-id",
        "parameters": [
          {
            "description": "Bank Account Connection Verification Id",
            "in": "path",
            "name": "verificationId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountConnectionFull"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Retrieve a Bank Account Connection Verification",
        "tags": ["Bank Account Connection Verification"]
      }
    },
    "/verifications/bank_account_lookups": {
      "get": {
        "description": "Returns the list of all Bank Account Lookup Verifications within your organization.\nYou can limit the number of items returned by using filters and pagination.\nConsult our guide for more details and examples.\n",
        "operationId": "get-verifications-bank_account_lookups",
        "parameters": [
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Filter by `status`. Allowed operators: `eq`.\nExample: `status[eq]=verified`\n",
            "example": { "eq": ["verified"] },
            "explode": true,
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "Filter by status.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "Filter by `workspace_id`. Allowed operators: `eq`.\nExample: `workspace_id[eq]=9b6ed2f3-244f-487a-baa1-bbe4f51c8748`\n",
            "example": { "eq": ["9b6ed2f3-244f-487a-baa1-bbe4f51c8748"] },
            "explode": true,
            "in": "query",
            "name": "workspace_id",
            "required": false,
            "schema": {
              "description": "Filter by workspace_id.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_verifications_bank_account_lookups_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Bank Account Lookup Verifications",
        "tags": ["Bank Account Lookup Verification"]
      },
      "post": {
        "description": "Initiate a new Bank Account Lookup Verification to check if a bank account exists and belongs to the specified person or company.\n",
        "operationId": "post-verifications-bank_account_lookups",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/post_verifications_bank_account_lookups_request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "pending": {
                    "summary": "Pending - verification is in progress: on creation the status is always pending",
                    "value": {
                      "id": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                      "workspace_id": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                      "created_at": "2025-07-23T18:22:00+00:00",
                      "updated_at": "2025-07-23T18:22:00+00:00",
                      "status": "pending",
                      "status_codes": []
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BankAccountLookupMeta"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Initiate a new Bank Account Lookup Verification",
        "tags": ["Bank Account Lookup Verification"]
      }
    },
    "/verifications/bank_account_lookups/{bankAccountLookupVerificationId}": {
      "get": {
        "description": "Retrieve a specific Bank Account Lookup Verification by its ID.\n",
        "operationId": "get-verifications-bank_account_lookups-id",
        "parameters": [
          {
            "description": "Bank Account Lookup Verification Id",
            "in": "path",
            "name": "bankAccountLookupVerificationId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "verified": {
                    "summary": "Verified result - bank account exists and belongs to the specified person",
                    "value": {
                      "id": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                      "workspace_id": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                      "created_at": "2025-07-23T18:22:00+00:00",
                      "updated_at": "2025-07-23T18:23:00+00:00",
                      "status": "verified",
                      "status_codes": []
                    }
                  },
                  "failed": {
                    "summary": "Failed result - bank account exists but doesn't belong to the specified person",
                    "value": {
                      "id": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                      "workspace_id": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                      "created_at": "2025-07-23T18:22:00+00:00",
                      "updated_at": "2025-07-23T18:23:00+00:00",
                      "status": "failed",
                      "status_codes": ["BALV_1101"]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BankAccountLookupMeta"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Retrieve a Bank Account Lookup Verification",
        "tags": ["Bank Account Lookup Verification"]
      }
    },
    "/verifications/bank_accounts": {
      "get": {
        "description": "Returns the list of all Bank Account Verifications within your organization. You can limit the number of items returned by using filters and pagination. Consult our guide for more details and examples.",
        "operationId": "get-verifications-bank_accounts",
        "parameters": [
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Filter by `status`. Allowed operators: `eq`.\nExample: `status[eq]=verified`\n",
            "example": { "eq": ["verified"] },
            "explode": true,
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "Filter by status.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "Filter by `workspace_id`. Allowed operators: `eq`.\nExample: `workspace_id[eq]=9b6ed2f3-244f-487a-baa1-bbe4f51c8748`\n",
            "example": { "eq": ["9b6ed2f3-244f-487a-baa1-bbe4f51c8748"] },
            "explode": true,
            "in": "query",
            "name": "workspace_id",
            "required": false,
            "schema": {
              "description": "Filter by workspace_id.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_verifications_bank_accounts_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Bank Account Verifications",
        "tags": ["Bank Account Verification"]
      },
      "post": {
        "description": "Ask for a Bank Account Verification by sending the file containing the bank account details, such as IBAN and BIC.",
        "operationId": "post-verifications-bank_accounts",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/post_verifications_bank_accounts_request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BankAccountFull" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Initiate a new Bank Account Verification",
        "tags": ["Bank Account Verification"],
        "x-readme": { "explorer-enabled": false }
      }
    },
    "/verifications/bank_accounts/{bankAccountVerificationId}": {
      "get": {
        "description": "Get the detailed results of a Bank Account Verification.",
        "operationId": "get-verifications-bank_accounts-id",
        "parameters": [
          {
            "description": "Bank Account Verification Id",
            "in": "path",
            "name": "bankAccountVerificationId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BankAccountFull" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Retrieve a Bank Account Verification",
        "tags": ["Bank Account Verification"]
      }
    },
    "/verifications/companies": {
      "get": {
        "description": "Returns the list of all Company Verifications within your organization. You can limit the number of items returned by using filters and pagination. Consult our guide for more details and examples.",
        "operationId": "get-verifications-companies",
        "parameters": [
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Filter by `status`. Allowed operators: `eq`.\nExample: `status[eq]=verified`\n",
            "example": { "eq": ["verified"] },
            "explode": true,
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "Filter by status.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "Filter by `workspace_id`. Allowed operators: `eq`.\nExample: `workspace_id[eq]=9b6ed2f3-244f-487a-baa1-bbe4f51c8748`\n",
            "example": { "eq": ["9b6ed2f3-244f-487a-baa1-bbe4f51c8748"] },
            "explode": true,
            "in": "query",
            "name": "workspace_id",
            "required": false,
            "schema": {
              "description": "Filter by workspace_id.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_verifications_companies_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Company Verifications",
        "tags": ["Company Verification"]
      },
      "post": {
        "description": "Initiate a new Company Verification",
        "operationId": "post-verifications-companies",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "company_number": "794513986",
                "country_code": "FR",
                "workspace_id": "9a93d3b5-fb3b-4abf-9e70-26315b33506c"
              },
              "schema": {
                "$ref": "#/components/schemas/InitiateCompanyFromJson"
              }
            },
            "multipart/form-data": {
              "example": {
                "file": "Binary file",
                "country_code": "FR",
                "workspace_id": "9a93d3b5-fb3b-4abf-9e70-26315b33506c"
              },
              "schema": {
                "$ref": "#/components/schemas/InitiateCompanyFromFile"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "id": "aa8c4e74-ad8f-4a10-bd9d-5681bbf23572",
                  "workspace_id": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                  "created_at": "2023-01-01T12:00:00+00:00",
                  "updated_at": "2023-01-01T12:00:00+00:00",
                  "status": "pending",
                  "data_anonymized": false,
                  "data": {
                    "extracted_from_document": {
                      "company_number": "424242",
                      "issued_on": "2023-01-01"
                    },
                    "company_information": {
                      "name": null,
                      "trade_name": null,
                      "company_number": null,
                      "legal_form": { "code": null, "description": null },
                      "vat_number": null,
                      "activities": [],
                      "founded_on": null,
                      "ceased_on": null,
                      "active": null,
                      "commercial_registration": {
                        "location": null,
                        "registered_on": null
                      },
                      "has_workforce": null
                    },
                    "headquarter": {
                      "address_line_1": null,
                      "address_line_2": null,
                      "postal_code": null,
                      "city": null,
                      "country_code": null
                    },
                    "legal_representatives": []
                  }
                },
                "schema": { "$ref": "#/components/schemas/CompanyFull" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Initiate a new Company Verification",
        "tags": ["Company Verification"]
      }
    },
    "/verifications/companies/{companyVerificationId}": {
      "get": {
        "description": "Get the detailed results of a Company Verification.",
        "operationId": "get-verifications-companies-id",
        "parameters": [
          {
            "description": "Company Verification Id",
            "in": "path",
            "name": "companyVerificationId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CompanyFull" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Retrieve a Company Verification",
        "tags": ["Company Verification"]
      }
    },
    "/verifications/identity_documents": {
      "get": {
        "description": "Returns the list of all Identity Document Verifications within your organization. You can limit the number of items returned by using filters and pagination. Consult our guide for more details and examples.",
        "operationId": "get-verifications-identity_documents",
        "parameters": [
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Filter by `status`. Allowed operators: `eq`.\nExample: `status[eq]=verified`\n",
            "example": { "eq": ["verified"] },
            "explode": true,
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "Filter by status.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "Filter by `workspace_id`. Allowed operators: `eq`.\nExample: `workspace_id[eq]=9b6ed2f3-244f-487a-baa1-bbe4f51c8748`\n",
            "example": { "eq": ["9b6ed2f3-244f-487a-baa1-bbe4f51c8748"] },
            "explode": true,
            "in": "query",
            "name": "workspace_id",
            "required": false,
            "schema": {
              "description": "Filter by workspace_id.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_verifications_identity_documents_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Identity Document Verifications",
        "tags": ["Identity Document Verification"]
      },
      "post": {
        "description": "Verify a person's Identity Document by sending the file containing their Identity Document (identity card, passport, residence permit or driving license).",
        "operationId": "post-verifications-identity_documents",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/post_verifications_identity_documents_request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityDocumentFull"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Initiate a new Identity Document Verification",
        "tags": ["Identity Document Verification"]
      }
    },
    "/verifications/identity_documents/{identityDocumentVerificationId}": {
      "get": {
        "description": "Get the detailed results of an Identity Document Verification, including the status of the verification, the reasons in case of rejection and the data extracted from the Identity Document.",
        "operationId": "get-verifications-identity_documents-id",
        "parameters": [
          {
            "description": "Identity Document Verification Id",
            "in": "path",
            "name": "identityDocumentVerificationId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityDocumentFull"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Retrieve an Identity Document Verification",
        "tags": ["Identity Document Verification"]
      }
    },
    "/verifications/identity_videos": {
      "get": {
        "description": "Returns the list of all Identity Videos within your organization. You can limit the number of items returned by using filters and pagination. Consult our guide for more details and examples.",
        "operationId": "get-verifications-identity_videos",
        "parameters": [
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Filter by `status`. Allowed operators: `eq`.\nExample: `status[eq]=verified`\n",
            "example": { "eq": ["verified"] },
            "explode": true,
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "Filter by status.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "Filter by `workspace_id`. Allowed operators: `eq`.\nExample: `workspace_id[eq]=9b6ed2f3-244f-487a-baa1-bbe4f51c8748`\n",
            "example": { "eq": ["9b6ed2f3-244f-487a-baa1-bbe4f51c8748"] },
            "explode": true,
            "in": "query",
            "name": "workspace_id",
            "required": false,
            "schema": {
              "description": "Filter by workspace_id.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_verifications_identity_videos_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Identity Videos",
        "tags": ["Identity Video Verification"]
      },
      "post": {
        "description": "Request verification of a person's identity by recording their documents and/or themselves.",
        "operationId": "post-verifications-identity_videos",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InitiateIdentityVideo" }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/IdentityVideoFull" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Initiate a new Identity Video",
        "tags": ["Identity Video Verification"]
      }
    },
    "/verifications/identity_videos/{identityVideoVerificationId}": {
      "get": {
        "description": "Get the detailed results of an Identity Video Verification.",
        "operationId": "get-verifications-identity_videos-id",
        "parameters": [
          {
            "description": "Identity Video Verification Id",
            "in": "path",
            "name": "identityVideoVerificationId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/IdentityVideoFull" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Retrieve an Identity Video",
        "tags": ["Identity Video Verification"]
      }
    },
    "/verifications/proofs_of_address": {
      "get": {
        "description": "Returns the list of all Proof of Address Verifications within your organization.\nYou can limit the number of items returned by using filters and pagination.\nConsult our guide for more details and examples.\n",
        "operationId": "get-verifications-proofs_of_address",
        "parameters": [
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Filter by `status`. Allowed operators: `eq`.\nExample: `status[eq]=verified`\n",
            "example": { "eq": ["verified"] },
            "explode": true,
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "Filter by status.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "Filter by `workspace_id`. Allowed operators: `eq`.\nExample: `workspace_id[eq]=9b6ed2f3-244f-487a-baa1-bbe4f51c8748`\n",
            "example": { "eq": ["9b6ed2f3-244f-487a-baa1-bbe4f51c8748"] },
            "explode": true,
            "in": "query",
            "name": "workspace_id",
            "required": false,
            "schema": {
              "description": "Filter by workspace_id.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_verifications_proofs_of_address_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Proof of Address Verifications",
        "tags": ["Proof of Address Verification"]
      },
      "post": {
        "description": "Ask for a Proof of Address Verification by sending a supported document type (see our guide for more info).",
        "operationId": "post-verifications-proofs_of_address",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/InitiateProofOfAddress"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "id": "1b671a64-40d5-491e-99b0-da01ff1f3341",
                  "workspace_id": "9412b83b-b4b9-4a94-97b5-2b43dfa4cde3",
                  "created_at": "2023-01-01T12:00:00+00:00",
                  "updated_at": "2023-01-01T12:00:00+00:00",
                  "status": "pending",
                  "status_codes": [],
                  "data_anonymized": false,
                  "data": {
                    "extracted_from_document": {
                      "first_name": null,
                      "last_name": null,
                      "full_address": null,
                      "issued_on": null,
                      "2d_doc": {
                        "full_name": null,
                        "address": {
                          "line1": null,
                          "postal_code": null,
                          "city": null,
                          "country_code": null
                        }
                      }
                    }
                  }
                },
                "schema": { "$ref": "#/components/schemas/ProofOfAddressFull" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Initiate a new Proof of Address Verification",
        "tags": ["Proof of Address Verification"],
        "x-readme": { "explorer-enabled": false }
      }
    },
    "/verifications/proofs_of_address/{proofOfAddressVerificationId}": {
      "get": {
        "description": "Get the detailed results of a Proof of Address Verification.",
        "operationId": "get-verifications-proofs_of_address-id",
        "parameters": [
          {
            "description": "Proof of Address Verification Id",
            "in": "path",
            "name": "proofOfAddressVerificationId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProofOfAddressFull" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Retrieve a Proof of Address Verification",
        "tags": ["Proof of Address Verification"]
      }
    },
    "/verifications/watchlists": {
      "get": {
        "description": "Returns the list of all Watchlist Verifications within your organization. \nYou can limit the number of items returned by using filters and pagination. \nConsult our guide for more details and examples.\n",
        "operationId": "get-verifications-watchlists",
        "parameters": [
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Filter by `status`. Allowed operators: `eq`.\nExample: `status[eq]=verified`\n",
            "example": { "eq": ["verified"] },
            "explode": true,
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "description": "Filter by status.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "Filter by `workspace_id`. Allowed operators: `eq`.\nExample: `workspace_id[eq]=9b6ed2f3-244f-487a-baa1-bbe4f51c8748`\n",
            "example": { "eq": ["9b6ed2f3-244f-487a-baa1-bbe4f51c8748"] },
            "explode": true,
            "in": "query",
            "name": "workspace_id",
            "required": false,
            "schema": {
              "description": "Filter by workspace_id.",
              "minProperties": 1,
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_verifications_watchlists_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Watchlist Verifications",
        "tags": ["Watchlist Verification"]
      },
      "post": {
        "description": "Initiate a verification to check if a person appears on international sanctions lists or as a politically exposed person (PEP).\n",
        "operationId": "post-verifications-watchlists",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InitiateWatchlist" }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "pending": {
                    "summary": "Pending - verification is in progress: on creation the status is always pending",
                    "value": {
                      "id": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                      "workspace_id": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                      "created_at": "2025-02-12T23:59:59+00:00",
                      "updated_at": "2025-02-12T23:59:59+00:00",
                      "status": "pending",
                      "data_anonymized": false,
                      "data": {
                        "politically_exposed_person": {
                          "active": false,
                          "positions": []
                        },
                        "sanctions": { "active": false, "records": [] }
                      }
                    }
                  }
                },
                "schema": { "$ref": "#/components/schemas/WatchlistFull" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Initiate a Watchlist Verification",
        "tags": ["Watchlist Verification"]
      }
    },
    "/verifications/watchlists/{watchlistVerificationId}": {
      "get": {
        "description": "Retrieve a specific Watchlist Verification by its ID.\nReturns details about sanctions and politically exposed person status.\n",
        "operationId": "get-verifications-watchlists-id",
        "parameters": [
          {
            "description": "Watchlist Verification Id",
            "in": "path",
            "name": "watchlistVerificationId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "verified": {
                    "summary": "Verified result - no data was found",
                    "value": {
                      "id": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                      "workspace_id": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                      "created_at": "2025-02-12T23:59:59+00:00",
                      "updated_at": "2025-02-13T00:00:00+00:00",
                      "status": "verified",
                      "data_anonymized": false,
                      "data": {
                        "politically_exposed_person": {
                          "active": false,
                          "positions": []
                        },
                        "sanctions": { "active": false, "records": [] }
                      }
                    }
                  },
                  "failed": {
                    "summary": "Failed result - at least 1 PEP or sanction found",
                    "value": {
                      "id": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                      "workspace_id": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
                      "created_at": "2025-02-12T23:59:59+00:00",
                      "updated_at": "2025-02-13T00:00:00+00:00",
                      "status": "failed",
                      "data_anonymized": false,
                      "data": {
                        "politically_exposed_person": {
                          "active": true,
                          "positions": [
                            {
                              "title": "Minister of Finance",
                              "active": true,
                              "country_code": "FR",
                              "started_on": "2022-05-20",
                              "ended_on": null,
                              "sources": [
                                {
                                  "name": "Wikidata Politically Exposed Persons",
                                  "url": "https://www.opensanctions.org/datasets/wd_peps"
                                }
                              ]
                            }
                          ]
                        },
                        "sanctions": {
                          "active": true,
                          "records": [
                            {
                              "description": "Economic sanctions related to illegal actions",
                              "authority": "European Union",
                              "country_code": "EU",
                              "active": true,
                              "started_on": "2023-09-15",
                              "ended_on": null,
                              "sources": [
                                {
                                  "name": "EU Consolidated Sanctions List",
                                  "url": "https://www.opensanctions.org/datasets/eu_fsf"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": { "$ref": "#/components/schemas/WatchlistFull" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Retrieve a Watchlist Verification",
        "tags": ["Watchlist Verification"]
      }
    },
    "/webhooks": {
      "get": {
        "description": "Returns the list of all Webhook subscriptions in your Organization.",
        "operationId": "get-webhooks",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WebhookSubscription"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Webhook subscriptions",
        "tags": ["Webhook"]
      },
      "post": {
        "description": "Creates a new Webhook subscription in your organization.",
        "operationId": "post-webhooks-subscriptions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebhookSubscription"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/WebhookSubscription" }
              }
            },
            "description": "Created",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Create a Webhook subscription",
        "tags": ["Webhook"]
      }
    },
    "/webhooks/{webhookId}": {
      "delete": {
        "description": "Deletes a given Webhook subscription.",
        "operationId": "delete-webhooks-webhookId",
        "parameters": [
          {
            "description": "Webhook Id",
            "in": "path",
            "name": "webhookId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentDelete" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Delete a Webhook subscription",
        "tags": ["Webhook"]
      },
      "get": {
        "description": "Retrieves a given Webhook subscription.",
        "operationId": "get-webhooks-webhookId",
        "parameters": [
          {
            "description": "Webhook Id",
            "in": "path",
            "name": "webhookId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/WebhookSubscription" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Get a Webhook subscription",
        "tags": ["Webhook"]
      },
      "patch": {
        "description": "Updates a given Webhook subscription.\nAny parameters not provided are left unchanged.\n",
        "operationId": "patch-webhooks-webhookId",
        "parameters": [
          {
            "description": "Webhook Id",
            "in": "path",
            "name": "webhookId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWebhookSubscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/WebhookSubscription" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Update a Webhook subscription",
        "tags": ["Webhook"]
      }
    },
    "/workspaces": {
      "get": {
        "description": "Returns the list of all Workspaces within your Organization.",
        "operationId": "get-workspaces",
        "parameters": [
          {
            "description": "After cursor (pagination)",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": { "minLength": 1, "type": "string" }
          },
          {
            "description": "The limit of items count to retrieve.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_workspaces_200_response"
                }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "List Workspaces",
        "tags": ["Workspace"]
      },
      "post": {
        "description": "Creates a new Workspace in the organization.",
        "operationId": "post-workspace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateWorkspace" }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Workspace" }
              }
            },
            "description": "Created",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Create a Workspace",
        "tags": ["Workspace"]
      }
    },
    "/workspaces/default": {
      "get": {
        "description": "Retrieves the default Workspace.",
        "operationId": "get-workspaces-default",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Workspace" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Get the default Workspace",
        "tags": ["Workspace"]
      },
      "post": {
        "description": "Marks the given Workspace as default.",
        "operationId": "markWorkspaceAsDefault",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkWorkspaceAsDefault"
              }
            }
          }
        },
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentUpdate" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Mark the given Workspace as default",
        "tags": ["Workspace"]
      }
    },
    "/workspaces/{workspaceId}": {
      "delete": {
        "description": "Deletes a given Workspace and transfers everything that is attached to this Workspace to a another specified Workspace.",
        "operationId": "deleteWorkspace",
        "parameters": [
          {
            "description": "Workspace Id",
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DeleteWorkspace" }
            }
          }
        },
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentDelete" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Delete a Workspace",
        "tags": ["Workspace"]
      },
      "get": {
        "description": "Retrieves a given Workspace.",
        "operationId": "get-workspaces-workspaceId",
        "parameters": [
          {
            "description": "Workspace Id",
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Workspace" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Get a Workspace",
        "tags": ["Workspace"]
      },
      "patch": {
        "description": "Updates a given Workspace.\nAny parameters not provided are left unchanged.\n",
        "operationId": "patch-workspaces-workspaceId",
        "parameters": [
          {
            "description": "Workspace Id",
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateWorkspace" }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Workspace" }
              }
            },
            "description": "OK",
            "headers": {
              "RateLimit-Limit": {
                "$ref": "#/components/headers/rateLimit-limit"
              },
              "X-RateLimit-Limit-Hour": {
                "$ref": "#/components/headers/rateLimit-limit-hour"
              },
              "X-RateLimit-Limit-Minute": {
                "$ref": "#/components/headers/rateLimit-limit-minute"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/rateLimit-remaining"
              },
              "X-RateLimit-Remaining-Hour": {
                "$ref": "#/components/headers/rateLimit-remaining-hour"
              },
              "X-RateLimit-Remaining-Minute": {
                "$ref": "#/components/headers/rateLimit-remaining-minute"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/rateLimit-reset"
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "415": { "$ref": "#/components/responses/UnsupportedMediaType" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Update a Workspace",
        "tags": ["Workspace"]
      }
    },
    "/workspaces/{workspaceId}/users/{userId}": {
      "delete": {
        "description": "Removes a User from a given Workspace.",
        "operationId": "delete-workspace-workspaceId-users-userId",
        "parameters": [
          {
            "description": "Workspace Id",
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "User Id",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentDelete" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Remove a user from a workspace",
        "tags": ["User"]
      },
      "put": {
        "description": "Associates a User with a given Workspace.",
        "operationId": "put-workspaces-workspaceId-Users",
        "parameters": [
          {
            "description": "Workspace Id",
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          },
          {
            "description": "User Id",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UUID" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentUpdate" },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "403": { "$ref": "#/components/responses/ForbiddenError" },
          "404": { "$ref": "#/components/responses/NotFoundError" },
          "405": { "$ref": "#/components/responses/MethodNotAllowed" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "summary": "Associate a user to a workspace",
        "tags": ["User"]
      }
    }
  },
  "components": {
    "headers": {
      "rateLimit-limit": {
        "description": "The maximum number of requests that the consumer is permitted to make in a given period",
        "schema": { "type": "integer" }
      },
      "rateLimit-limit-hour": {
        "description": "The maximum number of requests that the consumer is permitted to make in an hour window",
        "schema": { "type": "integer" }
      },
      "rateLimit-limit-minute": {
        "description": "The maximum number of requests that the consumer is permitted to make in an minute window",
        "schema": { "type": "integer" }
      },
      "rateLimit-remaining": {
        "description": "The number of requests remaining in the current rate limit window",
        "schema": { "type": "integer" }
      },
      "rateLimit-remaining-hour": {
        "description": "The number of requests remaining in the current hour rate limit window",
        "schema": { "type": "integer" }
      },
      "rateLimit-remaining-minute": {
        "description": "The number of requests remaining in the current minute rate limit window",
        "schema": { "type": "integer" }
      },
      "rateLimit-reset": {
        "description": "The remaining time until the rate limit resets in seconds",
        "schema": { "type": "integer" }
      },
      "retry-after": {
        "description": "Retry the request after X seconds",
        "schema": { "type": "integer" }
      }
    },
    "parameters": {
      "ArchivedFileId": {
        "description": "ArchivedFileId",
        "in": "path",
        "name": "archivedFileId",
        "required": true,
        "schema": { "$ref": "#/components/schemas/UUID" }
      },
      "AfterCursor": {
        "description": "After cursor (pagination)",
        "in": "query",
        "name": "after",
        "required": false,
        "schema": { "minLength": 1, "type": "string" }
      },
      "Limit": {
        "description": "The limit of items count to retrieve.",
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "default": 100,
          "maximum": 100,
          "minimum": 1,
          "type": "integer"
        }
      },
      "LabelId": {
        "description": "Label Id",
        "in": "path",
        "name": "labelId",
        "required": true,
        "schema": { "$ref": "#/components/schemas/UUID" }
      },
      "SignatureRequestId": {
        "description": "Signature Request Id",
        "in": "path",
        "name": "signatureRequestId",
        "required": true,
        "schema": { "$ref": "#/components/schemas/UUID" }
      },
      "ApproverId": {
        "description": "Approver Id",
        "in": "path",
        "name": "approverId",
        "required": true,
        "schema": { "$ref": "#/components/schemas/UUID" }
      },
      "SignerConsentRequestId": {
        "description": "Signer Consent Request Id",
        "in": "path",
        "name": "consentRequestId",
        "required": true,
        "schema": { "$ref": "#/components/schemas/UUID" }
      },
      "SignerId": {
        "description": "Signer Id",
        "in": "path",
        "name": "signerId",
        "required": true,
        "schema": { "$ref": "#/components/schemas/UUID" }
      },
      "SignerDocumentRequestId": {
        "description": "Signer Document Request Id",
        "in": "path",
        "name": "documentRequestId",
        "required": true,
        "schema": { "$ref": "#/components/schemas/UUID" }
      },
      "DocumentId": {
        "description": "Document Id",
        "in": "path",
        "name": "documentId",
        "required": true,
        "schema": { "$ref": "#/components/schemas/UUID" }
      },
      "FieldId": {
        "description": "Field Id",
        "in": "path",
        "name": "fieldId",
        "required": true,
        "schema": { "$ref": "#/components/schemas/UUID" }
      },
      "SignerDocumentId": {
        "description": "Signer Document Id",
        "in": "path",
        "name": "signerDocumentId",
        "required": true,
        "schema": { "$ref": "#/components/schemas/UUID" }
      },
      "InvitationId": {
        "description": "Invitation Id",
        "in": "path",
        "name": "invitationId",
        "required": true,
        "schema": { "$ref": "#/components/schemas/UUID" }
      },
      "UserId": {
        "description": "User Id",
        "in": "path",
        "name": "userId",
        "required": true,
        "schema": { "$ref": "#/components/schemas/UUID" }
      },
      "LimitWithDefault10": {
        "description": "The limit of items count to retrieve.",
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "default": 10,
          "maximum": 100,
          "minimum": 1,
          "type": "integer"
        }
      },
      "WorkspaceId": {
        "description": "Workspace Id",
        "in": "path",
        "name": "workspaceId",
        "required": true,
        "schema": { "$ref": "#/components/schemas/UUID" }
      }
    },
    "responses": {
      "BadRequestError": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/BadRequestResponse" }
          }
        },
        "description": "Bad request",
        "headers": {
          "RateLimit-Limit": { "$ref": "#/components/headers/rateLimit-limit" },
          "X-RateLimit-Limit-Hour": {
            "$ref": "#/components/headers/rateLimit-limit-hour"
          },
          "X-RateLimit-Limit-Minute": {
            "$ref": "#/components/headers/rateLimit-limit-minute"
          },
          "RateLimit-Remaining": {
            "$ref": "#/components/headers/rateLimit-remaining"
          },
          "X-RateLimit-Remaining-Hour": {
            "$ref": "#/components/headers/rateLimit-remaining-hour"
          },
          "X-RateLimit-Remaining-Minute": {
            "$ref": "#/components/headers/rateLimit-remaining-minute"
          },
          "RateLimit-Reset": { "$ref": "#/components/headers/rateLimit-reset" }
        }
      },
      "UnauthorizedError": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/UnauthorizedResponse" }
          }
        },
        "description": "Access unauthorized",
        "headers": {
          "RateLimit-Limit": { "$ref": "#/components/headers/rateLimit-limit" },
          "X-RateLimit-Limit-Hour": {
            "$ref": "#/components/headers/rateLimit-limit-hour"
          },
          "X-RateLimit-Limit-Minute": {
            "$ref": "#/components/headers/rateLimit-limit-minute"
          },
          "RateLimit-Remaining": {
            "$ref": "#/components/headers/rateLimit-remaining"
          },
          "X-RateLimit-Remaining-Hour": {
            "$ref": "#/components/headers/rateLimit-remaining-hour"
          },
          "X-RateLimit-Remaining-Minute": {
            "$ref": "#/components/headers/rateLimit-remaining-minute"
          },
          "RateLimit-Reset": { "$ref": "#/components/headers/rateLimit-reset" }
        }
      },
      "ForbiddenError": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ForbiddenResponse" }
          }
        },
        "description": "Access forbidden",
        "headers": {
          "RateLimit-Limit": { "$ref": "#/components/headers/rateLimit-limit" },
          "X-RateLimit-Limit-Hour": {
            "$ref": "#/components/headers/rateLimit-limit-hour"
          },
          "X-RateLimit-Limit-Minute": {
            "$ref": "#/components/headers/rateLimit-limit-minute"
          },
          "RateLimit-Remaining": {
            "$ref": "#/components/headers/rateLimit-remaining"
          },
          "X-RateLimit-Remaining-Hour": {
            "$ref": "#/components/headers/rateLimit-remaining-hour"
          },
          "X-RateLimit-Remaining-Minute": {
            "$ref": "#/components/headers/rateLimit-remaining-minute"
          },
          "RateLimit-Reset": { "$ref": "#/components/headers/rateLimit-reset" }
        }
      },
      "NotFoundError": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/NotFoundResponse" }
          }
        },
        "description": "Resource not found",
        "headers": {
          "RateLimit-Limit": { "$ref": "#/components/headers/rateLimit-limit" },
          "X-RateLimit-Limit-Hour": {
            "$ref": "#/components/headers/rateLimit-limit-hour"
          },
          "X-RateLimit-Limit-Minute": {
            "$ref": "#/components/headers/rateLimit-limit-minute"
          },
          "RateLimit-Remaining": {
            "$ref": "#/components/headers/rateLimit-remaining"
          },
          "X-RateLimit-Remaining-Hour": {
            "$ref": "#/components/headers/rateLimit-remaining-hour"
          },
          "X-RateLimit-Remaining-Minute": {
            "$ref": "#/components/headers/rateLimit-remaining-minute"
          },
          "RateLimit-Reset": { "$ref": "#/components/headers/rateLimit-reset" }
        }
      },
      "MethodNotAllowed": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/MethodNotAllowed" }
          }
        },
        "description": "This method is not allowed",
        "headers": {
          "RateLimit-Limit": { "$ref": "#/components/headers/rateLimit-limit" },
          "X-RateLimit-Limit-Hour": {
            "$ref": "#/components/headers/rateLimit-limit-hour"
          },
          "X-RateLimit-Limit-Minute": {
            "$ref": "#/components/headers/rateLimit-limit-minute"
          },
          "RateLimit-Remaining": {
            "$ref": "#/components/headers/rateLimit-remaining"
          },
          "X-RateLimit-Remaining-Hour": {
            "$ref": "#/components/headers/rateLimit-remaining-hour"
          },
          "X-RateLimit-Remaining-Minute": {
            "$ref": "#/components/headers/rateLimit-remaining-minute"
          },
          "RateLimit-Reset": { "$ref": "#/components/headers/rateLimit-reset" },
          "Retry-After": { "$ref": "#/components/headers/retry-after" }
        }
      },
      "UnsupportedMediaType": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UnsupportedMediaTypeResponse"
            }
          }
        },
        "description": "UnsupportedMediaType",
        "headers": {
          "RateLimit-Limit": { "$ref": "#/components/headers/rateLimit-limit" },
          "X-RateLimit-Limit-Hour": {
            "$ref": "#/components/headers/rateLimit-limit-hour"
          },
          "X-RateLimit-Limit-Minute": {
            "$ref": "#/components/headers/rateLimit-limit-minute"
          },
          "RateLimit-Remaining": {
            "$ref": "#/components/headers/rateLimit-remaining"
          },
          "X-RateLimit-Remaining-Hour": {
            "$ref": "#/components/headers/rateLimit-remaining-hour"
          },
          "X-RateLimit-Remaining-Minute": {
            "$ref": "#/components/headers/rateLimit-remaining-minute"
          },
          "RateLimit-Reset": { "$ref": "#/components/headers/rateLimit-reset" }
        }
      },
      "TooManyRequests": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/TooManyRequestsResponse" }
          }
        },
        "description": "Too Many Requests, please try again later.",
        "headers": {
          "RateLimit-Limit": { "$ref": "#/components/headers/rateLimit-limit" },
          "X-RateLimit-Limit-Hour": {
            "$ref": "#/components/headers/rateLimit-limit-hour"
          },
          "X-RateLimit-Limit-Minute": {
            "$ref": "#/components/headers/rateLimit-limit-minute"
          },
          "RateLimit-Remaining": {
            "$ref": "#/components/headers/rateLimit-remaining"
          },
          "X-RateLimit-Remaining-Hour": {
            "$ref": "#/components/headers/rateLimit-remaining-hour"
          },
          "X-RateLimit-Remaining-Minute": {
            "$ref": "#/components/headers/rateLimit-remaining-minute"
          },
          "RateLimit-Reset": { "$ref": "#/components/headers/rateLimit-reset" },
          "Retry-After": { "$ref": "#/components/headers/retry-after" }
        }
      },
      "InternalServerError": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/InternalServerError" }
          }
        },
        "description": "Internal Server Error",
        "headers": {
          "RateLimit-Limit": { "$ref": "#/components/headers/rateLimit-limit" },
          "X-RateLimit-Limit-Hour": {
            "$ref": "#/components/headers/rateLimit-limit-hour"
          },
          "X-RateLimit-Limit-Minute": {
            "$ref": "#/components/headers/rateLimit-limit-minute"
          },
          "RateLimit-Remaining": {
            "$ref": "#/components/headers/rateLimit-remaining"
          },
          "X-RateLimit-Remaining-Hour": {
            "$ref": "#/components/headers/rateLimit-remaining-hour"
          },
          "X-RateLimit-Remaining-Minute": {
            "$ref": "#/components/headers/rateLimit-remaining-minute"
          },
          "RateLimit-Reset": { "$ref": "#/components/headers/rateLimit-reset" }
        }
      },
      "NoContentDelete": {
        "description": "The resource was deleted successfully",
        "headers": {
          "RateLimit-Limit": { "$ref": "#/components/headers/rateLimit-limit" },
          "X-RateLimit-Limit-Hour": {
            "$ref": "#/components/headers/rateLimit-limit-hour"
          },
          "X-RateLimit-Limit-Minute": {
            "$ref": "#/components/headers/rateLimit-limit-minute"
          },
          "RateLimit-Remaining": {
            "$ref": "#/components/headers/rateLimit-remaining"
          },
          "X-RateLimit-Remaining-Hour": {
            "$ref": "#/components/headers/rateLimit-remaining-hour"
          },
          "X-RateLimit-Remaining-Minute": {
            "$ref": "#/components/headers/rateLimit-remaining-minute"
          },
          "RateLimit-Reset": { "$ref": "#/components/headers/rateLimit-reset" }
        }
      },
      "NoContent": {
        "description": "No Content",
        "headers": {
          "RateLimit-Limit": { "$ref": "#/components/headers/rateLimit-limit" },
          "X-RateLimit-Limit-Hour": {
            "$ref": "#/components/headers/rateLimit-limit-hour"
          },
          "X-RateLimit-Limit-Minute": {
            "$ref": "#/components/headers/rateLimit-limit-minute"
          },
          "RateLimit-Remaining": {
            "$ref": "#/components/headers/rateLimit-remaining"
          },
          "X-RateLimit-Remaining-Hour": {
            "$ref": "#/components/headers/rateLimit-remaining-hour"
          },
          "X-RateLimit-Remaining-Minute": {
            "$ref": "#/components/headers/rateLimit-remaining-minute"
          },
          "RateLimit-Reset": { "$ref": "#/components/headers/rateLimit-reset" }
        }
      },
      "NoContentUpdate": {
        "description": "The resource was modified successfully",
        "headers": {
          "RateLimit-Limit": { "$ref": "#/components/headers/rateLimit-limit" },
          "X-RateLimit-Limit-Hour": {
            "$ref": "#/components/headers/rateLimit-limit-hour"
          },
          "X-RateLimit-Limit-Minute": {
            "$ref": "#/components/headers/rateLimit-limit-minute"
          },
          "RateLimit-Remaining": {
            "$ref": "#/components/headers/rateLimit-remaining"
          },
          "X-RateLimit-Remaining-Hour": {
            "$ref": "#/components/headers/rateLimit-remaining-hour"
          },
          "X-RateLimit-Remaining-Minute": {
            "$ref": "#/components/headers/rateLimit-remaining-minute"
          },
          "RateLimit-Reset": { "$ref": "#/components/headers/rateLimit-reset" }
        }
      }
    },
    "schemas": {
      "UploadArchivedFile": {
        "properties": {
          "file": {
            "description": "File to be uploaded",
            "format": "binary",
            "type": "string"
          },
          "workspace_id": {
            "example": "69120884-d29a-4b1a-ac7b-a9e73a872795",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "archive_y": {
            "nullable": true,
            "pattern": "^(true|false)?$",
            "type": "string"
          },
          "tags": {
            "description": "Tags for the file",
            "items": {
              "maxLength": 1000,
              "minLength": 1,
              "pattern": "[^\\x00-\\x1F\\x7F]*",
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "expired_at": {
            "description": "Expiration date of the file",
            "example": "2024-06-24 09:26:44",
            "nullable": true,
            "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01]) ([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$",
            "type": "string"
          }
        },
        "required": ["file"],
        "type": "object"
      },
      "ArchivedFile": {
        "description": "ArchivedFile",
        "properties": {
          "id": {
            "example": "21ac9d25-e24d-4564-b964-d67eed561ca9",
            "format": "uuid",
            "minLength": 1,
            "type": "string"
          },
          "sha256": {
            "description": "Sha256 checksum",
            "example": "6ecf29381314217530c02c64a97050a0a6a0944bb974b6b417588277e289aef0",
            "maxLength": 64,
            "minLength": 64,
            "type": "string"
          },
          "filename": { "maxLength": 255, "minLength": 1, "type": "string" },
          "created_at": {
            "description": "Creation date of the file",
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "type": "string"
          },
          "expired_at": {
            "description": "Expiration date of the file",
            "example": "2025-01-18T22:59:00Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "content_type": { "example": "application/pdf", "type": "string" },
          "size": { "example": 123456, "minimum": 1, "type": "integer" },
          "archive_y_identifier": {
            "description": "Identifier that allows to save the file in an additional storage.",
            "nullable": true,
            "type": "string"
          },
          "tags": {
            "description": "Tags for the file",
            "items": {
              "maxLength": 1000,
              "minLength": 1,
              "pattern": "[^\\x00-\\x1F\\x7F]*",
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "workspace_id": {
            "example": "528e2077-d0c1-4506-acd9-fac35a9cb7b4",
            "format": "uuid",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "archive_y_identifier",
          "content_type",
          "created_at",
          "expired_at",
          "filename",
          "id",
          "sha256",
          "size",
          "tags",
          "workspace_id"
        ],
        "title": "ArchivedFile",
        "type": "object"
      },
      "UUID": {
        "description": "The unique identifier for a resource.",
        "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
        "format": "uuid",
        "type": "string"
      },
      "Pagination": {
        "description": "Cursor based pagination",
        "properties": {
          "next_cursor": { "minLength": 1, "nullable": true, "type": "string" }
        },
        "required": ["next_cursor"],
        "type": "object"
      },
      "LegacyBankAccountVerification": {
        "properties": {
          "id": { "$ref": "#/components/schemas/UUID" },
          "status": {
            "$ref": "#/components/schemas/LegacyBankAccountVerificationStatus"
          },
          "status_codes": {
            "description": "List of response codes.",
            "example": [1604, 1611],
            "items": { "type": "integer" },
            "type": "array"
          }
        },
        "required": ["id", "status", "status_codes"],
        "title": "BankAccountVerification",
        "type": "object"
      },
      "LegacyCreateBankAccountVerification": {
        "properties": {
          "first_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "description": "Please provide the holder first name, exactly as it appears on the bank account document.\nPlease match it exactly, with the same characters, same case.\nOne exception: if the document mentions an honorary title, please don't provide it as part of the name.\nThe field can not be submitted if field \"legal_entity_name\" is provided.\n",
            "example": "John",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "last_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "description": "Please provide the holder last name, exactly as it appears on the bank account document.\nPlease match it exactly, with the same characters, same case.\nOne exception: if the document mentions an honorary title, please don't provide it as part of the name.\nThe field can not be submitted if field \"legal_entity_name\" is provided.\n",
            "example": "Doe",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "file": {
            "description": "Binary file",
            "format": "binary",
            "type": "string"
          },
          "iban": { "$ref": "#/components/schemas/IBAN" },
          "bic": { "$ref": "#/components/schemas/BIC" },
          "legal_entity_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "description": "Please provide the legal entity name, exactly as it appears on the bank account document.\nPlease match it exactly, with the same characters, same case.\nThe field can not be submitted if fields \"first_name\" and \"last_name\" are provided.\n",
            "example": "Foundation Teaming",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": ["file"],
        "type": "object"
      },
      "LegacyBankAccountVerificationCreated": {
        "properties": { "id": { "$ref": "#/components/schemas/UUID" } },
        "required": ["id"],
        "title": "BankAccountVerification",
        "type": "object"
      },
      "NullableIBAN": {
        "description": "International Bank Account Number (IBAN)",
        "example": "FR7610278030060001478474080",
        "maxLength": 34,
        "minLength": 14,
        "nullable": true,
        "pattern": "^([A-Z]{2}[ \\-]?[0-9]{2})(?=(?:[ \\-]?[A-Z0-9]){9,30}$)((?:[ \\-]?[A-Z0-9]{3,5}){2,7})([ \\-]?[A-Z0-9]{1,3})?$",
        "type": "string"
      },
      "NullableBIC": {
        "description": "Business Identifier Codes (BIC)",
        "example": "CMCIFR2A",
        "maxLength": 11,
        "minLength": 8,
        "nullable": true,
        "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$",
        "type": "string"
      },
      "DateYMD": {
        "example": "2022-12-10",
        "format": "date",
        "type": "string"
      },
      "Consumption": {
        "properties": {
          "app": { "$ref": "#/components/schemas/Consumption_app" },
          "api": { "$ref": "#/components/schemas/Consumption_api" },
          "connector": { "$ref": "#/components/schemas/Consumption_app" }
        },
        "required": ["api", "app", "connector"],
        "type": "object"
      },
      "AddonConsumption": {
        "properties": {
          "name": {
            "enum": [
              "electronic_signature",
              "advanced_electronic_signature",
              "qualified_electronic_signature_identity_verification",
              "qualified_electronic_signature_saved_identity",
              "electronic_seal",
              "advanced_electronic_seal",
              "archiving"
            ],
            "type": "string"
          },
          "start_at": {
            "description": "Beginning of the addon subscription",
            "example": "2020-05-18T07:25:36Z",
            "format": "date-time",
            "type": "string"
          },
          "end_at": {
            "description": "End of the addon subscription",
            "example": "2020-05-18T07:25:36Z",
            "format": "date-time",
            "type": "string"
          },
          "quota": { "minimum": 0, "type": "integer" },
          "consumed": { "minimum": 0, "type": "integer" },
          "provisioned": {
            "description": "Only available for qualified_electronic_signature_identity_verification and qualified_electronic_signature_saved_identity addons",
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": ["consumed", "end_at", "name", "quota", "start_at"],
        "type": "object"
      },
      "PaginationWithUpdatedAt": {
        "description": "Cursor based pagination",
        "properties": {
          "next_cursor": { "minLength": 1, "nullable": true, "type": "string" },
          "updated_at": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": ["next_cursor", "updated_at"],
        "type": "object"
      },
      "DetailedConsumption": {
        "properties": {
          "source": { "enum": ["app", "api", "connector"], "type": "string" },
          "type": {
            "enum": [
              "invited_signers",
              "electronic_seals",
              "identification_attempts",
              "archiving"
            ],
            "type": "string"
          },
          "level": {
            "description": "Only set when type is either `invited_signer`, `electronic_seals`, `identification_attempts`.\n",
            "enum": ["simple", "advanced", "qualified"],
            "type": "string"
          },
          "identification_mode": {
            "description": "Only set if type is identification_attempts.",
            "enum": ["identity_verification", "saved_identity"],
            "type": "string"
          },
          "workspace_id": {
            "description": "Only set if breakdown is set on workspaces.",
            "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
            "format": "uuid",
            "minLength": 1,
            "type": "string"
          },
          "value": {
            "description": "Count of items or file size in case of archiving.",
            "minimum": 1,
            "type": "integer"
          }
        },
        "required": ["source", "type", "value"],
        "type": "object"
      },
      "Contact": {
        "properties": {
          "id": { "format": "uuid", "type": "string" },
          "first_name": { "type": "string" },
          "last_name": { "type": "string" },
          "email": { "format": "email", "type": "string" },
          "locale": { "type": "string" },
          "phone_number": {
            "description": "E.164 format",
            "nullable": true,
            "type": "string"
          },
          "company_name": { "nullable": true, "type": "string" },
          "job_title": { "nullable": true, "type": "string" },
          "address_line_1": { "nullable": true, "type": "string" },
          "address_line_2": { "nullable": true, "type": "string" },
          "address_city": { "nullable": true, "type": "string" },
          "address_postal_code": { "nullable": true, "type": "string" },
          "address_country": { "nullable": true, "type": "string" },
          "workspace_id": {
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "address_city",
          "address_country",
          "address_line_1",
          "address_line_2",
          "address_postal_code",
          "company_name",
          "email",
          "first_name",
          "id",
          "job_title",
          "last_name",
          "locale",
          "phone_number"
        ],
        "title": "Contact",
        "type": "object"
      },
      "CreateContact": {
        "properties": {
          "first_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "example": "John",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "last_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "example": "Doe",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "example": "john.doe@example.com",
            "format": "email",
            "type": "string"
          },
          "locale": { "$ref": "#/components/schemas/Locale" },
          "phone_number": {
            "description": "E.164 format",
            "example": "+41446667700",
            "minLength": 1,
            "type": "string"
          },
          "company_name": {
            "description": "This property cannot start or end with whitespace, does not allow HTML tags, URL or email.",
            "example": "Yousign SAS",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "job_title": {
            "description": "This property cannot start or end with whitespace, does not allow HTML tags, URL or email.",
            "example": "Developer",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "address_line_1": {
            "description": "This property cannot start or end with whitespace, does not allow HTML tags, URL or email.",
            "example": "34 Rue Malfilatre",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "address_line_2": {
            "description": "This property cannot start or end with whitespace, does not allow HTML tags, URL or email.",
            "example": "1st floor",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "address_city": {
            "description": "This property cannot start or end with whitespace, does not allow HTML tags, URL or email.",
            "example": "Caen",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "address_postal_code": {
            "description": "This property cannot start or end with whitespace, does not allow HTML tags, URL or email.",
            "example": "14000",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "address_country": {
            "description": "This property cannot start or end with whitespace, does not allow HTML tags, URL or email.",
            "example": "France",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "workspace_id": {
            "example": "69120884-d29a-4b1a-ac7b-a9e73a872795",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["email", "first_name", "last_name", "locale"],
        "type": "object"
      },
      "UpdateContact": {
        "properties": {
          "first_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "example": "John",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "last_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "example": "Doe",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "example": "john.doe@example.com",
            "format": "email",
            "type": "string"
          },
          "locale": { "$ref": "#/components/schemas/Locale" },
          "phone_number": {
            "description": "E.164 format",
            "example": "+41446667700",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "company_name": {
            "example": "Yousign SAS",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "job_title": {
            "description": "This property cannot start or end with whitespace, does not allow HTML tags, URL or email.",
            "example": "Developer",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "address_line_1": {
            "description": "This property cannot start or end with whitespace, does not allow HTML tags, URL or email.",
            "example": "34 Rue Malfilatre",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "address_line_2": {
            "description": "This property cannot start or end with whitespace, does not allow HTML tags, URL or email.",
            "example": "1st floor",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "address_city": {
            "description": "This property cannot start or end with whitespace, does not allow HTML tags, URL or email.",
            "example": "Caen",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "address_postal_code": {
            "description": "This property cannot start or end with whitespace, does not allow HTML tags, URL or email.",
            "example": "14000",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "address_country": {
            "description": "This property cannot start or end with whitespace, does not allow HTML tags, URL or email.",
            "example": "France",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "workspace_id": {
            "example": "69120884-d29a-4b1a-ac7b-a9e73a872795",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomExperience": {
        "properties": {
          "id": { "format": "uuid", "readOnly": true, "type": "string" },
          "name": { "type": "string" },
          "landing_page_disabled": { "type": "boolean" },
          "side_panel_disabled": { "type": "boolean" },
          "background_color": { "nullable": true, "type": "string" },
          "button_color": { "nullable": true, "type": "string" },
          "text_color": { "nullable": true, "type": "string" },
          "text_button_color": { "nullable": true, "type": "string" },
          "disabled_notifications": {
            "items": {
              "$ref": "#/components/schemas/CustomExperience_DisabledNotificationsType"
            },
            "type": "array"
          },
          "email_logo_disabled": { "type": "boolean" },
          "email_header_text_disabled": { "type": "boolean" },
          "email_footer_signature_disabled": { "type": "boolean" },
          "email_expiration_text_disabled": { "type": "boolean" },
          "recipients_activity_disabled": { "type": "boolean" },
          "download_documents_disabled": { "type": "boolean" },
          "redirect_urls": {
            "$ref": "#/components/schemas/CustomExperience_redirect_urls"
          },
          "logo": {
            "example": "https://yousign.com/custom_experience/89120884-d29a-4b1a-ac7b-a9e73a872795/logo",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "source": { "$ref": "#/components/schemas/CustomExperience_Source" },
          "created_at": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "background_color",
          "button_color",
          "created_at",
          "disabled_notifications",
          "download_documents_disabled",
          "email_expiration_text_disabled",
          "email_footer_signature_disabled",
          "email_header_text_disabled",
          "email_logo_disabled",
          "id",
          "landing_page_disabled",
          "logo",
          "recipients_activity_disabled",
          "redirect_urls",
          "side_panel_disabled",
          "source",
          "text_button_color",
          "text_color"
        ],
        "type": "object"
      },
      "CreateCustomExperience": {
        "properties": {
          "name": {
            "description": "This property cannot start or end with whitespace, does not allow HTML tags, URL or email.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "landing_page_disabled": {
            "default": false,
            "nullable": true,
            "type": "boolean"
          },
          "side_panel_disabled": {
            "default": false,
            "nullable": true,
            "type": "boolean"
          },
          "background_color": {
            "description": "Hexadecimal color value",
            "example": "#ff0011",
            "nullable": true,
            "pattern": "^(#[a-f0-9]{3}$)|(#[a-f0-9]{6}$)",
            "type": "string"
          },
          "button_color": {
            "description": "Hexadecimal color value",
            "example": "#ff0011",
            "nullable": true,
            "pattern": "^(#[a-f0-9]{3}$)|(#[a-f0-9]{6}$)",
            "type": "string"
          },
          "text_color": {
            "description": "Hexadecimal color value",
            "example": "#ff0011",
            "nullable": true,
            "pattern": "^(#[a-f0-9]{3}$)|(#[a-f0-9]{6}$)",
            "type": "string"
          },
          "text_button_color": {
            "description": "Hexadecimal color value",
            "example": "#ff0011",
            "nullable": true,
            "pattern": "^(#[a-f0-9]{3}$)|(#[a-f0-9]{6}$)",
            "type": "string"
          },
          "disabled_notifications": {
            "items": {
              "$ref": "#/components/schemas/CustomExperience_DisabledNotificationsType"
            },
            "nullable": true,
            "type": "array"
          },
          "email_logo_disabled": {
            "default": false,
            "nullable": true,
            "type": "boolean"
          },
          "email_header_text_disabled": {
            "default": false,
            "nullable": true,
            "type": "boolean"
          },
          "email_footer_signature_disabled": {
            "default": false,
            "nullable": true,
            "type": "boolean"
          },
          "email_expiration_text_disabled": {
            "default": false,
            "nullable": true,
            "type": "boolean"
          },
          "recipients_activity_disabled": {
            "default": true,
            "nullable": true,
            "type": "boolean"
          },
          "download_documents_disabled": {
            "default": false,
            "description": "If false, signers won't be able to download documents before signing.",
            "nullable": true,
            "type": "boolean"
          },
          "redirect_urls": {
            "$ref": "#/components/schemas/CreateCustomExperience_redirect_urls"
          },
          "logo_layout": { "$ref": "#/components/schemas/LogoLayout" }
        },
        "required": ["name"],
        "type": "object"
      },
      "UpdateCustomExperience": {
        "properties": {
          "name": { "type": "string" },
          "landing_page_disabled": { "nullable": true, "type": "boolean" },
          "side_panel_disabled": { "nullable": true, "type": "boolean" },
          "background_color": {
            "description": "Hexadecimal color value",
            "example": "#ff0011",
            "nullable": true,
            "pattern": "^(#[a-f0-9]{3}$)|(#[a-f0-9]{6}$)",
            "type": "string"
          },
          "button_color": {
            "description": "Hexadecimal color value",
            "example": "#ff0011",
            "nullable": true,
            "pattern": "^(#[a-f0-9]{3}$)|(#[a-f0-9]{6}$)",
            "type": "string"
          },
          "text_color": {
            "description": "Hexadecimal color value",
            "example": "#ff0011",
            "nullable": true,
            "pattern": "^(#[a-f0-9]{3}$)|(#[a-f0-9]{6}$)",
            "type": "string"
          },
          "text_button_color": {
            "description": "Hexadecimal color value",
            "example": "#ff0011",
            "nullable": true,
            "pattern": "^(#[a-f0-9]{3}$)|(#[a-f0-9]{6}$)",
            "type": "string"
          },
          "disabled_notifications": {
            "items": {
              "$ref": "#/components/schemas/CustomExperience_DisabledNotificationsType"
            },
            "nullable": true,
            "type": "array"
          },
          "email_logo_disabled": { "nullable": true, "type": "boolean" },
          "email_header_text_disabled": { "nullable": true, "type": "boolean" },
          "email_footer_signature_disabled": {
            "nullable": true,
            "type": "boolean"
          },
          "email_expiration_text_disabled": {
            "nullable": true,
            "type": "boolean"
          },
          "recipients_activity_disabled": {
            "nullable": true,
            "type": "boolean"
          },
          "download_documents_disabled": {
            "description": "If false, signers won't be able to download documents before signing.",
            "nullable": true,
            "type": "boolean"
          },
          "redirect_urls": {
            "$ref": "#/components/schemas/UpdateCustomExperience_redirect_urls"
          },
          "logo_layout": { "$ref": "#/components/schemas/LogoLayout" }
        },
        "type": "object"
      },
      "CreateDocumentFromMultipart": {
        "properties": {
          "file": {
            "description": "Binary file",
            "format": "binary",
            "type": "string"
          },
          "nature": {
            "enum": ["attachment", "signable_document"],
            "type": "string"
          },
          "insert_after_id": {
            "description": "Insert just after the position of the specified document id",
            "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
            "format": "uuid",
            "type": "string"
          },
          "password": { "example": "MyPa$$word", "type": "string" },
          "name": {
            "description": "The document name. If not set, will use the uploaded document name. This value should contain any characters except \"\\\", \"/\" and can\\'t start and finish with a space.",
            "example": "file1",
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^(?!\\s)[^\\/\\\\]+(?<!\\s)$",
            "type": "string"
          },
          "initials": { "$ref": "#/components/schemas/InitialsArea" },
          "parse_anchors": { "type": "boolean" }
        },
        "required": ["file", "nature"],
        "type": "object"
      },
      "Document": {
        "description": "Document to attach to a Signature Request",
        "properties": {
          "id": {
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872796",
            "format": "uuid",
            "type": "string"
          },
          "filename": { "maxLength": 255, "minLength": 1, "type": "string" },
          "nature": {
            "enum": ["attachment", "signable_document"],
            "type": "string"
          },
          "content_type": { "example": "application/pdf", "type": "string" },
          "sha256": { "description": "Sha256 checksum", "type": "string" },
          "is_protected": { "type": "boolean" },
          "is_signed": { "type": "boolean" },
          "created_at": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "type": "string"
          },
          "total_pages": {
            "description": "Number of pages for signable document",
            "minimum": 1,
            "nullable": true,
            "type": "integer"
          },
          "is_locked": {
            "description": "If protected by password and not yet unlocked",
            "type": "boolean"
          },
          "initials": { "$ref": "#/components/schemas/Document_initials" },
          "total_anchors": {
            "description": "Number of parsed anchors from the document.",
            "type": "integer"
          }
        },
        "required": [
          "content_type",
          "created_at",
          "filename",
          "id",
          "initials",
          "is_locked",
          "is_protected",
          "is_signed",
          "nature",
          "sha256",
          "total_anchors",
          "total_pages"
        ],
        "title": "Document",
        "type": "object"
      },
      "CreateElectronicSealDocument": {
        "properties": {
          "file": {
            "description": "Binary file. Accepted formats: PDF.",
            "format": "binary",
            "type": "string"
          },
          "password": {
            "description": "The password required to unlock the document if it is protected.",
            "example": "MyPa$$word",
            "type": "string"
          }
        },
        "required": ["file"],
        "type": "object"
      },
      "CreateElectronicSealDocumentFromJson": {
        "oneOf": [
          { "$ref": "#/components/schemas/From_Electronic_Seal_Document" },
          { "$ref": "#/components/schemas/From_Signature_Request_Document" }
        ],
        "type": "object"
      },
      "ElectronicSealDocument": {
        "properties": {
          "id": {
            "example": "1365283d-0ba5-4a08-9a58-9818ef428320",
            "format": "uuid",
            "type": "string"
          },
          "total_pages": { "minimum": 1, "type": "integer" },
          "created_at": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": ["created_at", "id", "total_pages"],
        "type": "object"
      },
      "ElectronicSealImage": {
        "properties": {
          "id": {
            "example": "1365283d-0ba5-4a08-9a58-9818ef428320",
            "format": "uuid",
            "type": "string"
          },
          "name": { "example": "My seal image", "type": "string" },
          "created_at": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": ["created_at", "id", "name"],
        "type": "object"
      },
      "UploadElectronicSealImage": {
        "properties": {
          "file": {
            "description": "Seal Image to be displayed on a sealed Document. Accepted formats: PNG/JPG/GIF, max 500 Ko.",
            "format": "binary",
            "type": "string"
          },
          "name": {
            "description": "Name of the Seal Image.",
            "example": "My seal image",
            "type": "string"
          }
        },
        "required": ["file", "name"],
        "type": "object"
      },
      "CreateElectronicSealPayload": {
        "properties": {
          "document_id": {
            "description": "Specify which Electronic Seal Document to use for creating an Electronic Seal.",
            "example": "160473f9-156f-4583-848c-cbc3dec49b4a",
            "format": "uuid",
            "type": "string"
          },
          "image_id": {
            "description": "Specify which Electronic Seal Image to use for creating an Electronic Seal.",
            "example": "333fa90a-a629-4708-8fe9-160dcb055a9b",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "external_id": {
            "description": "Store a custom id that will be added to webhooks",
            "example": "externalId-123",
            "maxLength": 255,
            "nullable": true,
            "pattern": "^[\\w\\-@.%+]+$",
            "type": "string"
          },
          "fields": {
            "description": "Fields you want to add to your Document. At least one Seal Field is mandatory.",
            "items": {
              "$ref": "#/components/schemas/CreateElectronicSealPayload_fields_inner"
            },
            "type": "array"
          },
          "signature_level": {
            "description": "Level of Electronic Seal for your Document",
            "enum": ["electronic_signature", "advanced_electronic_signature"],
            "nullable": true,
            "type": "string"
          },
          "certificate_id": {
            "description": "Specify which certificate to use for creating an Electronic Seal (only available for advanced_electronic_signature level).",
            "example": "a3d84df7-b45e-4321-ae9e-7f5397acb225",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["document_id", "fields"],
        "title": "CreateElectronicSealPayload",
        "type": "object"
      },
      "ElectronicSeal": {
        "properties": {
          "id": {
            "example": "1365283d-0ba5-4a08-9a58-9818ef428320",
            "format": "uuid",
            "type": "string"
          },
          "status": {
            "enum": ["pending", "processing", "done", "error"],
            "example": "pending",
            "type": "string"
          },
          "created_at": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "type": "string"
          },
          "document_id": {
            "example": "37646975-7e73-41f1-be7f-f4d85d181d03",
            "format": "uuid",
            "type": "string"
          },
          "timestamp": { "type": "boolean" },
          "image_id": {
            "example": "6c82bd7a-d7f7-45e0-82f4-b92222567346",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "external_id": {
            "description": "Store a custom id that will be added to webhooks",
            "example": "externalId-123",
            "maxLength": 255,
            "nullable": true,
            "pattern": "^[\\w\\-@.%+]+$",
            "type": "string"
          },
          "signature_level": {
            "enum": ["electronic_signature", "advanced_electronic_signature"],
            "example": "electronic_signature",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "document_id",
          "external_id",
          "id",
          "image_id",
          "signature_level",
          "status",
          "timestamp"
        ],
        "title": "ElectronicSeal",
        "type": "object"
      },
      "ElectronicSealAuditTrail": {
        "properties": {
          "version": { "type": "number" },
          "classification": { "type": "string" },
          "organization": { "type": "object" },
          "seal": { "type": "object" },
          "document": { "type": "object" }
        },
        "required": [
          "classification",
          "document",
          "organization",
          "seal",
          "version"
        ],
        "type": "object",
        "x-examples": {
          "example-1": {
            "version": 1,
            "classification": "Confidential",
            "organization": {
              "id": "d89a0f7b-bd3f-494d-ab61-71b69f24a3d9",
              "name": "Universalt Music"
            },
            "signer": {
              "id": "44e4b0f8-55c9-48a9-803f-d89957525270",
              "created_at": "2021-07-05 12:21:42.352630",
              "seal_process_completed_at": "2021-07-05 12:21:43.656000",
              "ip_address": "172.18.0.1"
            },
            "documents": {
              "id": "a9534a42-bbc1-4355-b270-58f315eda779",
              "initial_storage_id": "fdad7bcf-73d5-4a73-945d-ba7b738c530b",
              "initial_hash": {
                "algorithm": "sha256",
                "value": "8decc8571946d4cd70a024949e033a2a2a54377fe9f1c1b944c20f9ee11a9e51"
              },
              "mime_type": "application/pdf",
              "seals": [
                {
                  "reason": "Signed by Yousign",
                  "hash": {
                    "algorithm": "sha256",
                    "value": "4396f6a9f0554928f7bcc8e645a6441cb432c1606137ac8f3a735aef83946974"
                  },
                  "timestamp": false,
                  "certificate": {
                    "dn": "CN=Yousign, C=FR, O=Yousign, OU=794513986, serialNumber=2019-02-15 10:07:35:938",
                    "oid": "1.2.250.1.302.1.7.1.0",
                    "generated_at": "2019-02-15 09:07:36.000000",
                    "hash": {
                      "algorithm": "sha256",
                      "value": "69570e2d5cc2b352b2249ba32b16195722099a89aa35de71ee1e745f771d66c5"
                    },
                    "content": "-----BEGIN CERTIFICATE-----\nMIIF8DCCA9igAwIBAgIIdfWiF8OAJo0wDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBTSUdOMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTkwMjE1MDg1NzM2WhcNMjIwMjE0\nMDkwNzAwWjBnMRAwDgYDVQQDDAdZb3VzaWduMSAwHgYDVQQFExcyMDE5LTAyLTE1\nIDEwOjA3OjM1OjkzODESMBAGA1UECwwJNzk0NTEzOTg2MRAwDgYDVQQKDAdZb3Vz\naWduMQswCQYDVQQGEwJGUjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nAIWI+w9xQ9uSt4Lb/l14Yu8yRvCWer06bzm5RFvqgZRiD2Cq2Vx8LNzi0pGCxBdI\nQ9nlWcxCAh67Lp/OygCKpUN2DnNiIiORK5b283VKASlGMy5frVOCKiq2YCz0vA6k\npIqzBP7DKV/CsZ3EqP0uw9C12EH3PrBJGQq4WOZI1Q5Fs2JAhOwfq/wq2orG424y\n0A9+smh8J3DjwSCoMQZrdHd/obK3w8AaTGI535dqWIZ0wKTZBZ7xahGAPGXo9cy9\nUXFtazxWGIcu5uYjRLtlUyialcUgB0db1eyOzFoRJCsaE6s7QgBhQUUfDkXs1UIp\nD0BfB/K2kPxGENm2Uk6WAfcCAwEAAaOCAYYwggGCMAwGA1UdEwEB/wQCMAAwHwYD\nVR0jBBgwFoAUzmRTx3jf2iI16mJGhB48l67NzPUwSwYDVR0gBEQwQjBABgoqgXoB\ngi4BBwEAMDIwMAYIKwYBBQUHAgEWJGh0dHA6Ly95b3VzaWduLmZyL2ZyL3B1Ymxp\nYy9kb2N1bWVudDAgBgNVHSUEGTAXBgorBgEEAYI3CgMMBgkqhkiG9y8BAQUwgbIG\nA1UdHwSBqjCBpzA1oDOgMYYvaHR0cDovL3RtcC55b3VzaWduLmZyL2NybC95b3Vz\naWduc2Fzc2lnbjJjYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAyLnlvdXNpZ24uZnIv\nY3JsL3lvdXNpZ25zYXNzaWduMmNhLmNybDA2oDSgMoYwaHR0cDovL3RtcDMueW91\nc2lnbi5mci9jcmwveW91c2lnbnNhc3NpZ24yY2EuY3JsMB0GA1UdDgQWBBTgXAE8\nONE89UOu8TjrtBH9cbd92jAOBgNVHQ8BAf8EBAMCBkAwDQYJKoZIhvcNAQELBQAD\nggIBAAF+VPpcphjyoU8RvQO14ojWV51wJxsx5ShsvtXPsQ7dBws8XmthuTyyYxtM\nE3dldkJsaQt8vK7/AUURwO7YX7PHVlwIqm2kpNThZ4+sEib3SOivP8vpfIP3mD0+\nIFREI/8adIWYyiYzp1xjuuAoZ6lyg2JsOQ/67nyS+y7sUQ++GfQulb5yjkMytmYs\nPJ0uyjnNAI/+hy4okIY7qgHFZaDGBSqdGU28NZcCEeBLwjcH4ET2Q1LvJ7nkKQMM\ncxw+TXdy7cgIAjdfCymjJ701s43JKI01NFrNZ0I20jTOuh2qB4Kf8fQFwmutTnRM\nP4ZglXsXZkyL9snUWwMSAP9QP13fPD6EDTTshyijvwHb6zbrFg3U7J0m/Sjmqp2A\nzD+pj777dQ2jg0zTJ3WLOosE1/tt60ygK3HhiVnnyM8sdjTrZ6ca9++TgnRthKss\nR35c/1Be3RJtYnar2yn3bA2pklLcjnV8Q3ZSks4ll7XnEI9V8EQSNHkmno7k+asl\nWeQ8eC82fkwCwzXMLBTt1kN+0qXfpvVoSITPSVlOvdCsFCRSC3JMYHUY6c9oUUlV\nCCEBWxe/Vm8R+AG4i3zk9wIoLDLW2eeOx1G61QFtIlgJPbKRLiDZhaGZq1PN8T2o\nD/1S7m9PMISw1hrWHpJM+gZpRLsfRp5EH3ieRFzt24fpIosf\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIGnDCCBISgAwIBAgIIfVpT4jgxW6cwDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBST09UMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTYwMTI3MTYyODExWhcNMjYwMTI3\nMTYyODExWjB/MSQwIgYDVQQDDBtZT1VTSUdOIFNBUyAtIFNJR04yIFRFU1QgQ0Ex\nEjAQBgNVBAsMCTc5NDUxMzk4NjEUMBIGA1UECgwLWU9VU0lHTiBTQVMxDTALBgNV\nBAcMBENBRU4xETAPBgNVBAgMCENBTFZBRE9TMQswCQYDVQQGEwJGUjCCAiIwDQYJ\nKoZIhvcNAQEBBQADggIPADCCAgoCggIBALUsirI2GYG9qu3U2S4V4JI0V9ohNP3W\nEpssSBcepPBV4UPtwAbFGvJqtGO/0nNZO0J7UwUb0sZBnedFl96tRQff3PECyO9k\n1B1/8rK1TbLPQPhTYWlrvX69wHXJFPxf/JkL4l4Lp6nFS80SYlaRj2RHHJ8HDj8S\nP1oULnhW2f2i8AlJwFe34eLJbWgeI5D7UAo59GMQ6bO4aVMaaDWvXsKOn8qmCUwF\ngtQNOqtYyLgURr4qivbjsZEv5H4Ee+wR5J+U6wd9dpIoTV2g1mExNlKVoj9qX9rh\n4al4G80fKNUT8bVnzxmdkDZzuzKm+rNIN6Fnc5CTHu2IcMHcuvKMRvsSJ+0fiz1E\nb/xsKO18Aiy5XOEQFqDrXRKC5AMmF/zB9Fh1Xe7Bi6IQo15NOjOCHLiBTARsMBJ8\nRWTuTv89qnL1lECogFusbptDG4Gu7Y7M13V8gOoGAxBs6uALjoseFZcnLQlIjZCV\nL0xyhrXFCLFnv4gy2+xY1bJNueD3cLFkzaxiCJ4WKesmRIfc6vHaQNl5NpU+9tFb\nU6o01c3fjZUdIh/MR3GFIXNpPsilhl///5aT5h2L98Gmb2q7tqSbFqm5z17MG3uS\ne4zCt+UD7MI8oCF2CELo79xMjtmqEwIf0IU8MxaLaLSZ0J164ZyHwvfIewgBp8XF\nqLn0jrZNiocXAgMBAAGjggEaMIIBFjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQY\nMBaAFGXEFaTuRlW+zr11R8A0QEYcGvuRMIGyBgNVHR8EgaowgacwNaAzoDGGL2h0\ndHA6Ly90bXAueW91c2lnbi5mci9jcmwveW91c2lnbnNhc3Jvb3QyY2EuY3JsMDag\nNKAyhjBodHRwOi8vdG1wMi55b3VzaWduLmZyL2NybC95b3VzaWduc2Fzcm9vdDJj\nYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAzLnlvdXNpZ24uZnIvY3JsL3lvdXNpZ25z\nYXNyb290MmNhLmNybDAdBgNVHQ4EFgQUzmRTx3jf2iI16mJGhB48l67NzPUwDgYD\nVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQBZ8ru8LEQ1qzQqG/Rx420f\ncN4YNM1cXV+DwpWOw46Oh9U7BG1i/wYPy6uEZvj/n+nm/MkbajrzTViZnKMRs7Wy\nCWBqvAfl4gcbWvrRzdVwsbd3UbsxD5UD1CkJYl5/4gPvCae6YVCF9WtnH2lSy/Gv\n5bbIfyXF++iNQn+lLe59EhA3WinTql/yk/SPUNVn4/IZ0UWrw1IPS3kmnIal1mk7\npL45n5G51qAHpSbAoTsCeRBJZ6jr38n+FimZahnBZTu4+XycDVicrydpsopQiTt8\nry+mP1b9Nd4eoHR4/F/82w1rNfAM0NJKL8w3qr8lMdxsbANMvW0ixgjRnBpuRRB4\n5iUA5Mb2DbiYJARBoruYqYGya317Gcvtk4w0O48CXR+HPXygHh/63De1JdOUjSc2\nHagr6jp7NKbn/XmWBjWuoG9J9d9sC5U/mgjw5Xjf9jKGuUGz46EtlzzpojVB7fJA\nE2Ye0kOuLANpoTFAI4EJe5nTJz0HsFG3nDshsD9Mb1/kUBSGUDWijL5f0LDqf562\nkTioMpkK7ivZxQksF8+bMId5sUNrDVA/6lhn8tD5gzGacSU7IMfIH3EUKcI1NoWm\nhV+aI8EbXP6251cF74y/tejTUQLdOQ9ut3PsxYmTTDqr8RPI6UZeh2yibzSmgGwU\nfylsTiF/gVGm5cpWCrULCw==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIGnDCCBISgAwIBAgIIT0TY3eM9ut0wDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBST09UMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTYwMTI3MTYyNjE2WhcNMzYwMTI3\nMTYyNjE2WjB/MSQwIgYDVQQDDBtZT1VTSUdOIFNBUyAtIFJPT1QyIFRFU1QgQ0Ex\nEjAQBgNVBAsMCTc5NDUxMzk4NjEUMBIGA1UECgwLWU9VU0lHTiBTQVMxDTALBgNV\nBAcMBENBRU4xETAPBgNVBAgMCENBTFZBRE9TMQswCQYDVQQGEwJGUjCCAiIwDQYJ\nKoZIhvcNAQEBBQADggIPADCCAgoCggIBALXMHUFwSacaI5TjtMRw4kJ9o1ve/IZo\noj+2HOpW3iqs74cmsYjpHbJD0UAdh3SpdlLFK1/WBf0uEbzn6z7gRfUkEAo5EnHs\nM1iTfCXWDtA+xd9X4h2UAVEdXRzglvOvT275fjI1uj9Zi4Rz95drhlGkZVCDIMuv\n7fazkT868grWSfGSUc2C8d9+kOL4pCKuSanOc/nwD61F+oQ6KeEMtmpbr57Yy+qY\ntaF6ieKiDGn0aDj3yImnA9YqfFlX4mCyn+LmiqrXyEn0Z5iYLbO0wXkyPqhcO9c9\ngS1Y8Y/1AEvxnaLlV3eG402ZYUS6tT27o+tpdCAIx+3zMhNsPI9wXUjlVr/8ts+/\nuOUUCUWoBK3J6R1zG3urCdnuor8xAaWK/OHtvg8rXoXEfi8ujWV3EbiwIwiUHVh4\nrJIE1vhsVPW/sTM9yEjRFks0swyoX6QupEuaZLV4DbmcEbmZ2XIH5Cw2c1qwUTk2\n8vQzKHszLdRb9scnjd3yHsef5ZAHS9hUoFIfG+MzINGm3U6v4exspSw/EshSavVj\nR+gL0l+sdK4L6xe++K++Gpp5xn5cZUJeg4YtdgGju7lMdGpJVVwl0Y8UAEJt9xgC\nMvGctrkoaUuBjOhrGQQITDMsNrtgi28s7rUB6k+yxcaGBBp2PyAIsIe0e1wKGm1N\nHjGtqY0IV1tFAgMBAAGjggEaMIIBFjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQY\nMBaAFGXEFaTuRlW+zr11R8A0QEYcGvuRMIGyBgNVHR8EgaowgacwNaAzoDGGL2h0\ndHA6Ly90bXAueW91c2lnbi5mci9jcmwveW91c2lnbnNhc3Jvb3QyY2EuY3JsMDag\nNKAyhjBodHRwOi8vdG1wMi55b3VzaWduLmZyL2NybC95b3VzaWduc2Fzcm9vdDJj\nYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAzLnlvdXNpZ24uZnIvY3JsL3lvdXNpZ25z\nYXNyb290MmNhLmNybDAdBgNVHQ4EFgQUZcQVpO5GVb7OvXVHwDRARhwa+5EwDgYD\nVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQCuxOXQDSYF0RpYQWonRDlU\nZ64IaGJ5buU4tGzf7rAgIQdXbO/VjjfF9UsjnLopNwWkuSJvINm21obYHcoSwvpz\nlwS/3uJCLxaw5q4SVJ4x5rajh/2qtFzcThSh48rcXcqoxAmc6BzQuIOm9cFUD2Ri\nqUJmg5O+CoLuE1b4i+CsCFL3AoWnBHFZ4YtInQBFIRBhMNPICvYOCF6jjgmMxkWU\nM8SEp7FSFfsy/oPI1dt+k9JjHCXhtWO9ndLvvwvLcjqRO3ItiF9IazsNcNLhaIMA\nlvYiQ+jLpckAuTxj7XHQyJSEofTMPr+ZSgQwUc337MJyxPhTDkch5cQBfnC20Usk\nyjdwwaeiwnNMhESwgDa4Oqw5IOmq+VmqtR+9F9yxACrpyph593F1zYwv7ikik5dI\nIYACb2fKLQrcnCfhm0k1Nt9UXoc9mQzFUK0DWJNLeGJo0rfRQh5ZqhcBG2U0KZFQ\nRtQQEf3zXJxQJGlCn1UMZMJswAzfhMTdGPNzyDI2u+9Q8WT7M2f59Idiae2m79uG\nuStRwN7Vnrpa399YXixOpNTz6d0NFBOAq1Nfwy5cnQDCnT9JkrKidrFKyA21b67m\nSfJIpMSPfFbt3g0h7JPWK7OC4Ydydh92e7/IUhtkudKMoazlwSJ7484dE7NyTpol\n62H0sW/1gmFzE6/QmCUR+w==\n-----END CERTIFICATE-----"
                  }
                }
              ]
            }
          }
        }
      },
      "LegacyIdDocumentVerification": {
        "properties": {
          "id": { "$ref": "#/components/schemas/UUID" },
          "status": {
            "$ref": "#/components/schemas/LegacyIdDocumentVerificationStatus"
          },
          "status_codes": {
            "description": "List of response codes.",
            "example": [1706, 1707],
            "items": { "type": "integer" },
            "type": "array"
          }
        },
        "required": ["id", "status", "status_codes"],
        "title": "IdDocumentVerification",
        "type": "object"
      },
      "LegacyCreateIdDocumentVerification": {
        "properties": {
          "first_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "description": "Please provide the holder first name, exactly as it appears on the ID document.\nPlease match it exactly, with the same characters, same case.\nOne exception: if the document mentions an honorary title, please don't provide it as part of the name.\n",
            "example": "John",
            "maxLength": 255,
            "minLength": 1,
            "nullable": false,
            "type": "string"
          },
          "last_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "description": "Please provide the holder last name, exactly as it appears on the ID document birth name.\nPlease match it exactly, with the same characters, same case.\nOne exception: if the document mentions an honorary title, please don't provide it as part of the name.\n",
            "example": "Doe",
            "maxLength": 255,
            "minLength": 1,
            "nullable": false,
            "type": "string"
          },
          "document_type": {
            "description": "The document type to verify",
            "enum": [
              "id_card",
              "passport",
              "residence_permit",
              "driver_license",
              "ita_ts_cns"
            ],
            "example": "id_card",
            "type": "string"
          },
          "file": {
            "description": "Binary file",
            "format": "binary",
            "type": "string"
          },
          "additional_file": {
            "description": "Binary file",
            "format": "binary",
            "type": "string"
          }
        },
        "required": ["file", "first_name", "last_name"],
        "title": "Create an ID Document verification with names",
        "type": "object"
      },
      "LegacyCreateIdDocumentVerificationWithoutName": {
        "properties": {
          "document_type": {
            "description": "The document type to verify",
            "enum": [
              "id_card",
              "passport",
              "residence_permit",
              "driver_license",
              "ita_ts_cns"
            ],
            "example": "id_card",
            "type": "string"
          },
          "file": {
            "description": "Binary file",
            "format": "binary",
            "type": "string"
          },
          "additional_file": {
            "description": "Binary file",
            "format": "binary",
            "type": "string"
          }
        },
        "required": ["file"],
        "title": "Create an ID Document verification without names",
        "type": "object"
      },
      "LegacyIdDocumentVerificationCreated": {
        "properties": { "id": { "$ref": "#/components/schemas/UUID" } },
        "required": ["id"],
        "title": "IdDocumentVerification",
        "type": "object"
      },
      "Label": {
        "properties": {
          "id": {
            "description": "Unique identifier of the Label.",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "nullable": false,
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the Label.",
            "example": "Contracts",
            "maxLength": 128,
            "minLength": 1,
            "nullable": false,
            "type": "string"
          },
          "created_at": {
            "description": "Creation date of the Label.",
            "example": "2025-02-12T23:59:59Z",
            "format": "date-time",
            "nullable": false,
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["created_at", "id", "name"],
        "title": "Label",
        "type": "object"
      },
      "CreateLabel": {
        "properties": {
          "name": {
            "description": "Name of the Label. Each Label name must be unique within the organization.",
            "example": "Contracts",
            "maxLength": 128,
            "minLength": 1,
            "nullable": false,
            "title": "Name of the Label.",
            "type": "string"
          }
        },
        "required": ["name"],
        "title": "A Label object",
        "type": "object"
      },
      "UpdateLabel": {
        "properties": {
          "name": {
            "description": "Name of the Label. Each Label name must be unique within the organization.",
            "example": "Contracts",
            "maxLength": 128,
            "minLength": 1,
            "nullable": false,
            "title": "The name of your Label",
            "type": "string"
          }
        },
        "required": ["name"],
        "title": "A Label object",
        "type": "object"
      },
      "SignatureRequestInList": {
        "properties": {
          "id": {
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "minLength": 1,
            "type": "string"
          },
          "status": { "$ref": "#/components/schemas/SignatureRequestStatus" },
          "name": {
            "example": "signature request name",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "delivery_mode": { "enum": ["email", "none"], "type": "string" },
          "created_at": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "minLength": 1,
            "type": "string"
          },
          "ordered_signers": {
            "description": "Enable an ordered workflow, each Signer will be requested to sign in a sequential order",
            "type": "boolean"
          },
          "ordered_approvers": {
            "description": "Enable an ordered workflow, each Approver will be requested to approve in a sequential order",
            "type": "boolean"
          },
          "reminder_settings": {
            "$ref": "#/components/schemas/SignatureRequestInList_reminder_settings"
          },
          "timezone": {
            "$ref": "#/components/schemas/SignatureRequestTimeZone"
          },
          "email_custom_note": {
            "deprecated": true,
            "example": "Please sign these documents as soon as possible.",
            "nullable": true,
            "type": "string"
          },
          "expiration_date": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "type": "string"
          },
          "source": {
            "enum": [
              "app",
              "public_api",
              "hubspot_integration",
              "connector_salesforce_api",
              "connector_google_api",
              "connector_zapier_api"
            ],
            "type": "string"
          },
          "signers": {
            "items": {
              "$ref": "#/components/schemas/SignatureRequestInList_signers_inner"
            },
            "type": "array"
          },
          "approvers": {
            "items": {
              "$ref": "#/components/schemas/SignatureRequestInList_approvers_inner"
            },
            "type": "array"
          },
          "labels": {
            "description": "Labels associated to the Signature Request",
            "items": { "$ref": "#/components/schemas/SignatureRequestLabel" },
            "type": "array"
          },
          "documents": {
            "items": {
              "$ref": "#/components/schemas/SignatureRequestInList_documents_inner"
            },
            "type": "array"
          },
          "sender": {
            "$ref": "#/components/schemas/SignatureRequestInList_sender"
          },
          "external_id": {
            "example": "An_external-ID",
            "nullable": true,
            "type": "string"
          },
          "branding_id": {
            "deprecated": true,
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "custom_experience_id": {
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "signers_allowed_to_decline": { "example": true, "type": "boolean" },
          "workspace_id": {
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "type": "string"
          },
          "audit_trail_locale": {
            "$ref": "#/components/schemas/AuditTrailLocale"
          },
          "bulk_send_batch_id": {
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "audit_trail_locale",
          "branding_id",
          "bulk_send_batch_id",
          "created_at",
          "custom_experience_id",
          "delivery_mode",
          "documents",
          "email_custom_note",
          "expiration_date",
          "external_id",
          "id",
          "name",
          "ordered_approvers",
          "ordered_signers",
          "reminder_settings",
          "sender",
          "signers",
          "signers_allowed_to_decline",
          "source",
          "status",
          "timezone"
        ],
        "title": "SignatureRequest",
        "type": "object"
      },
      "CreateSignatureRequest": {
        "properties": {
          "name": {
            "description": "Name of the signature request",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "delivery_mode": {
            "description": "Delivery mode to notify signers.",
            "enum": ["none", "email"],
            "type": "string"
          },
          "ordered_signers": {
            "description": "Enable an ordered workflow, each signer will be requested to sign in a sequential order",
            "example": true,
            "type": "boolean"
          },
          "ordered_approvers": {
            "description": "When enabled, Approvers are requested to approve sequentially.\nEach Approver will be invited to approve only once the previous one has completed their approval.\n",
            "example": true,
            "type": "boolean"
          },
          "reminder_settings": {
            "$ref": "#/components/schemas/CreateSignatureRequest_reminder_settings"
          },
          "timezone": {
            "$ref": "#/components/schemas/SignatureRequestTimeZone"
          },
          "email_custom_note": {
            "deprecated": true,
            "description": "A custom note added to emails sent to signers.",
            "example": "Please sign these documents as soon as possible.",
            "maxLength": 500,
            "nullable": true,
            "type": "string"
          },
          "expiration_date": {
            "description": "Due date of the Signature Request (yyyy-mm-dd). Defaults to 6 months after initiation.\nThe date cannot be in the past and cannot be more than one year after initiation.\n",
            "format": "date",
            "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string"
          },
          "template_id": {
            "description": "Create a signature request from an existing template.",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "type": "string"
          },
          "external_id": {
            "description": "Store a custom id that will be added to webhooks & appended to redirect urls.",
            "maxLength": 255,
            "nullable": true,
            "pattern": "^[\\w\\-@.%+]+$",
            "type": "string"
          },
          "branding_id": {
            "deprecated": true,
            "description": "Use a specific branding to customize the signature experience.",
            "example": "3a93d3b5-fb3b-4abf-9e70-26315b33506b",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "custom_experience_id": {
            "description": "Use a specific Custom Experience to customize the signature experience.",
            "example": "3a93d3b5-fb3b-4abf-9e70-26315b33506b",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "documents": {
            "deprecated": true,
            "description": "You can directly attach orphan documents to the signature request.",
            "items": {
              "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
              "format": "uuid",
              "type": "string"
            },
            "maxItems": 5,
            "type": "array",
            "uniqueItems": true
          },
          "signers": {
            "deprecated": true,
            "description": "Can only be used if you add documents at the same time.",
            "items": {
              "$ref": "#/components/schemas/CreateSignatureRequest_signers_inner"
            },
            "type": "array"
          },
          "workspace_id": {
            "description": "Scope the signature request to a specific workspace. If template_id is filled and Template is already linked to a Workspace, keep this field to null ; the created Signature Request will be scoped to Template's Workspace.",
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "audit_trail_locale": {
            "allOf": [{ "$ref": "#/components/schemas/AuditTrailLocale" }],
            "description": "Define the locale for the generated audit trail.",
            "nullable": true
          },
          "signers_allowed_to_decline": {
            "default": false,
            "description": "Allowing signers to decline to sign.",
            "example": true,
            "type": "boolean"
          },
          "email_notification": {
            "$ref": "#/components/schemas/SignatureRequest_EmailNotification"
          },
          "template_placeholders": {
            "$ref": "#/components/schemas/CreateSignatureRequest_template_placeholders"
          },
          "archiving": { "$ref": "#/components/schemas/Archiving" },
          "labels": {
            "description": "List of Labels to associate with the Signature Request. Labels are identified by their ID.",
            "example": [
              "3a93d3b5-fb3b-4abf-9e70-26315b33506b",
              "89120884-d29a-4b1a-ac7b-a9e73a872795"
            ],
            "items": { "format": "uuid", "type": "string" },
            "maxItems": 50,
            "type": "array"
          }
        },
        "required": ["delivery_mode", "name"],
        "type": "object"
      },
      "SignatureRequest": {
        "properties": {
          "id": {
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "minLength": 1,
            "type": "string"
          },
          "status": { "$ref": "#/components/schemas/SignatureRequestStatus" },
          "name": {
            "example": "signature request name",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "delivery_mode": { "enum": ["email", "none"], "type": "string" },
          "created_at": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "minLength": 1,
            "type": "string"
          },
          "ordered_signers": {
            "description": "Enable an ordered workflow, each Signer will be requested to sign in a sequential order",
            "type": "boolean"
          },
          "ordered_approvers": {
            "description": "Enable an ordered workflow, each Approver will be requested to approve in a sequential order",
            "type": "boolean"
          },
          "reminder_settings": {
            "$ref": "#/components/schemas/SignatureRequestInList_reminder_settings"
          },
          "timezone": {
            "$ref": "#/components/schemas/SignatureRequestTimeZone"
          },
          "email_custom_note": {
            "deprecated": true,
            "example": "Please sign these documents as soon as possible.",
            "maxLength": 500,
            "nullable": true,
            "type": "string"
          },
          "expiration_date": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "type": "string"
          },
          "source": {
            "enum": [
              "app",
              "public_api",
              "hubspot_integration",
              "connector_salesforce_api",
              "connector_google_api",
              "connector_zapier_api"
            ],
            "type": "string"
          },
          "signers": {
            "items": {
              "$ref": "#/components/schemas/SignatureRequestInList_signers_inner"
            },
            "type": "array"
          },
          "approvers": {
            "items": {
              "$ref": "#/components/schemas/SignatureRequestInList_approvers_inner"
            },
            "type": "array"
          },
          "labels": {
            "description": "Labels associated to the Signature Request",
            "items": { "$ref": "#/components/schemas/SignatureRequestLabel" },
            "type": "array"
          },
          "documents": {
            "items": {
              "$ref": "#/components/schemas/SignatureRequestInList_documents_inner"
            },
            "type": "array"
          },
          "sender": {
            "$ref": "#/components/schemas/SignatureRequestInList_sender"
          },
          "external_id": {
            "example": "An_external-ID",
            "nullable": true,
            "type": "string"
          },
          "branding_id": {
            "deprecated": true,
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "custom_experience_id": {
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "signers_allowed_to_decline": { "example": true, "type": "boolean" },
          "workspace_id": {
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "type": "string"
          },
          "audit_trail_locale": {
            "$ref": "#/components/schemas/AuditTrailLocale"
          },
          "email_notification": {
            "$ref": "#/components/schemas/SignatureRequest_email_notification"
          },
          "bulk_send_batch_id": {
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "decline_information": {
            "$ref": "#/components/schemas/SignatureRequest_decline_information"
          }
        },
        "required": [
          "audit_trail_locale",
          "branding_id",
          "bulk_send_batch_id",
          "created_at",
          "custom_experience_id",
          "delivery_mode",
          "documents",
          "email_custom_note",
          "email_notification",
          "expiration_date",
          "external_id",
          "id",
          "name",
          "ordered_approvers",
          "ordered_signers",
          "reminder_settings",
          "sender",
          "signers",
          "signers_allowed_to_decline",
          "source",
          "status",
          "timezone"
        ],
        "title": "SignatureRequest",
        "type": "object"
      },
      "UpdateSignatureRequest": {
        "properties": {
          "name": { "maxLength": 128, "minLength": 1, "type": "string" },
          "delivery_mode": {
            "description": "Delivery mode to notify signers.",
            "enum": ["none", "email"],
            "type": "string"
          },
          "ordered_signers": {
            "description": "Enable an ordered workflow, each signer will be requested to sign in a sequential order",
            "example": true,
            "type": "boolean"
          },
          "ordered_approvers": {
            "description": "When enabled, Approvers are requested to approve sequentially.\nEach Approver will be invited to approve only once the previous one has completed their approval.\n",
            "example": true,
            "type": "boolean"
          },
          "reminder_settings": {
            "$ref": "#/components/schemas/UpdateSignatureRequest_reminder_settings"
          },
          "timezone": {
            "$ref": "#/components/schemas/SignatureRequestTimeZone"
          },
          "email_custom_note": {
            "deprecated": true,
            "example": "Please sign these documents as soon as possible.",
            "maxLength": 500,
            "nullable": true,
            "type": "string"
          },
          "expiration_date": {
            "description": "Due date of the Signature Request (yyyy-mm-dd).\nThe date cannot be in the past and cannot be more than one year after initiation.\n",
            "format": "date",
            "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string"
          },
          "external_id": {
            "maxLength": 255,
            "nullable": true,
            "pattern": "^[\\w\\-@.%+]+$",
            "type": "string"
          },
          "branding_id": {
            "deprecated": true,
            "example": "3a93d3b5-fb3b-4abf-9e70-26315b33506b",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "custom_experience_id": {
            "description": "Use a specific Custom Experience to customize the signature experience.",
            "example": "3a93d3b5-fb3b-4abf-9e70-26315b33506b",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "signers_allowed_to_decline": {
            "default": false,
            "description": "Allowing signers to decline to sign.",
            "example": true,
            "type": "boolean"
          },
          "workspace_id": {
            "description": "Transfer the Signature Request into a given Workspace.",
            "example": "3a93d3b5-fb3b-4abf-9e70-26315b33506b",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "audit_trail_locale": {
            "allOf": [{ "$ref": "#/components/schemas/AuditTrailLocale" }],
            "description": "Define the locale for the generated audit trail.",
            "nullable": true
          },
          "email_notification": {
            "$ref": "#/components/schemas/SignatureRequest_EmailNotification"
          },
          "labels": {
            "description": "List of Labels to associate with the Signature Request. Labels are identified by their ID.",
            "example": [
              "3a93d3b5-fb3b-4abf-9e70-26315b33506b",
              "89120884-d29a-4b1a-ac7b-a9e73a872795"
            ],
            "items": { "format": "uuid", "type": "string" },
            "maxItems": 50,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ActivateSignatureRequest": {
        "properties": {
          "sender_id": {
            "description": "The Id of the User that should be considered as the Signature Request sender.\nThey must be part of the Workspace of the Signature Request and be active.\nMandatory with `sender_type: \"user\"`, must be omitted otherwise.\n",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SignatureRequestActivated": {
        "properties": {
          "id": {
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "minLength": 1,
            "type": "string"
          },
          "status": { "enum": ["ongoing", "approval"], "type": "string" },
          "name": {
            "example": "signature request name",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "delivery_mode": { "enum": ["email", "none"], "type": "string" },
          "created_at": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "minLength": 1,
            "type": "string"
          },
          "ordered_signers": {
            "description": "Enable an ordered workflow, each Signer will be requested to sign in a sequential order",
            "example": true,
            "type": "boolean"
          },
          "ordered_approvers": {
            "description": "Enable an ordered workflow, each Approver will be requested to approve in a sequential order",
            "example": true,
            "type": "boolean"
          },
          "reminder_settings": {
            "$ref": "#/components/schemas/SignatureRequestInList_reminder_settings"
          },
          "timezone": {
            "$ref": "#/components/schemas/SignatureRequestTimeZone"
          },
          "email_custom_note": {
            "deprecated": true,
            "example": "Please sign these documents as soon as possible.",
            "nullable": true,
            "type": "string"
          },
          "expiration_date": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "type": "string"
          },
          "signers": {
            "items": {
              "$ref": "#/components/schemas/EmbeddedSignerWithSignatureLink"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          },
          "approvers": {
            "items": { "$ref": "#/components/schemas/ApproverToNotify" },
            "type": "array",
            "uniqueItems": true
          },
          "labels": {
            "description": "Labels associated to the Signature Request",
            "items": { "$ref": "#/components/schemas/SignatureRequestLabel" },
            "type": "array"
          },
          "documents": {
            "items": {
              "$ref": "#/components/schemas/SignatureRequestActivated_documents_inner"
            },
            "type": "array"
          },
          "external_id": {
            "maxLength": 255,
            "nullable": true,
            "pattern": "^[\\w\\-@.%+]+$",
            "type": "string"
          },
          "branding_id": {
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "custom_experience_id": {
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "audit_trail_locale": {
            "$ref": "#/components/schemas/AuditTrailLocale"
          }
        },
        "required": [
          "audit_trail_locale",
          "branding_id",
          "created_at",
          "custom_experience_id",
          "delivery_mode",
          "documents",
          "email_custom_note",
          "expiration_date",
          "external_id",
          "id",
          "name",
          "ordered_approvers",
          "ordered_signers",
          "reminder_settings",
          "signers",
          "status",
          "timezone"
        ],
        "title": "SignatureRequestActivated",
        "type": "object"
      },
      "CreateApprover": {
        "oneOf": [
          { "$ref": "#/components/schemas/New_Approver_From_Scratch" },
          { "$ref": "#/components/schemas/New_Approver_From_Existing_User" },
          { "$ref": "#/components/schemas/New_Approver_From_Existing_Contact" },
          { "$ref": "#/components/schemas/New_Approver_From_Existing_Signer" }
        ],
        "properties": {
          "custom_text": { "$ref": "#/components/schemas/CustomText" },
          "insert_after_id": {
            "description": "ID of the Approver that this Approver follows in the approval sequence.\nThey will only be asked to approve once that previous Approver has approved.\nOnly applicable when `ordered_approvers` is enabled for the Signature Request.\n",
            "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Approver": {
        "description": "Approver",
        "properties": {
          "id": {
            "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
            "format": "uuid",
            "minLength": 1,
            "type": "string"
          },
          "status": {
            "enum": ["initiated", "notified", "approved", "rejected"],
            "type": "string"
          },
          "info": { "$ref": "#/components/schemas/Approver_info" },
          "approval_link": {
            "format": "uri",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "approval_link_expiration_date": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "custom_text": { "$ref": "#/components/schemas/CustomText" }
        },
        "required": ["custom_text", "id", "info", "status"],
        "title": "Approver",
        "type": "object"
      },
      "UpdateApprover": {
        "properties": {
          "info": { "$ref": "#/components/schemas/UpdateApprover_info" },
          "custom_text": { "$ref": "#/components/schemas/CustomText" },
          "insert_after_id": {
            "description": "ID of the Approver that this Approver follows in the approval sequence.\nThey will only be asked to approve once that previous Approver has approved.\nOnly applicable when `ordered_approvers` is enabled for the Signature Request.\n",
            "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SignerConsentRequest": {
        "description": "Signer Consent Request attached to a Signature Request",
        "properties": {
          "id": {
            "description": "Unique identifier of the Signer Consent Request",
            "example": "69df8404-40d3-4686-887b-5678f46a0d9a",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Type of the Signer Consent Request",
            "enum": ["checkbox", "text_to_copy"],
            "example": "checkbox",
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/SignerConsentRequest_settings"
          },
          "optional": {
            "description": "Define if the Signer Consent Request is optional for Signers",
            "example": false,
            "type": "boolean"
          },
          "signer_ids": {
            "description": "Ids of Signers to request a consent",
            "example": [
              "71517741-a4a8-4f25-8496-6e9c6d2b7791",
              "0c42e1ae-1cac-457b-9a09-5fda5f735bd8"
            ],
            "items": { "format": "uuid", "type": "string" },
            "minItems": 1,
            "type": "array"
          },
          "document_id": {
            "description": "The Document id to which it is linked.",
            "example": "9658867a-d2f3-46f0-9bce-36c45f42644e",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "document_id",
          "id",
          "optional",
          "settings",
          "signer_ids",
          "type"
        ],
        "type": "object"
      },
      "CreateSignerConsentRequest": {
        "properties": {
          "type": {
            "description": "Type of the Signer Consent Request",
            "enum": ["checkbox", "text_to_copy"],
            "example": "checkbox",
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/CreateSignerConsentRequest_settings"
          },
          "optional": {
            "description": "Define if the Signer Consent Request is optional for Signers",
            "example": false,
            "type": "boolean"
          },
          "signer_ids": {
            "description": "Ids of Signers to request a consent",
            "example": [
              "71517741-a4a8-4f25-8496-6e9c6d2b7791",
              "0c42e1ae-1cac-457b-9a09-5fda5f735bd8"
            ],
            "items": { "format": "uuid", "type": "string" },
            "minItems": 1,
            "type": "array"
          },
          "insert_after_id": {
            "description": "Insert just after the position of the specified Signer Consent Request id",
            "format": "uuid",
            "nullable": true,
            "type": "string",
            "example": null
          },
          "document_id": {
            "description": "Link the Signer Consent Request to a given Document by its id.",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["optional", "settings", "signer_ids", "type"],
        "title": "CreateSignerConsentRequest",
        "type": "object"
      },
      "UpdateSignerConsentRequest": {
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/CreateSignerConsentRequest_settings"
          },
          "optional": {
            "description": "Define if the Signer Consent Request is optional for Signers",
            "example": false,
            "type": "boolean"
          },
          "insert_after_id": {
            "description": "Insert just after the position of the specified Signer Consent Request id",
            "format": "uuid",
            "nullable": true,
            "type": "string",
            "example": null
          },
          "document_id": {
            "description": "Link the Signer Consent Request to a given Document by its id.",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "UpdateSignerConsentRequest",
        "type": "object"
      },
      "SignerDocumentRequest": {
        "description": "Signer Document Request attached to a Signature Request",
        "properties": {
          "id": {
            "description": "Unique identifier of the Signer Document Request",
            "example": "69df8404-40d3-4686-887b-5678f46a0d9a",
            "format": "uuid",
            "type": "string"
          },
          "title": {
            "description": "Title of the document request",
            "example": "Proof of address",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "optional": {
            "description": "Define if the document request is optional for the Signers",
            "type": "boolean"
          },
          "signer_ids": {
            "description": "Ids of Signers to request a document",
            "items": {
              "example": "2fd4a3fb-a886-4c9d-ac49-ea6f759c0c64",
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": ["id", "optional", "signer_ids", "title"],
        "type": "object"
      },
      "CreateSignerDocumentRequest": {
        "example": {
          "title": "Proof of address",
          "optional": true,
          "signer_ids": [
            "29f6049b-9c9d-4d1d-893c-be24e7d98d13",
            "7d938814-5492-4c02-806e-69c8fc1254ff"
          ]
        },
        "properties": {
          "title": { "maxLength": 255, "minLength": 1, "type": "string" },
          "optional": { "type": "boolean" },
          "signer_ids": {
            "items": { "format": "uuid", "type": "string" },
            "minItems": 1,
            "type": "array"
          }
        },
        "required": ["optional", "signer_ids", "title"],
        "title": "CreateSignerDocumentRequest",
        "type": "object"
      },
      "CreateDocumentFromJson": {
        "properties": {
          "electronic_seal_document_id": {
            "description": "Id of the Electronic Seal Document. The Electronic Seal must be done to use its Electronic Seal Document.",
            "example": "672a5a0b-ac65-407e-9da9-d34402bae974",
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "example": "file1",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "pattern": "^(?!\\s)[0-9A-Za-zĄÀÁÂÃÄÅÇĆÈÉÊËĘÌÍÎÏŁÑŃÒÓÔÕÖŚÙÚÛÜÝŹŻąàáâãäåæçćèéêëęìíîïłñńòóôõöśùúûüýÿźżß`\\'()\\- ]+(?<!\\s)$",
            "type": "string"
          },
          "nature": {
            "enum": ["attachment", "signable_document"],
            "example": "signable_document",
            "type": "string"
          },
          "insert_after_id": {
            "description": "Insert just after the position of the specified Document id.",
            "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "parse_anchors": {
            "default": false,
            "description": "If true, the system will parse the document exclusively for Signature-type Smart Anchors and automatically generate the required fields.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          }
        },
        "required": ["electronic_seal_document_id", "nature"],
        "type": "object"
      },
      "UpdateDocument": {
        "properties": {
          "nature": {
            "description": "Files in JPEG, JPG, and PNG format can only be of attachment nature.",
            "enum": ["attachment", "signable_document"],
            "type": "string"
          },
          "insert_after_id": {
            "description": "Insert just after the position of the specified document id",
            "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "password": {
            "description": "The password required to unlock the document if it is protected",
            "example": "MyPa$$word",
            "type": "string"
          },
          "name": {
            "description": "The new name to be assigned to the document. This value should contain any characters except \"\\\", \"/\" and can\\'t start and finish with a space.",
            "example": "file1",
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^(?!\\s)[^\\/\\\\]+(?<!\\s)$",
            "type": "string"
          },
          "initials": { "$ref": "#/components/schemas/InitialsArea" }
        },
        "type": "object"
      },
      "FieldSignature": {
        "properties": {
          "id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "document_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "signer_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "type": { "enum": ["signature"], "type": "string" },
          "height": {
            "format": "int32",
            "maximum": 1000,
            "minimum": 37,
            "type": "integer"
          },
          "width": {
            "format": "int32",
            "maximum": 2000,
            "minimum": 85,
            "type": "integer"
          },
          "page": { "format": "int32", "minimum": 1, "type": "integer" },
          "x": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "reason": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "maxLength": 150,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "document_id",
          "height",
          "id",
          "page",
          "reason",
          "signer_id",
          "type",
          "width",
          "x",
          "y"
        ],
        "title": "Signature",
        "type": "object"
      },
      "FieldText": {
        "properties": {
          "id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "document_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "signer_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "type": { "enum": ["text"], "type": "string" },
          "width": {
            "description": "If not set, the width is automatically calculated with the max_length value",
            "example": 90,
            "format": "int32",
            "minimum": 24,
            "type": "integer"
          },
          "height": {
            "description": "The height must be calculated using the formula: \"height = number_of_lines \\* font_size \\* line_height\", where the line height is always set to 1.5.",
            "example": 150,
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "page": { "format": "int32", "minimum": 1, "type": "integer" },
          "x": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "question": {
            "example": "What is your job title?",
            "maxLength": 255,
            "type": "string"
          },
          "instruction": {
            "example": "Your position in the company",
            "nullable": true,
            "type": "string"
          },
          "optional": { "type": "boolean" },
          "answer": {
            "example": "Software Engineer",
            "nullable": true,
            "type": "string"
          },
          "max_length": { "maximum": 32767, "minimum": 1, "type": "integer" },
          "font": { "$ref": "#/components/schemas/Font" },
          "name": {
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "default_value": {
            "maxLength": 32767,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "read_only": { "type": "boolean" }
        },
        "required": [
          "answer",
          "document_id",
          "font",
          "height",
          "id",
          "instruction",
          "max_length",
          "optional",
          "page",
          "question",
          "signer_id",
          "type",
          "width",
          "x",
          "y"
        ],
        "title": "Text",
        "type": "object"
      },
      "FieldMention": {
        "properties": {
          "id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "document_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "signer_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "type": { "enum": ["mention"], "type": "string" },
          "height": {
            "description": "The height must be calculated using the formula: \"height = number_of_lines \\* font_size \\* line_height\", where the line height is always set to 1.5.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "width": { "format": "int32", "minimum": 24, "type": "integer" },
          "page": { "format": "int32", "minimum": 1, "type": "integer" },
          "x": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "mention": { "type": "string" },
          "font": { "$ref": "#/components/schemas/Font" },
          "name": {
            "description": "Name of the Field.",
            "example": "Mention 1",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "document_id",
          "font",
          "height",
          "id",
          "mention",
          "page",
          "signer_id",
          "type",
          "width",
          "x",
          "y"
        ],
        "title": "Mention",
        "type": "object"
      },
      "FieldCheckbox": {
        "properties": {
          "id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "document_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "signer_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "type": { "enum": ["checkbox"], "type": "string" },
          "name": {
            "description": "Checkbox name",
            "example": "Checkbox name",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "checked": {
            "description": "Signer has checked the checkbox",
            "type": "boolean"
          },
          "page": { "format": "int32", "minimum": 1, "type": "integer" },
          "optional": { "type": "boolean" },
          "x": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "size": {
            "description": "The size determines both the width and height of the checkbox.",
            "format": "int32",
            "maximum": 240,
            "minimum": 8,
            "type": "integer"
          }
        },
        "required": [
          "checked",
          "document_id",
          "id",
          "name",
          "optional",
          "page",
          "signer_id",
          "type",
          "x",
          "y"
        ],
        "title": "Checkbox",
        "type": "object"
      },
      "FieldRadioButtonGroup": {
        "properties": {
          "id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "document_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "signer_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "type": { "enum": ["radio_group"], "type": "string" },
          "page": { "format": "int32", "minimum": 1, "type": "integer" },
          "optional": {
            "description": "Does the Signer has to select one of the radio buttons from this group?",
            "type": "boolean"
          },
          "name": {
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "radios": {
            "items": {
              "$ref": "#/components/schemas/FieldRadioButtonGroup_radios_inner"
            },
            "type": "array"
          }
        },
        "required": [
          "document_id",
          "id",
          "name",
          "optional",
          "page",
          "radios",
          "signer_id",
          "type"
        ],
        "title": "RadioGroup",
        "type": "object"
      },
      "FieldReadOnlyText": {
        "properties": {
          "id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "document_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "type": { "enum": ["read_only_text"], "type": "string" },
          "height": {
            "description": "The height must be calculated using the formula: \"height = number_of_lines \\* font_size \\* line_height\", where the line height is always set to 1.5.",
            "example": 150,
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "width": {
            "description": "If not set, the width is automatically calculated with the max_length value",
            "example": 90,
            "format": "int32",
            "minimum": 24,
            "type": "integer"
          },
          "page": { "format": "int32", "minimum": 1, "type": "integer" },
          "x": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "text": {
            "description": "This property holds the content displayed in the read-only text field.",
            "example": "Please, read the whole document before to sign it.",
            "maxLength": 5000,
            "type": "string"
          },
          "font": { "$ref": "#/components/schemas/Font" }
        },
        "required": [
          "document_id",
          "font",
          "height",
          "id",
          "page",
          "text",
          "type",
          "width",
          "x",
          "y"
        ],
        "title": "ReadOnlyText",
        "type": "object"
      },
      "CreateField": {
        "oneOf": [
          { "$ref": "#/components/schemas/Signature" },
          { "$ref": "#/components/schemas/Mention" },
          { "$ref": "#/components/schemas/Text" },
          { "$ref": "#/components/schemas/Checkbox" },
          { "$ref": "#/components/schemas/RadioGroup" },
          { "$ref": "#/components/schemas/ReadOnlyText" }
        ],
        "type": "object"
      },
      "UpdateField": {
        "anyOf": [
          { "$ref": "#/components/schemas/Signature_1" },
          { "$ref": "#/components/schemas/Mention_1" },
          { "$ref": "#/components/schemas/Text_1" },
          { "$ref": "#/components/schemas/Checkbox_1" },
          { "$ref": "#/components/schemas/RadioGroup_1" },
          { "$ref": "#/components/schemas/ReadOnlyText_1" }
        ],
        "type": "object"
      },
      "FieldAnswer": {
        "properties": {
          "value": { "$ref": "#/components/schemas/FieldAnswer_value" }
        },
        "required": ["value"],
        "type": "object"
      },
      "Follower": {
        "properties": {
          "email": {
            "example": "john.doe@example.com",
            "format": "email",
            "type": "string"
          },
          "locale": { "$ref": "#/components/schemas/Locale" },
          "follower_link": {
            "format": "uri",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["email", "follower_link", "locale"],
        "type": "object"
      },
      "CreateFollowers": {
        "description": "A list of Follower objects to be added to the signature request.",
        "items": { "$ref": "#/components/schemas/CreateFollowers_inner" },
        "type": "array"
      },
      "SignatureRequestLabel": {
        "properties": {
          "id": {
            "description": "Unique identifier of the Label.",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "nullable": false,
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the Label.",
            "example": "Contracts",
            "maxLength": 128,
            "minLength": 1,
            "nullable": false,
            "type": "string"
          }
        },
        "required": ["id", "name"],
        "type": "object"
      },
      "Metadata": {
        "description": "Metadata allows you to attach extra information to your Signature Requests.\nThis field must contain JSON data (key / value), with 10 nodes maximum.\nEach node key can have 30 characters maximum.\nEach node value can contain a string (limited to 255 characters), a boolean, an integer or a float.\nHTML content is not allowed.\n",
        "properties": {
          "data": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Metadata_data_value"
            },
            "type": "object"
          }
        },
        "title": "Signature Request Metadata",
        "type": "object"
      },
      "Signer": {
        "description": "Signer",
        "properties": {
          "id": { "format": "uuid", "minLength": 1, "type": "string" },
          "info": { "$ref": "#/components/schemas/Signer_info" },
          "status": {
            "enum": [
              "initiated",
              "declined",
              "notified",
              "verified",
              "processing",
              "consent_given",
              "signed",
              "aborted",
              "error"
            ],
            "minLength": 1,
            "type": "string"
          },
          "fields": {
            "items": { "$ref": "#/components/schemas/Signer_fields_inner" },
            "nullable": true,
            "type": "array"
          },
          "signature_level": {
            "default": "electronic_signature",
            "enum": [
              "electronic_signature",
              "advanced_electronic_signature",
              "qualified_electronic_signature"
            ],
            "type": "string"
          },
          "signature_authentication_mode": {
            "enum": [null, "otp_email", "otp_sms", "no_otp"],
            "nullable": true,
            "type": "string"
          },
          "signature_link": {
            "format": "uri",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "signature_link_expiration_date": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "signature_image_preview": {
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "redirect_urls": {
            "$ref": "#/components/schemas/Signer_redirect_urls"
          },
          "custom_text": { "$ref": "#/components/schemas/CustomText" },
          "delivery_mode": {
            "enum": ["email", "none"],
            "nullable": true,
            "type": "string"
          },
          "identification_attestation_id": {
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "sms_notification": {
            "$ref": "#/components/schemas/SmsNotification"
          },
          "email_notification": {
            "$ref": "#/components/schemas/EmailNotification"
          },
          "pre_identity_verification_required": { "type": "boolean" }
        },
        "required": [
          "custom_text",
          "delivery_mode",
          "email_notification",
          "fields",
          "id",
          "identification_attestation_id",
          "info",
          "pre_identity_verification_required",
          "redirect_urls",
          "signature_authentication_mode",
          "signature_image_preview",
          "signature_level",
          "signature_link",
          "signature_link_expiration_date",
          "sms_notification",
          "status"
        ],
        "title": "Signer",
        "type": "object"
      },
      "CreateSigner": {
        "oneOf": [
          { "$ref": "#/components/schemas/New_Signer_From_Scratch" },
          { "$ref": "#/components/schemas/New_Signer_From_Existing_User" },
          { "$ref": "#/components/schemas/New_Signer_From_Existing_Contact" }
        ],
        "type": "object"
      },
      "UpdateSigner": {
        "properties": {
          "info": { "$ref": "#/components/schemas/UpdateSigner_info" },
          "insert_after_id": {
            "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "signature_level": {
            "default": "electronic_signature",
            "enum": [
              "electronic_signature",
              "advanced_electronic_signature",
              "qualified_electronic_signature"
            ],
            "type": "string"
          },
          "signature_authentication_mode": {
            "enum": ["otp_email", "otp_sms", "no_otp"],
            "nullable": true,
            "type": "string"
          },
          "redirect_urls": {
            "$ref": "#/components/schemas/New_Signer_From_Scratch_redirect_urls"
          },
          "custom_text": {
            "$ref": "#/components/schemas/New_Signer_From_Scratch_custom_text"
          },
          "delivery_mode": {
            "$ref": "#/components/schemas/SignerDeliveryMode"
          },
          "identification_attestation_id": {
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "email_notification": {
            "$ref": "#/components/schemas/EmailNotification_1"
          },
          "pre_identity_verification_required": {
            "description": "Defines the way the Signer's Identity Documents will be uploaded for Verification. If set to `true`, `signature_level`should be equal to `advanced_electronic_signature` and `delivery_mode` set to `none`.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "SignerAuditTrail": {
        "example": {
          "sender": {
            "id": "3409ab3f-9295-4a69-9923-e9d32d9533d6",
            "type": "User",
            "email": "johnny.wallyday@example.com",
            "last_name": "Wallyday",
            "first_name": "Johnny",
            "ip_address": "172.18.0.1",
            "phone_number": "+447123456789"
          },
          "signer": {
            "id": "44e4b0f8-55c9-48a9-803f-d89957525270",
            "last_name": "Wallyday",
            "first_name": "Johnny",
            "ip_address": "172.18.0.1",
            "phone_number": "+447123456789",
            "email_address": "johnny.wallyday@example.com",
            "consent_given_at": "2021-07-05T12:21:42+00:00",
            "signature_process_completed_at": "2021-07-05T12:21:43+00:00"
          },
          "version": 5,
          "documents": [
            {
              "id": "a9534a42-bbc1-4355-b270-58f315eda779",
              "name": "sample.pdf",
              "mime_type": "application/pdf",
              "signatures": [
                {
                  "hash": "4396f6a9f0554928f7bcc8e645a6441cb432c1606137ac8f3a735aef83946974",
                  "reason": "Signed by Johnny Wallyday",
                  "certificate": {
                    "dn": "CN=Yousign, C=FR, O=Yousign, OU=794513986, serialNumber=2019-02-15 10:07:35:938",
                    "oid": "1.2.250.1.302.1.7.1.0",
                    "hash": "69570e2d5cc2b352b2249ba32b16195722099a89aa35de71ee1e745f771d66c5",
                    "content": "-----BEGIN CERTIFICATE-----\nMIIF8DCCA9igAwIBAgIIdfWiF8OAJo0wDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBTSUdOMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTkwMjE1MDg1NzM2WhcNMjIwMjE0\nMDkwNzAwWjBnMRAwDgYDVQQDDAdZb3VzaWduMSAwHgYDVQQFExcyMDE5LTAyLTE1\nIDEwOjA3OjM1OjkzODESMBAGA1UECwwJNzk0NTEzOTg2MRAwDgYDVQQKDAdZb3Vz\naWduMQswCQYDVQQGEwJGUjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nAIWI+w9xQ9uSt4Lb/l14Yu8yRvCWer06bzm5RFvqgZRiD2Cq2Vx8LNzi0pGCxBdI\nQ9nlWcxCAh67Lp/OygCKpUN2DnNiIiORK5b283VKASlGMy5frVOCKiq2YCz0vA6k\npIqzBP7DKV/CsZ3EqP0uw9C12EH3PrBJGQq4WOZI1Q5Fs2JAhOwfq/wq2orG424y\n0A9+smh8J3DjwSCoMQZrdHd/obK3w8AaTGI535dqWIZ0wKTZBZ7xahGAPGXo9cy9\nUXFtazxWGIcu5uYjRLtlUyialcUgB0db1eyOzFoRJCsaE6s7QgBhQUUfDkXs1UIp\nD0BfB/K2kPxGENm2Uk6WAfcCAwEAAaOCAYYwggGCMAwGA1UdEwEB/wQCMAAwHwYD\nVR0jBBgwFoAUzmRTx3jf2iI16mJGhB48l67NzPUwSwYDVR0gBEQwQjBABgoqgXoB\ngi4BBwEAMDIwMAYIKwYBBQUHAgEWJGh0dHA6Ly95b3VzaWduLmZyL2ZyL3B1Ymxp\nYy9kb2N1bWVudDAgBgNVHSUEGTAXBgorBgEEAYI3CgMMBgkqhkiG9y8BAQUwgbIG\nA1UdHwSBqjCBpzA1oDOgMYYvaHR0cDovL3RtcC55b3VzaWduLmZyL2NybC95b3Vz\naWduc2Fzc2lnbjJjYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAyLnlvdXNpZ24uZnIv\nY3JsL3lvdXNpZ25zYXNzaWduMmNhLmNybDA2oDSgMoYwaHR0cDovL3RtcDMueW91\nc2lnbi5mci9jcmwveW91c2lnbnNhc3NpZ24yY2EuY3JsMB0GA1UdDgQWBBTgXAE8\nONE89UOu8TjrtBH9cbd92jAOBgNVHQ8BAf8EBAMCBkAwDQYJKoZIhvcNAQELBQAD\nggIBAAF+VPpcphjyoU8RvQO14ojWV51wJxsx5ShsvtXPsQ7dBws8XmthuTyyYxtM\nE3dldkJsaQt8vK7/AUURwO7YX7PHVlwIqm2kpNThZ4+sEib3SOivP8vpfIP3mD0+\nIFREI/8adIWYyiYzp1xjuuAoZ6lyg2JsOQ/67nyS+y7sUQ++GfQulb5yjkMytmYs\nPJ0uyjnNAI/+hy4okIY7qgHFZaDGBSqdGU28NZcCEeBLwjcH4ET2Q1LvJ7nkKQMM\ncxw+TXdy7cgIAjdfCymjJ701s43JKI01NFrNZ0I20jTOuh2qB4Kf8fQFwmutTnRM\nP4ZglXsXZkyL9snUWwMSAP9QP13fPD6EDTTshyijvwHb6zbrFg3U7J0m/Sjmqp2A\nzD+pj777dQ2jg0zTJ3WLOosE1/tt60ygK3HhiVnnyM8sdjTrZ6ca9++TgnRthKss\nR35c/1Be3RJtYnar2yn3bA2pklLcjnV8Q3ZSks4ll7XnEI9V8EQSNHkmno7k+asl\nWeQ8eC82fkwCwzXMLBTt1kN+0qXfpvVoSITPSVlOvdCsFCRSC3JMYHUY6c9oUUlV\nCCEBWxe/Vm8R+AG4i3zk9wIoLDLW2eeOx1G61QFtIlgJPbKRLiDZhaGZq1PN8T2o\nD/1S7m9PMISw1hrWHpJM+gZpRLsfRp5EH3ieRFzt24fpIosf\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIGnDCCBISgAwIBAgIIfVpT4jgxW6cwDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBST09UMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTYwMTI3MTYyODExWhcNMjYwMTI3\nMTYyODExWjB/MSQwIgYDVQQDDBtZT1VTSUdOIFNBUyAtIFNJR04yIFRFU1QgQ0Ex\nEjAQBgNVBAsMCTc5NDUxMzk4NjEUMBIGA1UECgwLWU9VU0lHTiBTQVMxDTALBgNV\nBAcMBENBRU4xETAPBgNVBAgMCENBTFZBRE9TMQswCQYDVQQGEwJGUjCCAiIwDQYJ\nKoZIhvcNAQEBBQADggIPADCCAgoCggIBALUsirI2GYG9qu3U2S4V4JI0V9ohNP3W\nEpssSBcepPBV4UPtwAbFGvJqtGO/0nNZO0J7UwUb0sZBnedFl96tRQff3PECyO9k\n1B1/8rK1TbLPQPhTYWlrvX69wHXJFPxf/JkL4l4Lp6nFS80SYlaRj2RHHJ8HDj8S\nP1oULnhW2f2i8AlJwFe34eLJbWgeI5D7UAo59GMQ6bO4aVMaaDWvXsKOn8qmCUwF\ngtQNOqtYyLgURr4qivbjsZEv5H4Ee+wR5J+U6wd9dpIoTV2g1mExNlKVoj9qX9rh\n4al4G80fKNUT8bVnzxmdkDZzuzKm+rNIN6Fnc5CTHu2IcMHcuvKMRvsSJ+0fiz1E\nb/xsKO18Aiy5XOEQFqDrXRKC5AMmF/zB9Fh1Xe7Bi6IQo15NOjOCHLiBTARsMBJ8\nRWTuTv89qnL1lECogFusbptDG4Gu7Y7M13V8gOoGAxBs6uALjoseFZcnLQlIjZCV\nL0xyhrXFCLFnv4gy2+xY1bJNueD3cLFkzaxiCJ4WKesmRIfc6vHaQNl5NpU+9tFb\nU6o01c3fjZUdIh/MR3GFIXNpPsilhl///5aT5h2L98Gmb2q7tqSbFqm5z17MG3uS\ne4zCt+UD7MI8oCF2CELo79xMjtmqEwIf0IU8MxaLaLSZ0J164ZyHwvfIewgBp8XF\nqLn0jrZNiocXAgMBAAGjggEaMIIBFjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQY\nMBaAFGXEFaTuRlW+zr11R8A0QEYcGvuRMIGyBgNVHR8EgaowgacwNaAzoDGGL2h0\ndHA6Ly90bXAueW91c2lnbi5mci9jcmwveW91c2lnbnNhc3Jvb3QyY2EuY3JsMDag\nNKAyhjBodHRwOi8vdG1wMi55b3VzaWduLmZyL2NybC95b3VzaWduc2Fzcm9vdDJj\nYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAzLnlvdXNpZ24uZnIvY3JsL3lvdXNpZ25z\nYXNyb290MmNhLmNybDAdBgNVHQ4EFgQUzmRTx3jf2iI16mJGhB48l67NzPUwDgYD\nVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQBZ8ru8LEQ1qzQqG/Rx420f\ncN4YNM1cXV+DwpWOw46Oh9U7BG1i/wYPy6uEZvj/n+nm/MkbajrzTViZnKMRs7Wy\nCWBqvAfl4gcbWvrRzdVwsbd3UbsxD5UD1CkJYl5/4gPvCae6YVCF9WtnH2lSy/Gv\n5bbIfyXF++iNQn+lLe59EhA3WinTql/yk/SPUNVn4/IZ0UWrw1IPS3kmnIal1mk7\npL45n5G51qAHpSbAoTsCeRBJZ6jr38n+FimZahnBZTu4+XycDVicrydpsopQiTt8\nry+mP1b9Nd4eoHR4/F/82w1rNfAM0NJKL8w3qr8lMdxsbANMvW0ixgjRnBpuRRB4\n5iUA5Mb2DbiYJARBoruYqYGya317Gcvtk4w0O48CXR+HPXygHh/63De1JdOUjSc2\nHagr6jp7NKbn/XmWBjWuoG9J9d9sC5U/mgjw5Xjf9jKGuUGz46EtlzzpojVB7fJA\nE2Ye0kOuLANpoTFAI4EJe5nTJz0HsFG3nDshsD9Mb1/kUBSGUDWijL5f0LDqf562\nkTioMpkK7ivZxQksF8+bMId5sUNrDVA/6lhn8tD5gzGacSU7IMfIH3EUKcI1NoWm\nhV+aI8EbXP6251cF74y/tejTUQLdOQ9ut3PsxYmTTDqr8RPI6UZeh2yibzSmgGwU\nfylsTiF/gVGm5cpWCrULCw==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIGnDCCBISgAwIBAgIIT0TY3eM9ut0wDQYJKoZIhvcNAQELBQAwfzEkMCIGA1UE\nAwwbWU9VU0lHTiBTQVMgLSBST09UMiBURVNUIENBMRIwEAYDVQQLDAk3OTQ1MTM5\nODYxFDASBgNVBAoMC1lPVVNJR04gU0FTMQ0wCwYDVQQHDARDQUVOMREwDwYDVQQI\nDAhDQUxWQURPUzELMAkGA1UEBhMCRlIwHhcNMTYwMTI3MTYyNjE2WhcNMzYwMTI3\nMTYyNjE2WjB/MSQwIgYDVQQDDBtZT1VTSUdOIFNBUyAtIFJPT1QyIFRFU1QgQ0Ex\nEjAQBgNVBAsMCTc5NDUxMzk4NjEUMBIGA1UECgwLWU9VU0lHTiBTQVMxDTALBgNV\nBAcMBENBRU4xETAPBgNVBAgMCENBTFZBRE9TMQswCQYDVQQGEwJGUjCCAiIwDQYJ\nKoZIhvcNAQEBBQADggIPADCCAgoCggIBALXMHUFwSacaI5TjtMRw4kJ9o1ve/IZo\noj+2HOpW3iqs74cmsYjpHbJD0UAdh3SpdlLFK1/WBf0uEbzn6z7gRfUkEAo5EnHs\nM1iTfCXWDtA+xd9X4h2UAVEdXRzglvOvT275fjI1uj9Zi4Rz95drhlGkZVCDIMuv\n7fazkT868grWSfGSUc2C8d9+kOL4pCKuSanOc/nwD61F+oQ6KeEMtmpbr57Yy+qY\ntaF6ieKiDGn0aDj3yImnA9YqfFlX4mCyn+LmiqrXyEn0Z5iYLbO0wXkyPqhcO9c9\ngS1Y8Y/1AEvxnaLlV3eG402ZYUS6tT27o+tpdCAIx+3zMhNsPI9wXUjlVr/8ts+/\nuOUUCUWoBK3J6R1zG3urCdnuor8xAaWK/OHtvg8rXoXEfi8ujWV3EbiwIwiUHVh4\nrJIE1vhsVPW/sTM9yEjRFks0swyoX6QupEuaZLV4DbmcEbmZ2XIH5Cw2c1qwUTk2\n8vQzKHszLdRb9scnjd3yHsef5ZAHS9hUoFIfG+MzINGm3U6v4exspSw/EshSavVj\nR+gL0l+sdK4L6xe++K++Gpp5xn5cZUJeg4YtdgGju7lMdGpJVVwl0Y8UAEJt9xgC\nMvGctrkoaUuBjOhrGQQITDMsNrtgi28s7rUB6k+yxcaGBBp2PyAIsIe0e1wKGm1N\nHjGtqY0IV1tFAgMBAAGjggEaMIIBFjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQY\nMBaAFGXEFaTuRlW+zr11R8A0QEYcGvuRMIGyBgNVHR8EgaowgacwNaAzoDGGL2h0\ndHA6Ly90bXAueW91c2lnbi5mci9jcmwveW91c2lnbnNhc3Jvb3QyY2EuY3JsMDag\nNKAyhjBodHRwOi8vdG1wMi55b3VzaWduLmZyL2NybC95b3VzaWduc2Fzcm9vdDJj\nYS5jcmwwNqA0oDKGMGh0dHA6Ly90bXAzLnlvdXNpZ24uZnIvY3JsL3lvdXNpZ25z\nYXNyb290MmNhLmNybDAdBgNVHQ4EFgQUZcQVpO5GVb7OvXVHwDRARhwa+5EwDgYD\nVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQCuxOXQDSYF0RpYQWonRDlU\nZ64IaGJ5buU4tGzf7rAgIQdXbO/VjjfF9UsjnLopNwWkuSJvINm21obYHcoSwvpz\nlwS/3uJCLxaw5q4SVJ4x5rajh/2qtFzcThSh48rcXcqoxAmc6BzQuIOm9cFUD2Ri\nqUJmg5O+CoLuE1b4i+CsCFL3AoWnBHFZ4YtInQBFIRBhMNPICvYOCF6jjgmMxkWU\nM8SEp7FSFfsy/oPI1dt+k9JjHCXhtWO9ndLvvwvLcjqRO3ItiF9IazsNcNLhaIMA\nlvYiQ+jLpckAuTxj7XHQyJSEofTMPr+ZSgQwUc337MJyxPhTDkch5cQBfnC20Usk\nyjdwwaeiwnNMhESwgDa4Oqw5IOmq+VmqtR+9F9yxACrpyph593F1zYwv7ikik5dI\nIYACb2fKLQrcnCfhm0k1Nt9UXoc9mQzFUK0DWJNLeGJo0rfRQh5ZqhcBG2U0KZFQ\nRtQQEf3zXJxQJGlCn1UMZMJswAzfhMTdGPNzyDI2u+9Q8WT7M2f59Idiae2m79uG\nuStRwN7Vnrpa399YXixOpNTz6d0NFBOAq1Nfwy5cnQDCnT9JkrKidrFKyA21b67m\nSfJIpMSPfFbt3g0h7JPWK7OC4Ydydh92e7/IUhtkudKMoazlwSJ7484dE7NyTpol\n62H0sW/1gmFzE6/QmCUR+w==\n-----END CERTIFICATE-----",
                    "generated_at": "2019-02-15T09:07:36+00:00"
                  }
                }
              ],
              "initial_hash": "8decc8571946d4cd70a024949e033a2a2a54377fe9f1c1b944c20f9ee11a9e51",
              "initial_storage_id": "fdad7bcf-73d5-4a73-945d-ba7b738c530b"
            }
          ],
          "organization": {
            "id": "d89a0f7b-bd3f-494d-ab61-71b69f24a3d9",
            "name": "Universalt Music"
          },
          "authentication": {
            "mode": "sms",
            "message": "eSIGNATURE: 791994 is your security code to confirm the signature of your documents.",
            "validated_at": "2021-07-05T12:21:40+00:00"
          },
          "signature_request": {
            "id": "4d164217-60e7-4733-b56c-65ad637eadce",
            "name": "My new request",
            "sent_at": "2021-07-05T12:21:21+00:00",
            "expired_at": "2022-01-05T22:59:00+00:00"
          },
          "electronic_signature_level": {
            "level": "Simple electronic signature"
          }
        },
        "properties": {
          "version": { "type": "number" },
          "signature_request": { "type": "object" },
          "sender": { "type": "object" },
          "signer": { "type": "object" },
          "documents": {
            "items": { "type": "object" },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          },
          "organization": { "type": "object" },
          "authentication": { "type": "object" },
          "electronic_signature_level": { "type": "object" }
        },
        "required": [
          "authentication",
          "documents",
          "organization",
          "sender",
          "signature_request",
          "signer",
          "version"
        ],
        "type": "object"
      },
      "SignerDocument": {
        "description": "Signer Document",
        "properties": {
          "id": {
            "description": "Unique identifier of the signer document",
            "example": "69df8404-40d3-4686-887b-5678f46a0d9a",
            "format": "uuid",
            "type": "string"
          },
          "title": {
            "description": "Title of the document request",
            "example": "Proof of address",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "filename": {
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["filename", "id", "title"],
        "type": "object"
      },
      "SignerIdentityVerification": {
        "additionalProperties": false,
        "properties": {
          "type": {
            "description": "Type of document you are looking to verify. Only passports, id and resident permits are accepted.",
            "enum": ["id_card", "passport", "residence_permit"],
            "example": "id_card",
            "type": "string"
          },
          "recto": {
            "description": "Front of the identity document file to verify.\nAccepted formats: PNG, JPEG, JPG, PDF.\nMax size: 10 MB. Max resolution: 20 mpx.\n",
            "format": "binary",
            "type": "string"
          },
          "verso": {
            "description": "Back of the identity document file to verify.\nAccepted formats: PNG, JPEG, JPG, PDF.\nMax size: 10 MB. Max resolution: 20 mpx.\n",
            "format": "binary",
            "type": "string"
          }
        },
        "required": ["recto", "type"],
        "type": "object"
      },
      "SignerSign": {
        "properties": {
          "otp": {
            "example": "231457",
            "nullable": true,
            "pattern": "^[0-9]{6}$",
            "title": "One-Time Password (OTP) sent to the Signer",
            "type": "string"
          },
          "ip_address": { "$ref": "#/components/schemas/Signer_s_IP_address" },
          "consent_given_at": {
            "example": "2024-01-18T22:00:00Z",
            "format": "date-time",
            "title": "Signer's consent date",
            "type": "string"
          }
        },
        "required": ["consent_given_at", "ip_address"],
        "type": "object"
      },
      "SignerSignWithUploadedSignatureImage": {
        "properties": {
          "otp": {
            "example": "231457",
            "pattern": "^[0-9]{6}$",
            "title": "One-Time Password (OTP) sent to the Signer",
            "type": "string"
          },
          "ip_address": { "$ref": "#/components/schemas/Signer_s_IP_address" },
          "consent_given_at": {
            "example": "2024-01-18T22:00:00Z",
            "format": "date-time",
            "title": "Signer's consent date",
            "type": "string"
          },
          "signature_image": {
            "format": "binary",
            "title": "Image to use as signature",
            "type": "string"
          }
        },
        "required": ["consent_given_at", "ip_address", "signature_image"],
        "type": "object"
      },
      "Template": {
        "properties": {
          "id": {
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "name": { "readOnly": true, "type": "string" },
          "description": {
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "enum": ["draft", "active"],
            "readOnly": true,
            "type": "string"
          },
          "created_at": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "workspace_id": {
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["created_at", "description", "id", "name", "status"],
        "title": "Template",
        "type": "object"
      },
      "User": {
        "properties": {
          "id": {
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "type": "string"
          },
          "first_name": {
            "example": "John",
            "nullable": true,
            "type": "string"
          },
          "last_name": { "example": "Doe", "nullable": true, "type": "string" },
          "email": {
            "example": "email@example.com",
            "format": "email",
            "type": "string"
          },
          "phone_number": {
            "description": "E.164 format",
            "example": "+447123456789",
            "nullable": true,
            "type": "string"
          },
          "locale": { "example": "en", "type": "string" },
          "avatar": {
            "example": "https://example.com/users/123456/avatar",
            "nullable": true,
            "type": "string"
          },
          "job_title": {
            "example": "Worker",
            "nullable": true,
            "type": "string"
          },
          "is_active": { "type": "boolean" },
          "created_at": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "role": { "$ref": "#/components/schemas/UserRole" },
          "workspaces": {
            "items": { "$ref": "#/components/schemas/User_workspaces_inner" },
            "type": "array"
          },
          "status": { "$ref": "#/components/schemas/UserStatus" },
          "source": {
            "description": "The application used to create the `User`",
            "enum": ["app", "public_api"],
            "example": "public_api",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "avatar",
          "created_at",
          "email",
          "first_name",
          "id",
          "is_active",
          "job_title",
          "last_name",
          "locale",
          "phone_number",
          "role",
          "source",
          "status",
          "workspaces"
        ],
        "title": "User",
        "type": "object"
      },
      "CreateUser": {
        "properties": {
          "email": {
            "description": "The email address must not match any existing User's email.\n",
            "example": "john.doe@example.com",
            "format": "email",
            "title": "User's email address",
            "type": "string"
          },
          "role": {
            "description": "Role assigned to the User in the Organization.\n",
            "enum": ["admin", "member"],
            "title": "User's role",
            "type": "string"
          },
          "locale": { "$ref": "#/components/schemas/Locale" },
          "workspaces": {
            "description": "The new User must be associated with at least one Workspace in the Organization.\n",
            "items": { "$ref": "#/components/schemas/UUID" },
            "minItems": 1,
            "title": "User's Workspace",
            "type": "array",
            "uniqueItems": true
          },
          "first_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "description": "User's first name",
            "example": "John",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "title": "First name",
            "type": "string"
          },
          "last_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "description": "User's last name",
            "example": "Doe",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "title": "Last name",
            "type": "string"
          },
          "phone_number": {
            "description": "E.164 format",
            "example": "+41446667700",
            "minLength": 1,
            "nullable": true,
            "title": "User's phone number",
            "type": "string"
          },
          "job_title": {
            "description": "This property cannot start or end with whitespace, does not allow HTML tags, URL or email.\n",
            "example": "Employee",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "title": "User's job title",
            "type": "string"
          }
        },
        "required": ["email", "locale", "role", "workspaces"],
        "title": "A User object",
        "type": "object"
      },
      "UserInvitation": {
        "properties": {
          "id": {
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "example": "email@example.com",
            "format": "email",
            "readOnly": true,
            "type": "string"
          },
          "role": { "$ref": "#/components/schemas/ManageableRole" },
          "workspaces": {
            "items": { "$ref": "#/components/schemas/User_workspaces_inner" },
            "readOnly": true,
            "type": "array"
          },
          "expired_at": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "created_at": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "email",
          "expired_at",
          "id",
          "role",
          "workspaces"
        ],
        "title": "Invitation",
        "type": "object"
      },
      "UpdateUser": {
        "properties": {
          "role": {
            "description": "New role assigned to the User. It can be `member` or `admin`.",
            "enum": ["admin", "member"],
            "type": "string"
          },
          "active": {
            "description": "If `true`, the User will be activated; if `false`, the User will be suspended.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "BankAccountConnectionMeta": {
        "properties": {
          "id": { "$ref": "#/components/schemas/UUID" },
          "workspace_id": {
            "description": "The Workspace ID in which the verification has been created.",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "type": "string"
          },
          "created_at": {
            "description": "Creation date of the Bank Account Connection Verification.",
            "example": "2025-02-12T23:59:59Z",
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "description": "Update date of the Bank Account Connection Verification.",
            "example": "2025-02-12T23:59:59Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/BankAccountConnectionStatus"
          },
          "status_codes": {
            "description": "List of status codes. Indicates the cause when the status is pending, verified, failed or inconclusive.",
            "example": ["BACV_1100"],
            "items": { "type": "string" },
            "type": "array"
          },
          "data_anonymized": {
            "description": "Indicates if the personal data extracted from the Bank Account Connection has been anonymized.\nIf set to `true`, the personal data has been anonymized and most fields will be NULL.\n",
            "type": "boolean"
          }
        },
        "required": [
          "created_at",
          "data_anonymized",
          "id",
          "status",
          "updated_at",
          "workspace_id"
        ],
        "title": "BankAccountConnectionMeta",
        "type": "object"
      },
      "InitiateBankAccountConnection": {
        "additionalProperties": false,
        "properties": {
          "redirection_url": {
            "description": "The URL to redirect the person back to your application or website after the Bank Account Connection flow is completed.",
            "example": "https://www.redirectionurl.com",
            "format": "uri",
            "maxLength": 2000,
            "minLength": 1,
            "title": "Redirection URL",
            "type": "string"
          },
          "workspace_id": {
            "description": "Scopes the verification to a specific workspace.\nDefaults to the default workspace if not specified.\n",
            "example": "07398450-a634-4209-9253-c367d8d9914f",
            "format": "uuid",
            "nullable": true,
            "title": "Workspace ID",
            "type": "string"
          },
          "country_code": {
            "default": "FR",
            "description": "The country for the Bank Account Connection flow.\nOnly banks from that country will be offered in the flow\n",
            "enum": [
              "AT",
              "BE",
              "CZ",
              "DE",
              "DK",
              "EE",
              "ES",
              "FI",
              "FR",
              "GB",
              "IE",
              "IT",
              "LT",
              "LV",
              "NL",
              "NO",
              "PL",
              "PT",
              "SE"
            ],
            "example": "GB",
            "nullable": true,
            "title": "Country Code",
            "type": "string"
          },
          "locale": {
            "default": "fr",
            "description": "The locale for the Bank Account Connection flow.",
            "enum": [
              "cs",
              "da",
              "de",
              "en",
              "es",
              "et",
              "fi",
              "fr",
              "it",
              "lt",
              "lv",
              "no",
              "nl",
              "pl",
              "pt",
              "sv"
            ],
            "example": "en",
            "nullable": true,
            "title": "Locale",
            "type": "string"
          }
        },
        "required": ["redirection_url"],
        "title": "A Bank Account Connection object",
        "type": "object"
      },
      "InitiateBankAccountConnectionWithLegalPerson": {
        "additionalProperties": false,
        "properties": {
          "redirection_url": {
            "description": "The URL to redirect the person back to your application or website after the Bank Account Connection flow is completed.",
            "example": "https://www.redirectionurl.com",
            "format": "uri",
            "maxLength": 2000,
            "minLength": 1,
            "title": "Redirection URL",
            "type": "string"
          },
          "workspace_id": {
            "description": "Scopes the verification to a specific workspace.\nDefaults to the default workspace if not specified.\n",
            "example": "07398450-a634-4209-9253-c367d8d9914f",
            "format": "uuid",
            "nullable": true,
            "title": "Workspace ID",
            "type": "string"
          },
          "country_code": {
            "default": "FR",
            "description": "The country for the Bank Account Connection flow.\nOnly banks from that country will be offered in the flow\n",
            "enum": [
              "AT",
              "BE",
              "DE",
              "ES",
              "FR",
              "GB",
              "IE",
              "IT",
              "NL",
              "PL",
              "PT",
              "SE"
            ],
            "example": "GB",
            "nullable": true,
            "title": "Country code",
            "type": "string"
          },
          "locale": {
            "default": "fr",
            "description": "The locale for the Bank Account Connection flow.",
            "enum": [
              "cs",
              "da",
              "de",
              "en",
              "es",
              "et",
              "fi",
              "fr",
              "it",
              "lt",
              "lv",
              "no",
              "nl",
              "pl",
              "pt",
              "sv"
            ],
            "example": "en",
            "nullable": true,
            "title": "Locale",
            "type": "string"
          },
          "is_legal_person": {
            "description": "Must be set to TRUE to indicate this is a legal person verification",
            "type": "boolean"
          }
        },
        "required": ["is_legal_person", "redirection_url"],
        "title": "A Bank Account Connection with Legal Person object",
        "type": "object"
      },
      "BankAccountConnectionFull": {
        "allOf": [
          { "$ref": "#/components/schemas/BankAccountConnectionMeta" },
          {
            "properties": {
              "data": {
                "$ref": "#/components/schemas/BankAccountConnectionFull_allOf_data"
              }
            },
            "required": ["data"],
            "type": "object"
          }
        ],
        "title": "BankAccountConnectionFull",
        "type": "object"
      },
      "BankAccountLookupMeta": {
        "properties": {
          "id": { "$ref": "#/components/schemas/UUID" },
          "workspace_id": {
            "description": "The Workspace ID in which the verification has been created.",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "type": "string"
          },
          "created_at": {
            "description": "Creation date of the Bank Account Lookup Verification.",
            "example": "2025-07-23T18:22:00Z",
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "description": "Update date of the Bank Account Lookup Verification.",
            "example": "2025-07-23T18:22:00Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Status of the Bank Account Lookup Verification.",
            "enum": ["pending", "verified", "failed", "inconclusive"],
            "example": "verified",
            "type": "string"
          },
          "status_codes": {
            "description": "List of status codes. Indicates the cause when the status is `failed` or `inconclusive`.",
            "example": ["BALV_1101"],
            "items": { "type": "string" },
            "type": "array"
          }
        },
        "required": [
          "created_at",
          "id",
          "status",
          "status_codes",
          "updated_at",
          "workspace_id"
        ],
        "title": "BankAccountLookupMeta",
        "type": "object"
      },
      "InitiateBankAccountLookupWithNaturalPerson": {
        "additionalProperties": false,
        "properties": {
          "iban": {
            "description": "The International Bank Account Number (IBAN) to verify.\nThe IBAN must be a valid IBAN starting with \"FR\".\nThe IBAN must belong to a bank that is a member of the SEPAmail DIAMOND network.\n",
            "example": "FR7630006000011234567890189",
            "type": "string"
          },
          "natural_person": {
            "$ref": "#/components/schemas/InitiateBankAccountLookupWithNaturalPerson_natural_person"
          },
          "workspace_id": {
            "description": "Scopes the verification to a specific workspace.\nDefaults to the default workspace if not specified.\n",
            "example": "9412b83b-b4b9-4a94-97b5-2b43dfa4cde3",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["iban"],
        "title": "Initiate a new Bank Account Lookup Verification with natural person",
        "type": "object"
      },
      "InitiateBankAccountLookupWithLegalPerson": {
        "additionalProperties": false,
        "properties": {
          "iban": {
            "description": "The International Bank Account Number (IBAN) to verify.\nThe IBAN must be a valid IBAN starting with \"FR\".\nThe IBAN must belong to a bank that is a member of the SEPAmail DIAMOND network.\n",
            "example": "FR7630006000011234567890189",
            "type": "string"
          },
          "legal_person": {
            "$ref": "#/components/schemas/InitiateBankAccountLookupWithLegalPerson_legal_person"
          },
          "workspace_id": {
            "description": "Scopes the verification to a specific workspace.\nDefaults to the default workspace if not specified.\n",
            "example": "9412b83b-b4b9-4a94-97b5-2b43dfa4cde3",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["iban"],
        "title": "Initiate a new Bank Account Lookup Verification with legal person",
        "type": "object"
      },
      "BankAccountMeta": {
        "properties": {
          "id": { "$ref": "#/components/schemas/UUID" },
          "workspace_id": {
            "description": "The Workspace ID in which the verification has been created.",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "type": "string"
          },
          "created_at": {
            "description": "Creation date of the Bank Account Verification.",
            "example": "2025-02-12T23:59:59Z",
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "description": "Update date of the Bank Account Verification.",
            "example": "2025-02-12T23:59:59Z",
            "format": "date-time",
            "type": "string"
          },
          "status": { "$ref": "#/components/schemas/BankAccountStatus" },
          "status_codes": {
            "description": "List of status codes. Indicates the cause when the status is `failed` or `inconclusive`.",
            "example": ["BAV_1604", "BAV_1611"],
            "items": { "type": "string" },
            "type": "array"
          },
          "data_anonymized": {
            "description": "Indicates if the personal data extracted from the document has been anonymized.\nIf set to `true`, the personal data has been anonymized and most fields will be NULL.\n",
            "type": "boolean"
          }
        },
        "required": [
          "created_at",
          "data_anonymized",
          "id",
          "status",
          "status_codes",
          "updated_at"
        ],
        "title": "BankAccountMeta",
        "type": "object"
      },
      "InitiateBankAccount": {
        "additionalProperties": false,
        "properties": {
          "file": {
            "description": "The file containing the bank account details.\nAccepted formats: PNG, JPEG, JPG, PDF.\nMax size: 10 MB. Max resolution: 20 mpx.\n",
            "format": "binary",
            "type": "string"
          },
          "iban": { "$ref": "#/components/schemas/IBAN" },
          "bic": { "$ref": "#/components/schemas/BIC" },
          "workspace_id": {
            "description": "Scopes the verification to a specific workspace.\nDefaults to the default workspace if not specified.\n",
            "example": "9412b83b-b4b9-4a94-97b5-2b43dfa4cde3",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["file"],
        "title": "Initiate Bank Account Verification",
        "type": "object"
      },
      "InitiateBankAccountWithLegalPerson": {
        "additionalProperties": false,
        "properties": {
          "file": {
            "description": "The file containing the bank account details.\nAccepted formats: PNG, JPEG, JPG, PDF.\nMax size: 10 MB. Max resolution: 20 mpx.\n",
            "format": "binary",
            "type": "string"
          },
          "iban": { "$ref": "#/components/schemas/IBAN" },
          "bic": { "$ref": "#/components/schemas/BIC" },
          "legal_person": {
            "$ref": "#/components/schemas/InitiateBankAccountWithLegalPerson_legal_person"
          },
          "workspace_id": {
            "description": "Scopes the verification to a specific workspace.\nDefaults to the default workspace if not specified.\n",
            "example": "9412b83b-b4b9-4a94-97b5-2b43dfa4cde3",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["file", "legal_person"],
        "title": "Initiate Bank Account Verification with legal person",
        "type": "object"
      },
      "InitiateBankAccountWithNaturalPerson": {
        "additionalProperties": false,
        "properties": {
          "file": {
            "description": "The file containing the bank account details.\nAccepted formats: PNG, JPEG, JPG, PDF.\nMax size: 10 MB. Max resolution: 20 mpx.\n",
            "format": "binary",
            "type": "string"
          },
          "iban": { "$ref": "#/components/schemas/IBAN" },
          "bic": { "$ref": "#/components/schemas/BIC" },
          "natural_person": {
            "$ref": "#/components/schemas/InitiateBankAccountWithNaturalPerson_natural_person"
          },
          "workspace_id": {
            "description": "Scopes the verification to a specific workspace.\nDefaults to the default workspace if not specified.\n",
            "example": "9412b83b-b4b9-4a94-97b5-2b43dfa4cde3",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["file", "natural_person"],
        "title": "Initiate Bank Account Verification with natural person",
        "type": "object"
      },
      "BankAccountFull": {
        "allOf": [
          { "$ref": "#/components/schemas/BankAccountMeta" },
          {
            "properties": {
              "data": {
                "$ref": "#/components/schemas/BankAccountFull_allOf_data"
              }
            },
            "required": ["data"],
            "type": "object"
          }
        ],
        "title": "BankAccountFull",
        "type": "object"
      },
      "CompanyMeta": {
        "properties": {
          "id": { "$ref": "#/components/schemas/UUID" },
          "workspace_id": {
            "description": "The Workspace ID in which the verification has been created.",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "type": "string"
          },
          "created_at": {
            "description": "Creation date of the Company Verification.",
            "example": "2023-01-01T12:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "description": "Update date of the Company Verification.",
            "example": "2023-01-01T12:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Status of the Company Verification.",
            "enum": ["pending", "verified", "failed", "inconclusive"],
            "example": "verified",
            "type": "string"
          },
          "data_anonymized": {
            "description": "Indicates if the company data has been anonymized.\nIf set to `true`, all fields in the `data` field are set to NULL.\n",
            "example": false,
            "nullable": false,
            "type": "boolean"
          }
        },
        "required": [
          "created_at",
          "id",
          "status",
          "updated_at",
          "workspace_id"
        ],
        "title": "CompanyMeta",
        "type": "object"
      },
      "InitiateCompanyFromJson": {
        "properties": {
          "company_number": {
            "description": "Please provide the exact company number depending on the country format.\nFor any doubt, consult the Company Verification guide.\n",
            "example": "794513986",
            "minLength": 1,
            "type": "string"
          },
          "country_code": {
            "description": "Defines the country where the company is registered.",
            "enum": ["FR", "GB", "BE", "CH", "NL"],
            "example": "FR",
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "workspace_id": {
            "description": "Scopes the verification to a specific workspace.\nDefaults to the default workspace if not specified.\n",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["company_number", "country_code"],
        "title": "Initiate Company Verification from company number",
        "type": "object"
      },
      "InitiateCompanyFromFile": {
        "properties": {
          "file": {
            "description": "The file containing the company details mostly known as Kbis.\nAccepted formats: PDF.\nMax size: 10 MB.\n",
            "example": "Binary file",
            "format": "binary",
            "type": "string"
          },
          "country_code": {
            "enum": ["FR"],
            "example": "FR",
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "workspace_id": {
            "description": "Scopes the verification to a specific workspace.\nDefaults to the default workspace if not specified.\n",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["country_code", "file"],
        "title": "Initiate Company Verification from Kbis",
        "type": "object"
      },
      "CompanyFull": {
        "allOf": [
          { "$ref": "#/components/schemas/CompanyMeta" },
          {
            "properties": {
              "data": { "$ref": "#/components/schemas/CompanyFull_allOf_data" }
            },
            "required": ["data"],
            "type": "object"
          }
        ],
        "title": "CompanyFull",
        "type": "object"
      },
      "IdentityDocumentMeta": {
        "properties": {
          "id": { "$ref": "#/components/schemas/UUID" },
          "workspace_id": {
            "description": "The Workspace ID in which the verification has been created.",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "type": "string"
          },
          "created_at": {
            "description": "Creation date of the Identity Document Verification.",
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "description": "Update date of the Identity Document Verification.",
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "type": "string"
          },
          "status": { "$ref": "#/components/schemas/IdentityDocumentStatus" },
          "status_codes": {
            "description": "List of status codes. Indicates the cause when the status is `failed` or `inconclusive`.",
            "example": ["IDDV_1706", "IDDV_1707"],
            "items": { "type": "string" },
            "type": "array"
          },
          "data_anonymized": {
            "description": "Indicates if the personal data extracted from the document has been anonymized.\nIf set to `true`, the personal data has been anonymized and most fields will be NULL.\n",
            "example": false,
            "type": "boolean"
          }
        },
        "required": [
          "created_at",
          "data_anonymized",
          "id",
          "status",
          "status_codes",
          "updated_at",
          "workspace_id"
        ],
        "title": "IdentityDocumentMeta",
        "type": "object"
      },
      "InitiateIdentityDocument": {
        "additionalProperties": false,
        "properties": {
          "first_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "description": "Please provide the holder first name, exactly as it appears on the ID document.\nPlease match it exactly, with the same characters, same case.\nOne exception: if the document mentions an honorary title, please don't provide it as part of the name.\n",
            "example": "John",
            "maxLength": 255,
            "minLength": 1,
            "nullable": false,
            "type": "string"
          },
          "last_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "description": "Please provide the holder last name, exactly as it appears on the ID document birth name.\nPlease match it exactly, with the same characters, same case.\nOne exception: if the document mentions an honorary title, please don't provide it as part of the name.\n",
            "example": "Doe",
            "maxLength": 255,
            "minLength": 1,
            "nullable": false,
            "type": "string"
          },
          "type": {
            "description": "The document type to verify",
            "enum": [
              "id_card",
              "passport",
              "residence_permit",
              "driver_license",
              "ita_ts_cns"
            ],
            "example": "id_card",
            "type": "string"
          },
          "file": {
            "description": "The identity document file to verify.\nAccepted formats: PNG, JPEG, JPG, PDF.\nMax size: 10 MB. Max resolution: 20 mpx.\n",
            "format": "binary",
            "type": "string"
          },
          "additional_file": {
            "description": "Additional document file, such as the back side of an identity card.\nAccepted formats: PNG, JPEG, JPG, PDF.\nMax size: 10 MB. Max resolution: 20 mpx.\n",
            "format": "binary",
            "type": "string"
          },
          "workspace_id": {
            "description": "Scopes the verification to a specific workspace.\nDefaults to the default workspace if not specified.\n",
            "example": "9412b83b-b4b9-4a94-97b5-2b43dfa4cde3",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["file", "first_name", "last_name"],
        "title": "Initiate an Identity Document Verification with names",
        "type": "object"
      },
      "InitiateIdentityDocumentWithoutName": {
        "additionalProperties": false,
        "properties": {
          "type": {
            "description": "The document type to verify",
            "enum": [
              "id_card",
              "passport",
              "residence_permit",
              "driver_license",
              "ita_ts_cns"
            ],
            "example": "id_card",
            "type": "string"
          },
          "file": {
            "description": "The identity document file to verify.\nAccepted formats: PNG, JPEG, JPG, PDF.\nMax size: 10 MB. Max resolution: 20 mpx.\n",
            "format": "binary",
            "type": "string"
          },
          "additional_file": {
            "description": "Additional document file, such as the back side of an identity card.\nAccepted formats: PNG, JPEG, JPG, PDF.\nMax size: 10 MB. Max resolution: 20 mpx.\n",
            "format": "binary",
            "type": "string"
          },
          "workspace_id": {
            "description": "Scopes the verification to a specific workspace.\nDefaults to the default workspace if not specified.\n",
            "example": "9412b83b-b4b9-4a94-97b5-2b43dfa4cde3",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["file"],
        "title": "Initiate an Identity Document Verification without names",
        "type": "object"
      },
      "IdentityDocumentFull": {
        "allOf": [
          { "$ref": "#/components/schemas/IdentityDocumentMeta" },
          {
            "properties": {
              "data": {
                "$ref": "#/components/schemas/IdentityDocumentFull_allOf_data"
              }
            },
            "required": ["data"],
            "type": "object"
          }
        ],
        "title": "IdentityDocumentFull",
        "type": "object"
      },
      "IdentityVideoMeta": {
        "properties": {
          "id": { "$ref": "#/components/schemas/UUID" },
          "workspace_id": {
            "description": "The Workspace ID in which the verification has been created.",
            "example": "9412b83b-b4b9-4a94-97b5-2b43dfa4cde3",
            "format": "uuid",
            "type": "string"
          },
          "created_at": {
            "description": "Creation date of the Identity Video Verification.",
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "description": "Update date of the Identity Video Verification.",
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "type": "string"
          },
          "status": { "$ref": "#/components/schemas/IdentityVideoStatus" },
          "status_codes": {
            "description": "List of status codes. Indicates the cause when the status is `failed` or `inconclusive`.",
            "example": ["IDVV_1112"],
            "items": { "type": "string" },
            "type": "array"
          },
          "data_anonymized": {
            "description": "Indicates if the personal data extracted has been anonymized.\nIf set to `true`, the personal data has been anonymized and most fields will be NULL.\n",
            "example": false,
            "type": "boolean"
          },
          "face_recognition": {
            "description": "Indicates if face recognition was enabled during the verification process.",
            "example": false,
            "type": "boolean"
          }
        },
        "required": [
          "created_at",
          "data_anonymized",
          "face_recognition",
          "id",
          "status",
          "status_codes",
          "updated_at",
          "workspace_id"
        ],
        "title": "IdentityVideoMeta",
        "type": "object"
      },
      "InitiateIdentityVideo": {
        "additionalProperties": false,
        "properties": {
          "first_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "description": "The first name provided must match exactly as it appears on the ID document, as a consistency check will be performed. If multiple given names are listed on the document, you must provide only one of them.",
            "example": "John",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "last_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "description": "The last name provided must match exactly as it appears on the ID document, as a consistency check will be performed. If both a birth name and a usage name are listed on the document, you must provide one of them, but not both.",
            "example": "Doe",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "redirection_url": {
            "description": "The URL to redirect the person back to your application or website after the identity verification flow is complete.",
            "example": "https://www.redirectionurl.com",
            "format": "uri",
            "maxLength": 2000,
            "minLength": 1,
            "type": "string"
          },
          "face_recognition": {
            "default": false,
            "description": "Enable face recognition step in the identity verification flow.",
            "example": false,
            "type": "boolean"
          },
          "workspace_id": {
            "description": "Scopes the verification to a specific workspace.\nDefaults to the default workspace if not specified.\n",
            "example": "9412b83b-b4b9-4a94-97b5-2b43dfa4cde3",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["first_name", "last_name", "redirection_url"],
        "title": "Initiate Identity Video Verification",
        "type": "object"
      },
      "IdentityVideoFull": {
        "allOf": [
          { "$ref": "#/components/schemas/IdentityVideoMeta" },
          {
            "properties": {
              "verification_url": {
                "description": "The URL of the verification page that the user used to begin the verification process.",
                "example": "https://id.ubble.ai/2f3e833c-6cf8-4c39-9004-cfb0e048ef63",
                "format": "uri",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "data": {
                "$ref": "#/components/schemas/IdentityVideoFull_allOf_data"
              }
            },
            "required": ["data", "verification_url"],
            "type": "object"
          }
        ],
        "title": "IdentityVideoFull",
        "type": "object"
      },
      "ProofOfAddressMeta": {
        "properties": {
          "id": { "$ref": "#/components/schemas/UUID" },
          "workspace_id": {
            "description": "The Workspace ID in which the Proof of Address Verification has been created.",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "type": "string"
          },
          "created_at": {
            "description": "Creation date of the Proof of Address Verification.",
            "example": "2025-02-12T23:59:59Z",
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "description": "Update date of the Proof of Address Verification.",
            "example": "2025-02-12T23:59:59Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Status of the verification",
            "enum": ["pending", "verified", "failed", "inconclusive"],
            "example": "failed",
            "type": "string"
          },
          "status_codes": {
            "description": "List of status codes. Indicates the cause when the status is `failed` or `inconclusive`.",
            "example": ["POAV_1611", "POAV_1612"],
            "items": { "type": "string" },
            "type": "array"
          },
          "data_anonymized": {
            "description": "Indicates if the data related to the ProofOfAddress Verification has been anonymized.\nIf set to `true`, the data are removed and most fields will be NULL.\n",
            "example": false,
            "type": "boolean"
          }
        },
        "required": [
          "created_at",
          "data_anonymized",
          "id",
          "status",
          "status_codes",
          "updated_at",
          "workspace_id"
        ],
        "title": "ProofOfAddressMeta",
        "type": "object"
      },
      "InitiateProofOfAddress": {
        "additionalProperties": false,
        "properties": {
          "file": {
            "description": "The proof of address document.\nAccepted formats: PNG, JPEG, JPG, PDF.\nMax size: 10 MB. Max resolution: 20 mpx.\n",
            "format": "binary",
            "type": "string"
          },
          "natural_person": {
            "$ref": "#/components/schemas/InitiateProofOfAddress_natural_person"
          },
          "workspace_id": {
            "description": "Scopes the verification to a specific workspace.\nDefaults to the default workspace if not specified.\n",
            "example": "9412b83b-b4b9-4a94-97b5-2b43dfa4cde3",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["file"],
        "title": "Create Proof of Address Verification",
        "type": "object"
      },
      "ProofOfAddressFull": {
        "allOf": [
          { "$ref": "#/components/schemas/ProofOfAddressMeta" },
          {
            "properties": {
              "data": {
                "$ref": "#/components/schemas/ProofOfAddressFull_allOf_data"
              }
            },
            "required": ["data"],
            "type": "object"
          }
        ],
        "title": "ProofOfAddressFull",
        "type": "object"
      },
      "WatchlistMeta": {
        "properties": {
          "id": { "$ref": "#/components/schemas/UUID" },
          "workspace_id": {
            "description": "The Workspace ID in which the verification has been created.",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "type": "string"
          },
          "created_at": {
            "description": "Creation date of the Watchlist Verification.",
            "example": "2025-02-12T23:59:59Z",
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "description": "Update date of the Watchlist Verification.",
            "example": "2025-02-12T23:59:59Z",
            "format": "date-time",
            "type": "string"
          },
          "status": { "$ref": "#/components/schemas/WatchlistStatus" },
          "data_anonymized": {
            "description": "Indicates if the data related to the Watchlist Verification has been anonymized.\nIf set to `true`, the data are removed and most fields will be NULL.\n",
            "example": false,
            "type": "boolean"
          }
        },
        "required": [
          "created_at",
          "data_anonymized",
          "id",
          "status",
          "updated_at",
          "workspace_id"
        ],
        "title": "WatchlistMeta",
        "type": "object"
      },
      "InitiateWatchlist": {
        "additionalProperties": false,
        "properties": {
          "workspace_id": {
            "description": "Scopes the verification to a specific workspace.\nDefaults to the default workspace if not specified.\n",
            "example": "9412b83b-b4b9-4a94-97b5-2b43dfa4cde3",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "natural_person": {
            "$ref": "#/components/schemas/InitiateWatchlist_natural_person"
          }
        },
        "required": ["natural_person"],
        "title": "Initiate Watchlist Verification",
        "type": "object"
      },
      "WatchlistFull": {
        "allOf": [
          { "$ref": "#/components/schemas/WatchlistMeta" },
          {
            "properties": {
              "data": {
                "$ref": "#/components/schemas/WatchlistFull_allOf_data"
              }
            },
            "required": ["data"],
            "type": "object"
          }
        ],
        "title": "WatchlistFull",
        "type": "object"
      },
      "WebhookSubscription": {
        "properties": {
          "id": {
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "format": "uuid",
            "type": "string"
          },
          "endpoint": {
            "description": "Https target URL of the webhook",
            "example": "https://example.com/my-endpoint",
            "format": "uri",
            "maxLength": 255,
            "type": "string"
          },
          "description": {
            "description": "Short description of the webhook",
            "example": "Lorem Ipsum",
            "maxLength": 128,
            "nullable": true,
            "type": "string"
          },
          "sandbox": { "example": false, "type": "boolean" },
          "subscribed_events": {
            "$ref": "#/components/schemas/WebhookSubscription_subscribed_events"
          },
          "secret_key": {
            "description": "Autogenerated 32 bytes key",
            "type": "string"
          },
          "scopes": {
            "$ref": "#/components/schemas/WebhookSubscription_scopes"
          },
          "workspaces": {
            "$ref": "#/components/schemas/WebhookSubscription_workspaces"
          },
          "auto_retry": {
            "description": "If a Webhook request fails for any reason, Yousign will retry the request 8 times using a back-off mechanism after: 2, 6, 30, 60, 300, 1080, 1440, 2880 min",
            "type": "boolean"
          },
          "enabled": {
            "description": "Is the webhook enabled?",
            "type": "boolean"
          },
          "created_at": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "auto_retry",
          "created_at",
          "description",
          "enabled",
          "endpoint",
          "id",
          "sandbox",
          "scopes",
          "secret_key",
          "subscribed_events",
          "updated_at",
          "workspaces"
        ],
        "title": "WebhookSubscription Response",
        "type": "object"
      },
      "CreateWebhookSubscription": {
        "properties": {
          "endpoint": {
            "description": "Https target URL of the webhook",
            "example": "https://example.com/my-endpoint",
            "format": "uri",
            "maxLength": 255,
            "type": "string"
          },
          "description": {
            "description": "Short description of the webhook. This property cannot start or end with whitespace, does not allow HTML tags, URL or email.",
            "example": "Lorem Ipsum",
            "maxLength": 128,
            "nullable": true,
            "type": "string"
          },
          "sandbox": { "example": true, "type": "boolean" },
          "subscribed_events": {
            "$ref": "#/components/schemas/CreateWebhookSubscription_subscribed_events"
          },
          "secret_key": {
            "description": "Autogenerated 32 bytes key",
            "maxLength": 32,
            "minLength": 32,
            "nullable": true,
            "type": "string"
          },
          "scopes": {
            "$ref": "#/components/schemas/CreateWebhookSubscription_scopes"
          },
          "workspaces": {
            "$ref": "#/components/schemas/CreateWebhookSubscription_workspaces"
          },
          "auto_retry": {
            "description": "If a Webhook request fails for any reason, Yousign will retry the request 8 times using a back-off mechanism after: 2, 6, 30, 60, 300, 1080, 1440, 2880 min",
            "type": "boolean"
          },
          "enabled": {
            "description": "Choose whether the webhook is enabled or not.",
            "type": "boolean"
          }
        },
        "required": [
          "auto_retry",
          "description",
          "enabled",
          "endpoint",
          "sandbox",
          "scopes",
          "subscribed_events"
        ],
        "title": "CreateWebhookSubscription Request Body",
        "type": "object"
      },
      "UpdateWebhookSubscription": {
        "properties": {
          "endpoint": {
            "description": "Https target URL of the webhook",
            "example": "https://example.com/my-endpoint",
            "format": "uri",
            "maxLength": 255,
            "type": "string"
          },
          "description": {
            "description": "Short description of the webhook. This property cannot start or end with whitespace, does not allow HTML tags, URL or email.",
            "example": "Lorem Ipsum",
            "maxLength": 128,
            "nullable": true,
            "type": "string"
          },
          "sandbox": { "example": true, "type": "boolean" },
          "subscribed_events": {
            "$ref": "#/components/schemas/CreateWebhookSubscription_subscribed_events"
          },
          "secret_key": {
            "description": "Autogenerated 32 bytes key",
            "maxLength": 32,
            "minLength": 32,
            "nullable": true,
            "type": "string"
          },
          "scopes": {
            "$ref": "#/components/schemas/CreateWebhookSubscription_scopes"
          },
          "workspaces": {
            "$ref": "#/components/schemas/CreateWebhookSubscription_workspaces"
          },
          "auto_retry": {
            "description": "If a Webhook request fails for any reason, Yousign will retry the request 8 times using a back-off mechanism after: 2, 6, 30, 60, 300, 1080, 1440, 2880 min",
            "type": "boolean"
          },
          "enabled": {
            "description": "Choose whether the webhook is enabled or not.",
            "type": "boolean"
          }
        },
        "title": "UpdateWebhookSubscription Request Body",
        "type": "object"
      },
      "Workspace": {
        "properties": {
          "id": {
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "name": { "type": "string" },
          "external_name": { "nullable": true, "type": "string" },
          "default": { "type": "boolean" },
          "created_at": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "updated_at": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "deleted_at": {
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "users": {
            "items": { "$ref": "#/components/schemas/Workspace_users_inner" },
            "type": "array"
          }
        },
        "required": [
          "created_at",
          "default",
          "deleted_at",
          "external_name",
          "id",
          "name",
          "updated_at",
          "users"
        ],
        "title": "Workspace",
        "type": "object"
      },
      "CreateWorkspace": {
        "properties": {
          "name": { "example": "Sales", "maxLength": 200, "type": "string" },
          "external_name": {
            "example": "UK Sales",
            "maxLength": 200,
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["name"],
        "type": "object"
      },
      "MarkWorkspaceAsDefault": {
        "properties": {
          "workspace_id": {
            "description": "The workspace you want to mark as the default one",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": ["workspace_id"],
        "type": "object"
      },
      "DeleteWorkspace": {
        "properties": {
          "workspace_id": {
            "description": "The target workspace where resources are migrated in.",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": ["workspace_id"],
        "type": "object"
      },
      "UpdateWorkspace": {
        "properties": {
          "name": { "example": "Sales", "maxLength": 200, "type": "string" },
          "external_name": {
            "example": "UK Sales",
            "maxLength": 200,
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "LegacyBankAccountVerificationStatus": {
        "enum": ["pending", "approved", "declined", "inconclusive"],
        "type": "string"
      },
      "HumanName": {
        "pattern": "^(?!\\s)[0-9A-Za-zĄÀÁÂÃÄÅÇĆÈÉÊËĘÌÍÎÏŁÑŃÒÓÔÕÖŚÙÚÛÜÝŹŻąàáâãäåæçćèéêëęìíîïłñńòóôõöśùúûüýÿźżßĀāĂăĈĉĊċČčĎďĐđĒēĔĕĖėĚěĜĝĞğĠġĢģĤĥĦħĨĩĪīĬĭĮįİıĲĳĴĵĶķĸĹĺĻļĽľĿŀŅņŇňŉŊŋŌōŎŏŐőŒœŔŕŖŗŘřŜŝŞşŠšŢţŤťŦŧŨũŪūŬŭŮůŰűŲųŴŵŶŷŸŽžſøØÆȘșȚț`\\'()\\- ]+(?<!\\s)$",
        "type": "string"
      },
      "IBAN": {
        "description": "International Bank Account Number (IBAN)",
        "example": "FR7610278030060001478474080",
        "maxLength": 34,
        "minLength": 14,
        "pattern": "^([A-Z]{2}[ \\-]?[0-9]{2})(?=(?:[ \\-]?[A-Z0-9]){9,30}$)((?:[ \\-]?[A-Z0-9]{3,5}){2,7})([ \\-]?[A-Z0-9]{1,3})?$",
        "type": "string"
      },
      "BIC": {
        "description": "Business Identifier Codes (BIC)",
        "example": "CMCIFR2A",
        "maxLength": 11,
        "minLength": 8,
        "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$",
        "type": "string"
      },
      "Locale": {
        "description": "Locale settings used for communication.",
        "enum": ["en", "fr", "de", "it", "nl", "es", "pl"],
        "minLength": 1,
        "title": "Locale",
        "type": "string"
      },
      "CustomExperience_DisabledNotificationsType": {
        "enum": [
          "approver.expiration_date_reminder",
          "approver.canceled",
          "approver.expiration_date_updated",
          "follower.approved",
          "follower.canceled",
          "follower.completed",
          "follower.expired",
          "follower.rejected",
          "follower.activated",
          "follower.signed",
          "sender.approved",
          "sender.canceled",
          "sender.completed",
          "sender.rejected",
          "sender.signed",
          "signer.expiration_date_reminder",
          "signer.canceled",
          "signer.completed",
          "signer.signed",
          "signer.expiration_date_updated",
          "signer.signature_requested"
        ],
        "example": "approver.canceled",
        "type": "string"
      },
      "CustomExperience_Source": {
        "description": "Custom Experience Source",
        "enum": ["app", "public_api"],
        "example": "app",
        "nullable": true,
        "type": "string"
      },
      "LogoLayout": {
        "description": "Determines the display layout of the logo. Possible values are:\n- `round`: Displays the logo in a circular format.\n- `original`: Displays the logo in its original shape.\n",
        "enum": ["round", "original"],
        "example": "round",
        "title": "LogoLayout",
        "type": "string"
      },
      "InitialsArea": {
        "properties": {
          "alignment": {
            "description": "Alignment of the Initials on the document. The `left`, `right` and `center` options are aligned on top of the page by default.",
            "enum": [
              "left",
              "right",
              "center",
              "top-left",
              "top-right",
              "top-center",
              "bottom-left",
              "bottom-right",
              "bottom-center"
            ],
            "type": "string"
          },
          "y": {
            "description": "Offset of the initials from the edge of the page (in pixels). The offset is from the top or bottom of the page, depending on what has been defined in the `alignment` attribute.",
            "example": 10,
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": ["alignment", "y"],
        "title": "InitialsArea",
        "type": "object"
      },
      "CreateElectronicSealFieldSealPayload": {
        "properties": {
          "type": {
            "enum": ["seal", "read_only_text"],
            "example": "seal",
            "type": "string"
          },
          "height": {
            "example": 200,
            "maximum": 32767,
            "minimum": 1,
            "type": "integer"
          },
          "width": {
            "example": 250,
            "maximum": 32767,
            "minimum": 1,
            "type": "integer"
          },
          "page": {
            "example": 1,
            "maximum": 32767,
            "minimum": 1,
            "type": "integer"
          },
          "x": {
            "example": 0,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "example": 0,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "reason": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "maxLength": 200,
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["height", "page", "type", "width", "x", "y"],
        "title": "Seal",
        "type": "object"
      },
      "CreateElectronicSealFieldReadOnlyTextPayload": {
        "properties": {
          "type": {
            "enum": ["read_only_text"],
            "example": "read_only_text",
            "type": "string"
          },
          "height": {
            "example": 200,
            "maximum": 32767,
            "minimum": 1,
            "type": "integer"
          },
          "width": {
            "example": 250,
            "maximum": 32767,
            "minimum": 1,
            "type": "integer"
          },
          "page": {
            "example": 1,
            "maximum": 32767,
            "minimum": 1,
            "type": "integer"
          },
          "x": {
            "example": 0,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "example": 0,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "text": { "maxLength": 80, "type": "string" }
        },
        "required": ["height", "page", "type", "width", "x", "y"],
        "title": "Read Only Text",
        "type": "object"
      },
      "LegacyIdDocumentVerificationStatus": {
        "enum": ["pending", "approved", "declined", "inconclusive"],
        "type": "string"
      },
      "SignatureRequestStatus": {
        "enum": [
          "draft",
          "ongoing",
          "done",
          "deleted",
          "expired",
          "canceled",
          "approval",
          "rejected",
          "declined"
        ],
        "type": "string"
      },
      "SignatureRequestTimeZone": {
        "default": "Europe/Paris",
        "description": "Time zone of the dates and times displayed in emails, the Signature Request expiration date, and the PDF Audit Trail. Format: tz database. Default is set to Europe/Paris.",
        "example": "Europe/Paris",
        "type": "string"
      },
      "AuditTrailLocale": {
        "enum": ["de", "en", "es", "fr", "it", "pt"],
        "example": "en",
        "type": "string"
      },
      "SignatureRequest_SignerFromInfoInput": {
        "description": "Create a signer from info",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/SignatureRequest_SignerFromInfoInput_info"
          },
          "fields": {
            "items": { "$ref": "#/components/schemas/FieldsInput" },
            "type": "array"
          },
          "signature_level": {
            "default": "electronic_signature",
            "enum": [
              "electronic_signature",
              "advanced_electronic_signature",
              "qualified_electronic_signature"
            ],
            "type": "string"
          },
          "signature_authentication_mode": {
            "enum": [null, "otp_email", "otp_sms", "no_otp"],
            "nullable": true,
            "type": "string"
          },
          "redirect_urls": {
            "$ref": "#/components/schemas/SignatureRequest_SignerFromInfoInput_redirect_urls"
          },
          "custom_text": {
            "$ref": "#/components/schemas/SignatureRequest_SignerFromInfoInput_custom_text"
          },
          "pre_identity_verification_required": {
            "description": "Defines the way the Signer's Identity Documents will be uploaded for Verification. If set to `true`, `signature_level`should be equal to `advanced_electronic_signature` and `delivery_mode` set to `none`.",
            "type": "boolean"
          }
        },
        "required": ["info", "signature_level"],
        "title": "From Scratch",
        "type": "object"
      },
      "SignatureRequest_SignerFromUserIdInput": {
        "description": "Create a signer from a user",
        "properties": {
          "user_id": {
            "description": "Create signer from an existing user",
            "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
            "format": "uuid",
            "type": "string"
          },
          "fields": {
            "items": { "$ref": "#/components/schemas/FieldsInput" },
            "type": "array"
          },
          "signature_level": {
            "default": "electronic_signature",
            "enum": [
              "electronic_signature",
              "advanced_electronic_signature",
              "qualified_electronic_signature"
            ],
            "type": "string"
          },
          "signature_authentication_mode": {
            "enum": [null, "otp_email", "otp_sms", "no_otp"],
            "nullable": true,
            "type": "string"
          },
          "redirect_urls": {
            "$ref": "#/components/schemas/SignatureRequest_SignerFromInfoInput_redirect_urls"
          },
          "custom_text": {
            "$ref": "#/components/schemas/SignatureRequest_SignerFromInfoInput_custom_text"
          },
          "pre_identity_verification_required": {
            "description": "Defines the way the Signer's Identity Documents will be uploaded for Verification. If set to `true`, `signature_level`should be equal to `advanced_electronic_signature` and `delivery_mode` set to `none`.",
            "type": "boolean"
          }
        },
        "required": ["signature_level", "user_id"],
        "title": "From Existing User",
        "type": "object"
      },
      "SignatureRequest_SignerFromContactIdInput": {
        "description": "Create signer from a contact",
        "properties": {
          "contact_id": {
            "description": "Create signer from an existing contact",
            "example": "ddecfb85-8a45-4254-b940-6171b8df0a90",
            "format": "uuid",
            "type": "string"
          },
          "fields": {
            "items": { "$ref": "#/components/schemas/FieldsInput" },
            "type": "array"
          },
          "signature_level": {
            "default": "electronic_signature",
            "enum": [
              "electronic_signature",
              "advanced_electronic_signature",
              "qualified_electronic_signature"
            ],
            "type": "string"
          },
          "signature_authentication_mode": {
            "enum": [null, "otp_email", "otp_sms", "no_otp"],
            "nullable": true,
            "type": "string"
          },
          "redirect_urls": {
            "$ref": "#/components/schemas/SignatureRequest_SignerFromInfoInput_redirect_urls"
          },
          "custom_text": {
            "$ref": "#/components/schemas/SignatureRequest_SignerFromInfoInput_custom_text"
          },
          "pre_identity_verification_required": {
            "description": "Defines the way the Signer's Identity Documents will be uploaded for Verification. If set to `true`, `signature_level`should be equal to `advanced_electronic_signature` and `delivery_mode` set to `none`.",
            "type": "boolean"
          }
        },
        "required": ["contact_id", "signature_level"],
        "title": "From Existing Contact",
        "type": "object"
      },
      "SignatureRequest_EmailNotification": {
        "minProperties": 1,
        "nullable": true,
        "properties": {
          "sender": {
            "$ref": "#/components/schemas/SignatureRequest_EmailNotification_Sender"
          },
          "custom_note": {
            "deprecated": true,
            "example": "Please sign these documents as soon as possible.",
            "maxLength": 2000,
            "nullable": true,
            "type": "string"
          },
          "custom_text": {
            "$ref": "#/components/schemas/SignatureRequest_EmailNotification_custom_text"
          }
        },
        "title": "SignatureRequest_EmailNotification",
        "type": "object"
      },
      "SignatureRequest_PlaceholderSignerSubstituteFromInfoInput": {
        "description": "Create a placeholder signer substitute from info",
        "properties": {
          "label": {
            "example": "Employee",
            "maxLength": 64,
            "minLength": 1,
            "type": "string"
          },
          "info": {
            "$ref": "#/components/schemas/SignatureRequest_PlaceholderSignerSubstituteFromInfoInput_info"
          },
          "signature_level": {
            "default": "electronic_signature",
            "enum": [
              "electronic_signature",
              "advanced_electronic_signature",
              "qualified_electronic_signature"
            ],
            "type": "string"
          },
          "signature_authentication_mode": {
            "enum": [null, "otp_email", "otp_sms", "no_otp"],
            "nullable": true,
            "type": "string"
          },
          "redirect_urls": {
            "$ref": "#/components/schemas/New_Signer_From_Scratch_redirect_urls"
          },
          "custom_text": {
            "$ref": "#/components/schemas/SignatureRequest_SignerFromInfoInput_custom_text"
          },
          "delivery_mode": { "$ref": "#/components/schemas/SignerDeliveryMode" }
        },
        "required": ["info", "label"],
        "title": "From Scratch",
        "type": "object"
      },
      "SignatureRequest_PlaceholderSignerSubstituteFromUserIdInput": {
        "description": "Create a placeholder signer substitute from a user",
        "properties": {
          "label": {
            "example": "Employee",
            "maxLength": 64,
            "minLength": 1,
            "type": "string"
          },
          "user_id": {
            "description": "Create signer from an existing user",
            "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
            "format": "uuid",
            "type": "string"
          },
          "signature_level": {
            "default": "electronic_signature",
            "enum": [
              "electronic_signature",
              "advanced_electronic_signature",
              "qualified_electronic_signature"
            ],
            "type": "string"
          },
          "signature_authentication_mode": {
            "enum": [null, "otp_email", "otp_sms", "no_otp"],
            "nullable": true,
            "type": "string"
          },
          "redirect_urls": {
            "$ref": "#/components/schemas/New_Signer_From_Scratch_redirect_urls"
          },
          "custom_text": {
            "$ref": "#/components/schemas/SignatureRequest_SignerFromInfoInput_custom_text"
          },
          "delivery_mode": { "$ref": "#/components/schemas/SignerDeliveryMode" }
        },
        "required": ["label", "user_id"],
        "title": "From Existing User",
        "type": "object"
      },
      "SignatureRequest_PlaceholderSignerSubstituteFromContactIdInput": {
        "description": "Create a placeholder signer substitute from a contact",
        "properties": {
          "label": {
            "example": "Employee",
            "maxLength": 64,
            "minLength": 1,
            "type": "string"
          },
          "contact_id": {
            "description": "Create signer from an existing contact",
            "example": "ddecfb85-8a45-4254-b940-6171b8df0a90",
            "format": "uuid",
            "type": "string"
          },
          "signature_level": {
            "default": "electronic_signature",
            "enum": [
              "electronic_signature",
              "advanced_electronic_signature",
              "qualified_electronic_signature"
            ],
            "type": "string"
          },
          "signature_authentication_mode": {
            "enum": [null, "otp_email", "otp_sms", "no_otp"],
            "nullable": true,
            "type": "string"
          },
          "redirect_urls": {
            "$ref": "#/components/schemas/New_Signer_From_Scratch_redirect_urls"
          },
          "custom_text": {
            "$ref": "#/components/schemas/SignatureRequest_SignerFromInfoInput_custom_text"
          },
          "delivery_mode": { "$ref": "#/components/schemas/SignerDeliveryMode" }
        },
        "required": ["contact_id", "label"],
        "title": "From Existing Contact",
        "type": "object"
      },
      "SignatureRequest_PlaceholderReadOnlyTextFieldSubstituteInput": {
        "description": "Create a placeholder read_only_text field substitute",
        "properties": {
          "label": {
            "example": "Employee",
            "maxLength": 64,
            "minLength": 1,
            "type": "string"
          },
          "text": {
            "example": "This is my read_only_text",
            "maxLength": 5000,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": ["label", "text"],
        "type": "object"
      },
      "Archiving": {
        "deprecated": true,
        "description": "Once the signature request completed, archive its documents in a secure digital safe",
        "enum": ["archive", "archive_y"],
        "nullable": true,
        "title": "Archiving",
        "type": "string"
      },
      "EmbeddedSignerWithSignatureLink": {
        "description": "",
        "properties": {
          "id": { "format": "uuid", "minLength": 1, "type": "string" },
          "status": {
            "enum": [
              "initiated",
              "notified",
              "verified",
              "processing",
              "consent_given",
              "signed",
              "aborted",
              "error"
            ],
            "minLength": 1,
            "type": "string"
          },
          "signature_link": {
            "format": "uri",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "signature_link_expiration_date": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "id",
          "signature_link",
          "signature_link_expiration_date",
          "status"
        ],
        "type": "object"
      },
      "ApproverToNotify": {
        "description": "",
        "properties": {
          "id": { "format": "uuid", "minLength": 1, "type": "string" },
          "status": {
            "enum": ["initiated", "notified", "approved", "rejected"],
            "minLength": 1,
            "type": "string"
          },
          "approval_link": {
            "format": "uri",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "approval_link_expiration_date": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "approval_link",
          "approval_link_expiration_date",
          "id",
          "status"
        ],
        "type": "object"
      },
      "CustomText": {
        "description": "Custom Text",
        "properties": {
          "request_subject": {
            "maxLength": 150,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "request_body": {
            "maxLength": 2000,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "reminder_subject": {
            "maxLength": 150,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "reminder_body": {
            "maxLength": 2000,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "reminder_body",
          "reminder_subject",
          "request_body",
          "request_subject"
        ],
        "type": "object"
      },
      "Font": {
        "example": {
          "family": "Inconsolata",
          "color": "#F53D1E",
          "size": 12,
          "variants": { "bold": true, "italic": false }
        },
        "properties": {
          "family": { "$ref": "#/components/schemas/FontFamily" },
          "color": {
            "pattern": "^#([a-f0-9]{6}|[A-F0-9]{6})$",
            "type": "string"
          },
          "size": { "maximum": 96, "minimum": 7, "type": "integer" },
          "variants": { "$ref": "#/components/schemas/FontVariants" }
        },
        "required": ["color", "family", "size", "variants"],
        "title": "Font",
        "type": "object"
      },
      "CreateFieldFont": {
        "description": "If set, **width** and **height** properties become required. Otherwise, if not set or null, the default font will be used.",
        "example": {
          "family": "Inconsolata",
          "color": "#F53D1E",
          "size": 12,
          "variants": { "bold": true, "italic": false }
        },
        "nullable": true,
        "properties": {
          "family": { "$ref": "#/components/schemas/FontFamily" },
          "color": {
            "default": "#000000",
            "pattern": "^#([a-f0-9]{6}|[A-F0-9]{6})$",
            "type": "string"
          },
          "size": {
            "default": 12,
            "maximum": 96,
            "minimum": 7,
            "type": "integer"
          },
          "variants": { "$ref": "#/components/schemas/FontVariants" }
        },
        "required": ["color", "family", "size", "variants"],
        "title": "Font",
        "type": "object"
      },
      "UpdateFieldFont": {
        "description": "If set, **width** and **height** properties become required. Otherwise, if not set the font will not be changed, and if set to null the default font will be used.",
        "example": {
          "family": "Inconsolata",
          "color": "#F53D1E",
          "size": 12,
          "variants": { "bold": true, "italic": false }
        },
        "nullable": true,
        "properties": {
          "family": { "$ref": "#/components/schemas/FontFamily" },
          "color": {
            "default": "#000000",
            "pattern": "^#([a-f0-9]{6}|[A-F0-9]{6})$",
            "type": "string"
          },
          "size": {
            "default": 12,
            "maximum": 22,
            "minimum": 8,
            "type": "integer"
          },
          "variants": { "$ref": "#/components/schemas/FontVariants" }
        },
        "required": ["color", "family", "size", "variants"],
        "title": "Font",
        "type": "object"
      },
      "SmsNotification": {
        "properties": {
          "otp_message": { "$ref": "#/components/schemas/OtpMessage" }
        },
        "required": ["otp_message"],
        "title": "SMS Notification",
        "type": "object"
      },
      "EmailNotification": {
        "properties": {
          "disabled": {
            "description": "List of disabled email notifications",
            "items": {
              "enum": [
                "signer.signature_request_canceled_due_to_an_error.signer_who_has_not_signed",
                "signer.signature_request_canceled_due_to_an_error.signer_who_has_already_signed",
                "signer.signature_request_canceled_by_sender.signer_who_has_not_signed",
                "signer.signature_request_canceled_by_sender.signer_who_has_already_signed",
                "signer.signature_request_done.signature_request_contains_one_signer",
                "signer.signature_request_done.signature_request_contains_multiple_signers",
                "signer.signature_request_with_multiple_signers_signed.signed_by_a_signer",
                "signer.signature_request_updated.new_expiration_date",
                "signer.signature_request_updated_by_sender.new_signer_details",
                "signer.signature_request_signature_requested.first_notification",
                "signer.signature_request_signature_requested.reminder_to_sign"
              ],
              "type": "string"
            },
            "title": "Disabled email notifications",
            "type": "array"
          }
        },
        "required": ["disabled"],
        "title": "Email Notification",
        "type": "object"
      },
      "FieldsInput": {
        "oneOf": [
          { "$ref": "#/components/schemas/Signature_2" },
          { "$ref": "#/components/schemas/Mention_2" },
          { "$ref": "#/components/schemas/Text_2" },
          { "$ref": "#/components/schemas/Checkbox_2" },
          { "$ref": "#/components/schemas/RadioGroup_2" }
        ],
        "type": "object"
      },
      "SignerDeliveryMode": {
        "description": "Override the delivery mode of the Signature Request for this Signer",
        "enum": ["email", "none"],
        "nullable": true,
        "type": "string"
      },
      "SmsNotification_1": {
        "nullable": true,
        "properties": {
          "otp_message": { "$ref": "#/components/schemas/OTP_Message" }
        },
        "required": ["otp_message"],
        "title": "SMS Notification",
        "type": "object"
      },
      "EmailNotification_1": {
        "nullable": true,
        "properties": {
          "disabled": {
            "items": {
              "description": "If the delivery mode is \"email\" for the Signer, you can list all the emails you don't want them to receive.",
              "enum": [
                "signer.signature_request_canceled_due_to_an_error.signer_who_has_not_signed",
                "signer.signature_request_canceled_due_to_an_error.signer_who_has_already_signed",
                "signer.signature_request_canceled_by_sender.signer_who_has_not_signed",
                "signer.signature_request_canceled_by_sender.signer_who_has_already_signed",
                "signer.signature_request_done.signature_request_contains_one_signer",
                "signer.signature_request_done.signature_request_contains_multiple_signers",
                "signer.signature_request_with_multiple_signers_signed.signed_by_a_signer",
                "signer.signature_request_updated.new_expiration_date",
                "signer.signature_request_updated_by_sender.new_signer_details",
                "signer.signature_request_signature_requested.first_notification",
                "signer.signature_request_signature_requested.reminder_to_sign"
              ],
              "type": "string"
            },
            "title": "Disabled Email Notification",
            "type": "array"
          }
        },
        "required": ["disabled"],
        "title": "Email Notification",
        "type": "object"
      },
      "UserRole": {
        "enum": ["owner", "admin", "member"],
        "title": "User Role",
        "type": "string"
      },
      "UserStatus": {
        "enum": ["invited", "signed_up", "verified", "completed"],
        "minLength": 1,
        "title": "User Status",
        "type": "string"
      },
      "ManageableRole": {
        "enum": ["admin", "member"],
        "title": "Manageable Role",
        "type": "string"
      },
      "BankAccountConnectionStatus": {
        "description": "Status of the Bank Account Connection Verification.",
        "enum": ["pending", "verified", "failed", "inconclusive"],
        "example": "verified",
        "type": "string"
      },
      "BankAccountStatus": {
        "description": "Status of the Bank Account Verification.",
        "enum": ["pending", "verified", "failed", "inconclusive"],
        "example": "verified",
        "type": "string"
      },
      "IdentityDocumentStatus": {
        "description": "Status of the Identity Document Verification",
        "enum": ["pending", "verified", "failed", "inconclusive"],
        "example": "verified",
        "type": "string"
      },
      "IdentityVideoStatus": {
        "description": "Status of the Identity Video Verification",
        "enum": ["pending", "verified", "failed", "inconclusive"],
        "example": "verified",
        "type": "string"
      },
      "IdentityVideoDocument": {
        "description": "Includes all information that has been extracted from the document, as well as the best images of the document.",
        "nullable": true,
        "properties": {
          "full_name": {
            "description": "Full name of the document holder as it appears on the identity document",
            "example": "David Vincent",
            "maxLength": 510,
            "nullable": true,
            "type": "string"
          },
          "born_on": {
            "description": "Date of birth on the document",
            "example": "2024-01-18",
            "format": "date",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "Type of document.",
            "enum": [
              "driver_license",
              "id_card",
              "passport",
              "residence_permit"
            ],
            "nullable": true,
            "type": "string"
          },
          "issuing_country_code": {
            "example": "US",
            "format": "ISO 3166-1 alpha-2",
            "nullable": true,
            "pattern": "^[A-Z]{2}$",
            "type": "string"
          }
        },
        "required": ["born_on", "full_name", "issuing_country_code", "type"],
        "title": "IdentityVideoDocument",
        "type": "object"
      },
      "WatchlistStatus": {
        "description": "Status of the Watchlist Verification.",
        "enum": ["pending", "verified", "failed"],
        "example": "verified",
        "type": "string"
      },
      "WebhookWildcardSubscribedEvent": {
        "description": "Allows you to subscribe to all events at once.",
        "items": { "enum": ["*"], "type": "string" },
        "title": "All Events",
        "type": "array"
      },
      "WebhookSubscribedEvents": {
        "description": "List of specific webhook events to subscribe to.",
        "items": {
          "enum": [
            "signature_request.declined",
            "signature_request.canceled",
            "signature_request.done",
            "signature_request.activated",
            "signature_request.reminder_executed",
            "signature_request.expired",
            "signature_request.approved",
            "signature_request.deleted",
            "signature_request.permanently_deleted",
            "signature_request.reactivated",
            "signer.declined",
            "signer.done",
            "signer.notified",
            "signer.link_opened",
            "signer.identification_failed",
            "signer.identification_succeeded",
            "signer.identification_blocked",
            "signer.sender_contacted",
            "signer.error",
            "contact.created",
            "approver.notified",
            "approver.approved",
            "approver.rejected",
            "electronic_seal.error",
            "electronic_seal.done",
            "user.completed",
            "verification.identity_video.done",
            "verification.bank_account.done",
            "verification.bank_account_connection.done",
            "verification.bank_account_lookup.done",
            "verification.identity_document.done",
            "verification.company.done",
            "verification.watchlist.done",
            "verification.proof_of_address.done"
          ],
          "type": "string"
        },
        "title": "Specific Webhook Events",
        "type": "array"
      },
      "WebhookWildcardScope": {
        "description": "Wildcard scope to subscribe to all scopes.",
        "items": { "enum": ["*"], "type": "string" },
        "title": "All Scopes",
        "type": "array"
      },
      "WebhookScopes": {
        "description": "One or multiple specific scopes to subscribe.",
        "items": {
          "enum": ["app", "public_api", "connector_zapier_api"],
          "type": "string"
        },
        "title": "Specific Scopes",
        "type": "array"
      },
      "WebhookWildcardWorkspace": {
        "description": "Allows you to select all Workspaces.",
        "items": { "enum": ["*"], "type": "string" },
        "title": "All Workspaces",
        "type": "array"
      },
      "WebhookWorkspaces": {
        "description": "List of Workspace UUIDs.",
        "items": { "$ref": "#/components/schemas/UUID" },
        "title": "Workspace UUIDs",
        "type": "array"
      },
      "SignatureRequest_EmailNotification_Sender": {
        "properties": {
          "type": {
            "enum": ["organization", "workspace", "custom", "user"],
            "type": "string"
          },
          "custom_name": {
            "description": "To use in association with sender type custom to precise the name",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "SignatureRequest_Sender",
        "type": "object"
      },
      "FontFamily": {
        "enum": [
          "Inconsolata",
          "Open Sans",
          "Lato",
          "Raleway",
          "Merriweather",
          "EB Garamond",
          "Comic Neue",
          "Monaco",
          "Helvetica",
          "Courier",
          "Times Roman"
        ],
        "title": "FontFamily",
        "type": "string"
      },
      "FontVariants": {
        "properties": {
          "italic": { "default": false, "type": "boolean" },
          "bold": { "default": false, "type": "boolean" }
        },
        "required": ["bold", "italic"],
        "title": "FontVariants",
        "type": "object"
      },
      "OtpMessage": {
        "properties": {
          "custom_text": {
            "description": "Custom text contained is the one-time password SMS sent to the Signer. This feature is available from SCALE plan, and disabled by default. Please contact [customer support](https://yousign.app/auth/workspace/help) to request an activation.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["custom_text"],
        "title": "OTP Message",
        "type": "object"
      },
      "get_bank_account_verifications_200_response_data_inner": {
        "allOf": [
          { "$ref": "#/components/schemas/LegacyBankAccountVerification" },
          {
            "properties": {
              "created_at": {
                "example": "2024-01-18T22:59:00Z",
                "format": "date-time",
                "type": "string"
              },
              "updated_at": {
                "example": "2024-01-18T22:59:00Z",
                "format": "date-time",
                "type": "string"
              }
            },
            "required": ["created_at", "updated_at"],
            "type": "object"
          }
        ]
      },
      "get_bank_account_verifications_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": {
              "$ref": "#/components/schemas/get_bank_account_verifications_200_response_data_inner"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "get_bank_account_verifications_bankAccountVerificationId_200_response_allOf_extracted_from_document": {
        "properties": {
          "iban": { "$ref": "#/components/schemas/NullableIBAN" },
          "bic": { "$ref": "#/components/schemas/NullableBIC" }
        },
        "required": ["bic", "iban"],
        "type": "object"
      },
      "get_bank_account_verifications_bankAccountVerificationId_200_response": {
        "allOf": [
          { "$ref": "#/components/schemas/LegacyBankAccountVerification" },
          {
            "properties": {
              "extracted_from_document": {
                "$ref": "#/components/schemas/get_bank_account_verifications_bankAccountVerificationId_200_response_allOf_extracted_from_document"
              },
              "personal_data_anonymized": {
                "description": "Indicates if the personal data extracted from the document has been anonymized.\nIf set to `true`, the personal data has been anonymized and the `extracted_from_document` fields will be NULL.\n",
                "type": "boolean"
              }
            },
            "required": ["extracted_from_document", "personal_data_anonymized"],
            "type": "object"
          }
        ]
      },
      "get_consumption_addon_200_response": {
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/AddonConsumption" },
            "type": "array"
          }
        },
        "required": ["data"],
        "type": "object"
      },
      "get_consumption_detail_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/PaginationWithUpdatedAt" },
          "data": {
            "items": { "$ref": "#/components/schemas/DetailedConsumption" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "get_contacts_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": { "$ref": "#/components/schemas/Contact" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "get_custom_experiences_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": { "$ref": "#/components/schemas/CustomExperience" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "patch_custom_experience_logo_request": {
        "description": "Upload a file",
        "properties": {
          "file": {
            "example": "Binary file",
            "format": "binary",
            "type": "string"
          }
        },
        "required": ["file"],
        "type": "object"
      },
      "list_electronic_seal_images_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": { "$ref": "#/components/schemas/ElectronicSealImage" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "get_id_document_verifications_200_response_data_inner": {
        "allOf": [
          { "$ref": "#/components/schemas/LegacyIdDocumentVerification" },
          {
            "properties": {
              "created_at": {
                "example": "2024-01-18T22:59:00Z",
                "format": "date-time",
                "type": "string"
              },
              "updated_at": {
                "example": "2024-01-18T22:59:00Z",
                "format": "date-time",
                "type": "string"
              }
            },
            "required": ["created_at", "updated_at"],
            "type": "object"
          }
        ]
      },
      "get_id_document_verifications_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": {
              "$ref": "#/components/schemas/get_id_document_verifications_200_response_data_inner"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "create_id_document_verification_request": {
        "anyOf": [
          { "$ref": "#/components/schemas/LegacyCreateIdDocumentVerification" },
          {
            "$ref": "#/components/schemas/LegacyCreateIdDocumentVerificationWithoutName"
          }
        ],
        "type": "object"
      },
      "get_id_document_verification_200_response_allOf_extracted_from_document_mrz": {
        "description": "Machine Readable Zone content",
        "properties": {
          "line1": {
            "description": "MRZ line 1",
            "example": "IDFRASIAGRA<<<<<<<<<<<<<<<<<<<133039",
            "nullable": true,
            "type": "string"
          },
          "line2": {
            "description": "MRZ line 2",
            "example": "1002133008071GREGOIRE<<REMY8110228M4",
            "nullable": true,
            "type": "string"
          },
          "line3": {
            "description": "MRZ line 3",
            "example": "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["line1", "line2", "line3"],
        "type": "object"
      },
      "get_id_document_verification_200_response_allOf_extracted_from_document": {
        "properties": {
          "first_name": {
            "description": "The holder first name",
            "example": "John",
            "nullable": true,
            "type": "string"
          },
          "birth_name": {
            "description": "The holder birth name",
            "example": "Doe",
            "nullable": true,
            "type": "string"
          },
          "last_name": {
            "description": "The holder last name",
            "example": "Doe",
            "nullable": true,
            "type": "string"
          },
          "birth_date": {
            "description": "Birth date on the document",
            "example": "2024-01-18",
            "format": "date",
            "nullable": true,
            "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string"
          },
          "birth_place": {
            "description": "The holder birth place",
            "example": "Paris",
            "nullable": true,
            "type": "string"
          },
          "gender": {
            "description": "The holder gender. \"m\" Masculine, \"f\" Feminine, \"x\" Non defined.",
            "enum": ["f", "m", "x"],
            "example": "f",
            "nullable": true,
            "type": "string"
          },
          "postal_address": {
            "description": "The holder postal address",
            "example": "13 RUE SAINT MARCELIN\nMARSEILLE 10E (13)",
            "nullable": true,
            "type": "string"
          },
          "document_type": {
            "description": "The document type",
            "enum": [
              "id_card",
              "passport",
              "residence_permit",
              "driver_license",
              "ita_ts_cns"
            ],
            "example": "id_card",
            "nullable": true,
            "type": "string"
          },
          "document_issuing_country": {
            "description": "Issuance country code (2 upper case letters)",
            "example": "US",
            "format": "ISO 3166-1 alpha-2",
            "nullable": true,
            "pattern": "^[A-Za-z]{2}$",
            "type": "string"
          },
          "document_issuing_date": {
            "description": "Document issuance date",
            "example": "2024-01-18",
            "format": "date",
            "nullable": true,
            "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string"
          },
          "document_expiration_date": {
            "description": "Document legal expiration date",
            "example": "2024-01-18",
            "format": "date",
            "nullable": true,
            "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string"
          },
          "document_number": {
            "description": "Document identifier number (may contain letters)",
            "example": "X4RTBPFW4",
            "nullable": true,
            "type": "string"
          },
          "mrz": {
            "$ref": "#/components/schemas/get_id_document_verification_200_response_allOf_extracted_from_document_mrz"
          }
        },
        "required": [
          "birth_date",
          "birth_name",
          "birth_place",
          "document_expiration_date",
          "document_issuing_country",
          "document_issuing_date",
          "document_number",
          "document_type",
          "first_name",
          "gender",
          "last_name",
          "mrz",
          "postal_address"
        ],
        "type": "object"
      },
      "get_id_document_verification_200_response": {
        "allOf": [
          { "$ref": "#/components/schemas/LegacyIdDocumentVerification" },
          {
            "properties": {
              "extracted_from_document": {
                "$ref": "#/components/schemas/get_id_document_verification_200_response_allOf_extracted_from_document"
              },
              "personal_data_anonymized": {
                "description": "Indicates if the personal data extracted from the document has been anonymized.\nIf set to `true`, the personal data has been anonymized and the `extracted_from_document` fields will be NULL.\n",
                "type": "boolean"
              }
            },
            "required": ["extracted_from_document", "personal_data_anonymized"],
            "type": "object"
          }
        ]
      },
      "get_labels_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": { "$ref": "#/components/schemas/Label" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "get_signature_requests_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": { "$ref": "#/components/schemas/SignatureRequestInList" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "post_signature_requests_signatureRequestId_cancel_request": {
        "properties": {
          "reason": {
            "enum": [
              "contractualization_aborted",
              "errors_in_document",
              "other"
            ],
            "type": "string"
          },
          "custom_note": {
            "maxLength": 500,
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["reason"],
        "type": "object"
      },
      "get_signature_requests_signatureRequestId_signer_consent_requests_200_response": {
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/SignerConsentRequest" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "get_signature_requests_signatureRequestId_signer_document_requests_200_response": {
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/SignerDocumentRequest" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "get_signature_requests_signatureRequestId_documents_documentId_fields_200_response_data_inner": {
        "oneOf": [
          { "$ref": "#/components/schemas/FieldSignature" },
          { "$ref": "#/components/schemas/FieldText" },
          { "$ref": "#/components/schemas/FieldMention" },
          { "$ref": "#/components/schemas/FieldCheckbox" },
          { "$ref": "#/components/schemas/FieldRadioButtonGroup" },
          { "$ref": "#/components/schemas/FieldReadOnlyText" }
        ]
      },
      "get_signature_requests_signatureRequestId_documents_documentId_fields_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": {
              "$ref": "#/components/schemas/get_signature_requests_signatureRequestId_documents_documentId_fields_200_response_data_inner"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "post_signature_requests_signatureRequestId_documents_documentId_replace_request": {
        "properties": {
          "file": {
            "description": "Accepted formats: PDF, DOCX, JPEG, JPG and PNG. All files are converted to PDF upon upload.\nIf the Document nature is signable_document, only PDF or DOCX file formats are allowed.\n",
            "format": "binary",
            "type": "string"
          },
          "name": {
            "description": "The document name. If not set, will use the uploaded document name. This value should contain any characters except \"\\\", \"/\" and can\\'t start and finish with a space.",
            "example": "file1",
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^(?!\\s)[^\\/\\\\]+(?<!\\s)$",
            "type": "string"
          }
        },
        "required": ["file"],
        "type": "object"
      },
      "get_signature_requests_signatureRequestId_followers_200_response": {
        "description": "A list of Followers added to the Signature Request.",
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/Follower" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "get_signature_requests_id_labels_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": { "$ref": "#/components/schemas/SignatureRequestLabel" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "post_signature_requests_signatureRequestId_reactivate_request": {
        "properties": {
          "expiration_date": {
            "description": "Due date of the Signature Request (yyyy-mm-dd).\nThe date cannot be in the past and cannot be more than one year after initiation.\n",
            "format": "date",
            "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string"
          }
        },
        "required": ["expiration_date"],
        "type": "object"
      },
      "get_signature_requests_signatureRequestId_signers_signerId_documents_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": { "$ref": "#/components/schemas/SignerDocument" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "get_templates_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": { "$ref": "#/components/schemas/Template" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "get_users_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": { "$ref": "#/components/schemas/User" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "get_invitations_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": { "$ref": "#/components/schemas/UserInvitation" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "get_verifications_bank_account_connections_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": {
              "$ref": "#/components/schemas/BankAccountConnectionMeta"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "post_verifications_bank_account_connections_request": {
        "oneOf": [
          { "$ref": "#/components/schemas/InitiateBankAccountConnection" },
          {
            "$ref": "#/components/schemas/InitiateBankAccountConnectionWithLegalPerson"
          }
        ],
        "type": "object"
      },
      "get_verifications_bank_account_lookups_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": { "$ref": "#/components/schemas/BankAccountLookupMeta" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "post_verifications_bank_account_lookups_request": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InitiateBankAccountLookupWithNaturalPerson"
          },
          {
            "$ref": "#/components/schemas/InitiateBankAccountLookupWithLegalPerson"
          }
        ]
      },
      "get_verifications_bank_accounts_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": { "$ref": "#/components/schemas/BankAccountMeta" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "post_verifications_bank_accounts_request": {
        "anyOf": [
          { "$ref": "#/components/schemas/InitiateBankAccount" },
          { "$ref": "#/components/schemas/InitiateBankAccountWithLegalPerson" },
          {
            "$ref": "#/components/schemas/InitiateBankAccountWithNaturalPerson"
          }
        ],
        "type": "object"
      },
      "get_verifications_companies_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": { "$ref": "#/components/schemas/CompanyMeta" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "get_verifications_identity_documents_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": { "$ref": "#/components/schemas/IdentityDocumentMeta" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "post_verifications_identity_documents_request": {
        "anyOf": [
          { "$ref": "#/components/schemas/InitiateIdentityDocument" },
          { "$ref": "#/components/schemas/InitiateIdentityDocumentWithoutName" }
        ],
        "type": "object"
      },
      "get_verifications_identity_videos_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": { "$ref": "#/components/schemas/IdentityVideoMeta" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "get_verifications_proofs_of_address_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": { "$ref": "#/components/schemas/ProofOfAddressMeta" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "get_verifications_watchlists_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": { "$ref": "#/components/schemas/WatchlistMeta" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "get_workspaces_200_response": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/Pagination" },
          "data": {
            "items": { "$ref": "#/components/schemas/Workspace" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Consumption_app_qualified_electronic_signature_identification_mode_identity_verification": {
        "properties": {
          "succeeded": { "minimum": 0, "type": "integer" },
          "rejected": { "minimum": 0, "type": "integer" }
        },
        "required": ["rejected", "succeeded"],
        "type": "object"
      },
      "Consumption_app_qualified_electronic_signature_identification_mode": {
        "properties": {
          "identity_verification": {
            "$ref": "#/components/schemas/Consumption_app_qualified_electronic_signature_identification_mode_identity_verification"
          },
          "saved_identity": { "minimum": 0, "type": "integer" }
        },
        "required": ["identity_verification", "saved_identity"],
        "type": "object"
      },
      "Consumption_app": {
        "properties": {
          "electronic_signature": { "minimum": 0, "type": "integer" },
          "advanced_electronic_signature": { "minimum": 0, "type": "integer" },
          "advanced_electronic_signature_with_qualified_certificate": {
            "minimum": 0,
            "type": "integer"
          },
          "qualified_electronic_signature_identification_mode": {
            "$ref": "#/components/schemas/Consumption_app_qualified_electronic_signature_identification_mode"
          }
        },
        "required": [
          "advanced_electronic_signature",
          "advanced_electronic_signature_with_qualified_certificate",
          "electronic_signature",
          "qualified_electronic_signature_identification_mode"
        ],
        "type": "object"
      },
      "Consumption_api": {
        "properties": {
          "electronic_signature": { "minimum": 0, "type": "integer" },
          "advanced_electronic_signature": { "minimum": 0, "type": "integer" },
          "advanced_electronic_signature_with_qualified_certificate": {
            "minimum": 0,
            "type": "integer"
          },
          "electronic_seal": { "minimum": 0, "type": "integer" },
          "advanced_electronic_seal": { "minimum": 0, "type": "integer" },
          "qualified_electronic_signature_identification_mode": {
            "$ref": "#/components/schemas/Consumption_app_qualified_electronic_signature_identification_mode"
          }
        },
        "required": [
          "advanced_electronic_signature",
          "advanced_electronic_signature_with_qualified_certificate",
          "electronic_signature",
          "qualified_electronic_signature_identification_mode"
        ],
        "type": "object"
      },
      "CustomExperience_redirect_urls": {
        "properties": {
          "success": {
            "example": "https://example.com/success",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "error": {
            "example": "https://example.com/error",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "decline": {
            "example": "https://example.com/decline",
            "format": "uri",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["decline", "error", "success"],
        "type": "object"
      },
      "CreateCustomExperience_redirect_urls": {
        "nullable": true,
        "properties": {
          "success": {
            "example": "https://example.com/success",
            "format": "uri",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "error": {
            "example": "https://example.com/error",
            "format": "uri",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "decline": {
            "example": "https://example.com/decline",
            "format": "uri",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateCustomExperience_redirect_urls": {
        "nullable": true,
        "properties": {
          "success": {
            "example": "https://example.com/success",
            "format": "uri",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "error": {
            "example": "https://example.com/error",
            "format": "uri",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "decline": {
            "example": "https://example.com/decline",
            "format": "uri",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["decline", "error", "success"],
        "type": "object"
      },
      "Document_initials_per_page_inner": {
        "properties": {
          "page": {
            "description": "Page number.",
            "minimum": 1,
            "type": "integer"
          },
          "y": {
            "description": "Y-axis position of the initials on the page.",
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": ["page", "y"],
        "type": "object"
      },
      "Document_initials": {
        "nullable": true,
        "properties": {
          "alignment": {
            "description": "Alignment of the initials on the document’s pages.",
            "enum": ["left", "center", "right"],
            "type": "string"
          },
          "y": {
            "description": "Y-axis position of the initials on the first page of the document.",
            "minimum": 0,
            "type": "integer"
          },
          "per_page": {
            "items": {
              "$ref": "#/components/schemas/Document_initials_per_page_inner"
            },
            "type": "array"
          }
        },
        "required": ["alignment", "per_page", "y"],
        "type": "object"
      },
      "From_Electronic_Seal_Document": {
        "description": "Create an Electronic Seal Document from a previously sealed document.",
        "properties": {
          "electronic_seal_document_id": {
            "description": "Id of the Electronic Seal Document. The Electronic Seal must be done to use its Electronic Seal Document.",
            "example": "672a5a0b-ac65-407e-9da9-d34402bae974",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": ["electronic_seal_document_id"],
        "title": "From Electronic Seal Document",
        "type": "object"
      },
      "From_Signature_Request_Document": {
        "description": "Create an Electronic Seal Document from a Signature Request Document already signed.",
        "properties": {
          "signature_request_document_id": {
            "description": "Id of the Signature Request Document, the Signature Request must be Done.",
            "example": "672a5a0b-ac65-407e-9da9-d34402bae974",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": ["signature_request_document_id"],
        "title": "From Signature Request Document",
        "type": "object"
      },
      "CreateElectronicSealPayload_fields_inner": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/CreateElectronicSealFieldSealPayload"
          },
          {
            "$ref": "#/components/schemas/CreateElectronicSealFieldReadOnlyTextPayload"
          }
        ],
        "type": "object"
      },
      "SignatureRequestInList_reminder_settings": {
        "nullable": true,
        "properties": {
          "interval_in_days": {
            "enum": [1, 2, 7, 14],
            "format": "int32",
            "type": "integer"
          },
          "max_occurrences": {
            "format": "int32",
            "maximum": 10,
            "minimum": 1,
            "type": "integer"
          }
        },
        "required": ["interval_in_days", "max_occurrences"],
        "type": "object"
      },
      "SignatureRequestInList_signers_inner": {
        "properties": {
          "id": { "type": "string" },
          "status": {
            "enum": [
              "initiated",
              "declined",
              "notified",
              "verified",
              "processing",
              "consent_given",
              "signed",
              "aborted",
              "error"
            ],
            "type": "string"
          }
        },
        "required": ["id", "status"],
        "type": "object"
      },
      "SignatureRequestInList_approvers_inner": {
        "properties": {
          "id": { "type": "string" },
          "status": {
            "enum": ["initiated", "notified", "approved", "rejected"],
            "type": "string"
          }
        },
        "required": ["id", "status"],
        "type": "object"
      },
      "SignatureRequestInList_documents_inner": {
        "properties": {
          "id": { "type": "string" },
          "nature": {
            "enum": ["attachment", "signable_document"],
            "type": "string"
          }
        },
        "required": ["id", "nature"],
        "type": "object"
      },
      "SignatureRequestInList_sender": {
        "nullable": true,
        "properties": {
          "id": { "type": "string" },
          "email": { "type": "string" }
        },
        "type": "object"
      },
      "CreateSignatureRequest_reminder_settings": {
        "description": "Enable automatic reminders for pending signers.",
        "nullable": true,
        "properties": {
          "interval_in_days": {
            "enum": [1, 2, 7, 14],
            "format": "int32",
            "type": "integer"
          },
          "max_occurrences": {
            "example": 5,
            "format": "int32",
            "maximum": 10,
            "minimum": 1,
            "type": "integer"
          }
        },
        "required": ["interval_in_days", "max_occurrences"],
        "type": "object"
      },
      "CreateSignatureRequest_signers_inner": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/SignatureRequest_SignerFromInfoInput"
          },
          {
            "$ref": "#/components/schemas/SignatureRequest_SignerFromUserIdInput"
          },
          {
            "$ref": "#/components/schemas/SignatureRequest_SignerFromContactIdInput"
          }
        ],
        "description": "Create signers"
      },
      "CreateSignatureRequest_template_placeholders_signers_inner": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/SignatureRequest_PlaceholderSignerSubstituteFromInfoInput"
          },
          {
            "$ref": "#/components/schemas/SignatureRequest_PlaceholderSignerSubstituteFromUserIdInput"
          },
          {
            "$ref": "#/components/schemas/SignatureRequest_PlaceholderSignerSubstituteFromContactIdInput"
          }
        ]
      },
      "CreateSignatureRequest_template_placeholders": {
        "description": "When creating a signature request from a template, all substituting data for placeholders defined in the given template.",
        "nullable": true,
        "properties": {
          "signers": {
            "description": "Substituting data for placeholder signers.",
            "items": {
              "$ref": "#/components/schemas/CreateSignatureRequest_template_placeholders_signers_inner"
            },
            "type": "array"
          },
          "read_only_text_fields": {
            "description": "Substituting data for placeholder read_only_text fields.",
            "items": {
              "$ref": "#/components/schemas/SignatureRequest_PlaceholderReadOnlyTextFieldSubstituteInput"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SignatureRequest_email_notification_sender": {
        "properties": {
          "type": {
            "enum": ["organization", "workspace", "user", "custom"],
            "type": "string"
          },
          "custom_name": { "nullable": true, "type": "string" }
        },
        "required": ["custom_name", "type"],
        "type": "object"
      },
      "SignatureRequest_email_notification": {
        "properties": {
          "sender": {
            "$ref": "#/components/schemas/SignatureRequest_email_notification_sender"
          },
          "custom_note": {
            "example": "Please sign these documents as soon as possible.",
            "maxLength": 2000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["custom_note", "sender"],
        "type": "object"
      },
      "SignatureRequest_decline_information": {
        "nullable": true,
        "properties": {
          "signer_id": {
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "type": "string"
          },
          "reason": { "type": "string" },
          "declined_at": {
            "example": "2024-01-18T22:59:00Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateSignatureRequest_reminder_settings": {
        "nullable": true,
        "properties": {
          "interval_in_days": {
            "enum": [1, 2, 7, 14],
            "format": "int32",
            "type": "integer"
          },
          "max_occurrences": {
            "example": 5,
            "format": "int32",
            "maximum": 10,
            "minimum": 1,
            "type": "integer"
          }
        },
        "required": ["interval_in_days", "max_occurrences"],
        "type": "object"
      },
      "SignatureRequestActivated_documents_inner": {
        "properties": {
          "id": { "type": "string" },
          "nature": { "type": "string" }
        },
        "required": ["id", "nature"],
        "type": "object"
      },
      "New_Approver_From_Scratch_info": {
        "properties": {
          "first_name": { "maxLength": 255, "minLength": 1, "type": "string" },
          "last_name": { "maxLength": 255, "minLength": 1, "type": "string" },
          "email": { "maxLength": 255, "minLength": 1, "type": "string" },
          "phone_number": {
            "description": "E.164 format.",
            "example": "+41446667700",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "locale": { "$ref": "#/components/schemas/Locale" }
        },
        "required": ["email", "first_name", "last_name", "locale"],
        "type": "object"
      },
      "New_Approver_From_Scratch": {
        "description": "Create a new Approver from scratch.",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/New_Approver_From_Scratch_info"
          }
        },
        "required": ["info"],
        "title": "New Approver From Scratch",
        "type": "object"
      },
      "New_Approver_From_Existing_User": {
        "description": "Create a new Approver from an existing User.",
        "properties": {
          "user_id": {
            "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": ["user_id"],
        "title": "New Approver From Existing User",
        "type": "object"
      },
      "New_Approver_From_Existing_Contact": {
        "description": "Create a new Approver from an existing Contact.",
        "properties": {
          "contact_id": {
            "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": ["contact_id"],
        "title": "New Approver From Existing Contact",
        "type": "object"
      },
      "New_Approver_From_Existing_Signer": {
        "description": "Create a new Approver from an existing Signer.",
        "properties": {
          "signer_id": {
            "example": "8b6ed2f3-244f-487a-baa1-bbe4f51c8744",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": ["signer_id"],
        "title": "New Approver From Existing Signer",
        "type": "object"
      },
      "Approver_info": {
        "properties": {
          "first_name": { "minLength": 1, "type": "string" },
          "last_name": { "minLength": 1, "type": "string" },
          "email": { "format": "email", "minLength": 1, "type": "string" },
          "phone_number": {
            "description": "E.164 format.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "locale": { "$ref": "#/components/schemas/Locale" }
        },
        "required": [
          "email",
          "first_name",
          "last_name",
          "locale",
          "phone_number"
        ],
        "type": "object"
      },
      "UpdateApprover_info": {
        "nullable": true,
        "properties": {
          "first_name": { "maxLength": 255, "minLength": 1, "type": "string" },
          "last_name": { "maxLength": 255, "minLength": 1, "type": "string" },
          "email": { "format": "email", "minLength": 1, "type": "string" },
          "phone_number": {
            "description": "E.164 format",
            "example": "+41446667700",
            "minLength": 1,
            "type": "string"
          },
          "locale": { "$ref": "#/components/schemas/Locale" }
        },
        "type": "object"
      },
      "SignerConsentRequest_settings": {
        "description": "Settings relative to Signer Consent Request's type",
        "properties": {
          "text": {
            "description": "Text associated to the checkbox or text_to_copy",
            "example": "I agree with...",
            "maxLength": 1000,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": ["text"],
        "type": "object"
      },
      "CreateSignerConsentRequest_settings": {
        "description": "Settings relative to Signer Consent Request's type",
        "properties": {
          "text": {
            "description": "Text associated to the checkbox or the text_to_copy.\nThis property cannot start or end with whitespace, does not allow html tags or email.\nThis property cannot contain url for text_to_copy type.\n",
            "example": "I agree with...",
            "maxLength": 1000,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": ["text"],
        "type": "object"
      },
      "FieldRadioButtonGroup_radios_inner": {
        "properties": {
          "name": {
            "description": "Radio button's name.",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "x": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "size": {
            "description": "The size determines both the width and height of the radio button.",
            "format": "int32",
            "maximum": 240,
            "minimum": 8,
            "type": "integer"
          },
          "checked": {
            "description": "Signer has checked the radio button.",
            "type": "boolean"
          }
        },
        "required": ["checked", "name", "size", "x", "y"],
        "type": "object"
      },
      "Signature": {
        "properties": {
          "signer_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "type": { "enum": ["signature"], "type": "string" },
          "page": { "example": 1, "minimum": 1, "type": "integer" },
          "x": {
            "example": 200,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "example": 400,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "height": {
            "description": "Default value is 37",
            "example": 37,
            "maximum": 1000,
            "minimum": 37,
            "type": "integer"
          },
          "width": {
            "description": "Default value is 85",
            "example": 150,
            "maximum": 2000,
            "minimum": 85,
            "type": "integer"
          },
          "reason": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "description": "Provide extra context to explain why the Document is being signed. Once the Document is signed, the custom reason is stored in the Audit Trail and is included in the signature certificate.\nThe default value is: \"Signed by [Signer first name] [Signer last name]\".\n",
            "example": "Signed by John Doe",
            "maxLength": 150,
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["page", "signer_id", "type", "x", "y"],
        "title": "Signature",
        "type": "object"
      },
      "Mention": {
        "properties": {
          "signer_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "type": { "enum": ["mention"], "type": "string" },
          "page": { "example": 1, "minimum": 1, "type": "integer" },
          "x": {
            "example": 200,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "example": 400,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "width": {
            "description": "If not set, the width is automatically calculated with the mention length.",
            "example": 250,
            "minimum": 24,
            "type": "integer"
          },
          "height": {
            "description": "The height must be calculated using the formula: \"height = number_of_lines \\* font_size \\* line_height\", where the line height is always set to 1.5.",
            "example": 150,
            "minimum": 1,
            "nullable": true,
            "type": "integer"
          },
          "mention": {
            "description": "Content of the Mention.\nYou can use dynamic tags when creating the Mention:\n• `%date%` will display the current date when the Signer sign the Signature Request (eg. \"24-03-2025\")\n• `%datetime%` will display the current date and time when the Signer signs the Signature Request (eg. \"24-03-2025 10:30 UTC+0\")\n",
            "example": "Signed on %date%",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "font": { "$ref": "#/components/schemas/CreateFieldFont" },
          "name": {
            "description": "Name of the Field.",
            "example": "Mention 1",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["mention", "page", "signer_id", "type", "x", "y"],
        "title": "Mention",
        "type": "object"
      },
      "Text": {
        "properties": {
          "signer_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "type": { "enum": ["text"], "type": "string" },
          "page": { "example": 1, "minimum": 1, "type": "integer" },
          "x": {
            "example": 200,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "example": 400,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "width": {
            "description": "If not set, the width is automatically calculated with the max_length value",
            "example": 90,
            "minimum": 24,
            "type": "integer"
          },
          "height": {
            "description": "The height must be calculated using the formula: \"height = number_of_lines \\* font_size \\* line_height\", where the line height is always set to 1.5.",
            "example": 150,
            "minimum": 1,
            "type": "integer"
          },
          "max_length": {
            "example": 120,
            "maximum": 32767,
            "minimum": 1,
            "type": "integer"
          },
          "question": {
            "description": "If you don't want any question, you can give an empty string.",
            "example": "What is your job title?",
            "maxLength": 255,
            "type": "string"
          },
          "instruction": {
            "example": "Your position in the company",
            "nullable": true,
            "type": "string"
          },
          "optional": { "default": false, "type": "boolean" },
          "font": { "$ref": "#/components/schemas/CreateFieldFont" },
          "name": {
            "description": "Name of the Field.",
            "example": "Job Title",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "default_value": {
            "description": "If a default value is provided, the Field will be pre-filled with this value. The Signer can modify it before signing unless the Field is set to `read-only`.",
            "example": "Software Engineer",
            "maxLength": 32767,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "read_only": {
            "default": false,
            "description": "If set to `true`, the Signer cannot modify the Field and the default value (if provided) will remain unchanged.",
            "type": "boolean"
          }
        },
        "required": [
          "max_length",
          "page",
          "question",
          "signer_id",
          "type",
          "x",
          "y"
        ],
        "title": "Text",
        "type": "object"
      },
      "Checkbox": {
        "properties": {
          "signer_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "type": { "enum": ["checkbox"], "type": "string" },
          "page": { "example": 1, "minimum": 1, "type": "integer" },
          "x": {
            "example": 200,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "example": 400,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "size": {
            "default": 24,
            "example": 24,
            "maximum": 240,
            "minimum": 8,
            "type": "integer"
          },
          "optional": { "default": false, "type": "boolean" },
          "name": {
            "example": "Checkbox 1",
            "nullable": true,
            "type": "string"
          },
          "checked": { "default": false, "type": "boolean" },
          "read_only": {
            "default": false,
            "description": "If set to `true`, the checkbox cannot be modified by the signer.",
            "type": "boolean"
          }
        },
        "required": ["page", "signer_id", "type", "x", "y"],
        "title": "Checkbox",
        "type": "object"
      },
      "RadioGroup_radios_inner": {
        "properties": {
          "name": {
            "description": "Radio button's name",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "x": {
            "example": 200,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "example": 400,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "size": {
            "default": 24,
            "example": 24,
            "maximum": 240,
            "minimum": 8,
            "type": "integer"
          },
          "default_checked": {
            "default": false,
            "description": "Indicates whether the radio is initially checked (`true`) or unchecked (`false`).",
            "type": "boolean"
          }
        },
        "required": ["x", "y"],
        "type": "object"
      },
      "RadioGroup": {
        "properties": {
          "signer_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "type": { "enum": ["radio_group"], "type": "string" },
          "page": { "example": 1, "minimum": 1, "type": "integer" },
          "optional": { "default": false, "type": "boolean" },
          "name": {
            "description": "Radio group's name",
            "example": "radio_group_name_1",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "read_only": {
            "default": false,
            "description": "If set to `true`, the radio button cannot be modified by the Signer.",
            "type": "boolean"
          },
          "radios": {
            "items": { "$ref": "#/components/schemas/RadioGroup_radios_inner" },
            "type": "array"
          }
        },
        "required": ["page", "radios", "signer_id", "type"],
        "title": "RadioGroup",
        "type": "object"
      },
      "ReadOnlyText": {
        "properties": {
          "type": { "enum": ["read_only_text"], "type": "string" },
          "page": { "example": 1, "minimum": 1, "type": "integer" },
          "x": {
            "example": 200,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "example": 400,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "width": {
            "description": "If not set, the width is automatically calculated with the read only text length.",
            "example": 250,
            "minimum": 24,
            "nullable": true,
            "type": "integer"
          },
          "height": {
            "description": "The height must be calculated using the formula: \"height = number_of_lines \\* font_size \\* line_height\", where the line height is always set to 1.5.",
            "example": 150,
            "minimum": 1,
            "nullable": true,
            "type": "integer"
          },
          "text": {
            "example": "Order n°12345",
            "maxLength": 5000,
            "type": "string"
          },
          "font": { "$ref": "#/components/schemas/CreateFieldFont" }
        },
        "required": ["page", "text", "type", "x", "y"],
        "title": "ReadOnlyText",
        "type": "object"
      },
      "Signature_1": {
        "properties": {
          "signer_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "page": { "example": 1, "minimum": 1, "type": "integer" },
          "x": {
            "example": 400,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "example": 400,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "height": {
            "description": "Default value is 37",
            "example": 50,
            "maximum": 1000,
            "minimum": 37,
            "type": "integer"
          },
          "width": {
            "description": "Default value is 85",
            "example": 200,
            "maximum": 2000,
            "minimum": 85,
            "type": "integer"
          },
          "reason": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "description": "Provide extra context to explain why the Document is being signed. Once the Document is signed, the custom reason is stored in the Audit Trail and is included in the signature certificate.\nThe default value is: \"Signed by [Signer first name] [Signer last name]\".\n",
            "example": "Signed by John Doe",
            "maxLength": 150,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Signature",
        "type": "object"
      },
      "Mention_1": {
        "properties": {
          "signer_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "page": { "example": 1, "minimum": 1, "type": "integer" },
          "x": {
            "example": 400,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "example": 400,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "width": {
            "description": "If not set, the width is automatically calculated with the read only text length.",
            "example": 200,
            "minimum": 24,
            "type": "integer"
          },
          "height": {
            "description": "The height must be 24 or a multiple of 15 greater than 24. If height is not provided, it will be calculated depending on the number of newlines in the read only text.",
            "example": 150,
            "minimum": 24,
            "nullable": true,
            "type": "integer"
          },
          "mention": {
            "description": "Content of the Mention.\nYou can use dynamic tags when creating the Mention:\n• %date% will display the current date when the Signer sign the Signature Request (eg. \"24-03-2025\")\n• %datetime% will display the current date and time when the Signer signs the Signature Request (eg. \"24-03-2025 10:30 UTC+0\")\n",
            "example": "Signed on %date%",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "font": { "$ref": "#/components/schemas/UpdateFieldFont" },
          "name": {
            "description": "Name of the Field.",
            "example": "Text 1",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Mention",
        "type": "object"
      },
      "Text_1": {
        "properties": {
          "signer_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "page": { "example": 1, "minimum": 1, "type": "integer" },
          "x": {
            "example": 400,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "example": 400,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "width": {
            "description": "If not set, the width is automatically calculated with the max_length value",
            "example": 200,
            "minimum": 24,
            "type": "integer"
          },
          "height": {
            "description": "The height must be 24 or a multiple of 15 greater than 24.",
            "example": 150,
            "minimum": 24,
            "type": "integer"
          },
          "max_length": {
            "example": 150,
            "maximum": 32767,
            "minimum": 1,
            "type": "integer"
          },
          "question": {
            "description": "If you don't want any question, you can give an empty string.",
            "example": "What is your job title?",
            "maxLength": 255,
            "type": "string"
          },
          "instruction": {
            "example": "Your position in the company",
            "nullable": true,
            "type": "string"
          },
          "optional": { "default": false, "type": "boolean" },
          "font": { "$ref": "#/components/schemas/UpdateFieldFont" },
          "name": {
            "description": "Name of the Field.",
            "example": "Job Title",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "default_value": {
            "description": "If a default value is provided, the Field will be pre-filled with this value. The Signer can modify it before signing unless the Field is set to `read-only`.",
            "example": "Software Engineer",
            "maxLength": 32767,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "read_only": {
            "default": false,
            "description": "If set to `true`, the Signer cannot modify the Field and the default value (if provided) will remain unchanged.",
            "type": "boolean"
          }
        },
        "title": "Text",
        "type": "object"
      },
      "Checkbox_1": {
        "properties": {
          "signer_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "page": { "example": 1, "minimum": 1, "type": "integer" },
          "x": {
            "example": 400,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "example": 400,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "size": {
            "default": 24,
            "example": 24,
            "maximum": 240,
            "minimum": 8,
            "type": "integer"
          },
          "optional": { "default": false, "type": "boolean" },
          "name": {
            "example": "Checkbox 1",
            "nullable": true,
            "type": "string"
          },
          "checked": { "default": false, "type": "boolean" },
          "read_only": {
            "default": false,
            "description": "If set to `true`, the checkbox cannot be modified by the Signer.",
            "type": "boolean"
          }
        },
        "title": "Checkbox",
        "type": "object"
      },
      "RadioGroup_1_radios_inner": {
        "properties": {
          "name": {
            "description": "Radio button's name",
            "example": "My radio group",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "x": {
            "example": 400,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "example": 400,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "size": {
            "default": 24,
            "example": 24,
            "maximum": 240,
            "minimum": 8,
            "type": "integer"
          }
        },
        "required": ["x", "y"],
        "type": "object"
      },
      "RadioGroup_1": {
        "properties": {
          "signer_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "page": { "example": 1, "minimum": 1, "type": "integer" },
          "optional": { "default": false, "type": "boolean" },
          "name": {
            "description": "Radio group's name",
            "example": "radio_group_name_1",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "read_only": {
            "default": false,
            "description": "If set to `true`, the radio button cannot be modified by the Signer.",
            "type": "boolean"
          },
          "radios": {
            "items": {
              "$ref": "#/components/schemas/RadioGroup_1_radios_inner"
            },
            "type": "array"
          }
        },
        "title": "RadioGroup",
        "type": "object"
      },
      "ReadOnlyText_1": {
        "properties": {
          "page": { "example": 1, "minimum": 1, "type": "integer" },
          "x": {
            "example": 400,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "example": 400,
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "width": {
            "description": "If not set, the width is automatically calculated with the mention length.",
            "example": 24,
            "minimum": 24,
            "nullable": true,
            "type": "integer"
          },
          "height": {
            "description": "The height must be 24 or a multiple of 15 greater than 24. If height is not provided, it will be calculated depending on the number of newlines in the mention.",
            "example": 150,
            "minimum": 24,
            "nullable": true,
            "type": "integer"
          },
          "text": {
            "example": "Order n°12345",
            "maxLength": 5000,
            "type": "string"
          },
          "font": { "$ref": "#/components/schemas/UpdateFieldFont" }
        },
        "title": "ReadOnlyText",
        "type": "object"
      },
      "FieldAnswer_value": {
        "oneOf": [
          {
            "description": "The answer value for a text field. Can be null if the field is not required.\nThe selected radio name in a radio group.\n",
            "example": "My custom answer or my radio name in the group",
            "maxLength": 32767,
            "minLength": 1,
            "title": "Answer Text or a Radio Group Field",
            "type": "string"
          },
          {
            "description": "The answer value for a checkbox field.",
            "example": true,
            "title": "Answer Checkbox Field",
            "type": "boolean"
          }
        ]
      },
      "CreateFollowers_inner": {
        "properties": {
          "email": {
            "example": "john.doe@example.com",
            "format": "email",
            "minLength": 1,
            "type": "string"
          },
          "locale": { "$ref": "#/components/schemas/Locale" }
        },
        "required": ["email", "locale"],
        "type": "object"
      },
      "Metadata_data_value": {
        "oneOf": [
          {
            "description": "This property does not allow HTML tags.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          { "type": "number" },
          { "type": "boolean" }
        ]
      },
      "Signer_info": {
        "properties": {
          "first_name": { "minLength": 1, "type": "string" },
          "last_name": { "minLength": 1, "type": "string" },
          "email": { "format": "email", "minLength": 1, "type": "string" },
          "phone_number": {
            "description": "E.164 format. Becomes mandatory if `signature_authentication_mode` requires a phone number.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "locale": { "$ref": "#/components/schemas/Locale" }
        },
        "required": [
          "email",
          "first_name",
          "last_name",
          "locale",
          "phone_number"
        ],
        "type": "object"
      },
      "Signer_fields_inner": {
        "oneOf": [
          { "$ref": "#/components/schemas/FieldSignature" },
          { "$ref": "#/components/schemas/FieldText" },
          { "$ref": "#/components/schemas/FieldMention" },
          { "$ref": "#/components/schemas/FieldCheckbox" },
          { "$ref": "#/components/schemas/FieldRadioButtonGroup" }
        ]
      },
      "Signer_redirect_urls": {
        "description": "",
        "properties": {
          "success": {
            "example": "https://example.com/success",
            "format": "uri",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "error": {
            "example": "https://example.com/error",
            "format": "uri",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "decline": {
            "example": "https://example.com/decline",
            "format": "uri",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["decline", "error", "success"],
        "type": "object"
      },
      "New_Signer_From_Scratch_info": {
        "properties": {
          "first_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "example": "John",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "last_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "example": "Doe",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "email": { "format": "email", "minLength": 1, "type": "string" },
          "phone_number": {
            "description": "E.164 format. Becomes mandatory if `signature_authentication_mode` requires a phone number.",
            "example": "+41446667700",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "locale": { "$ref": "#/components/schemas/Locale" }
        },
        "required": ["email", "first_name", "last_name", "locale"],
        "type": "object"
      },
      "New_Signer_From_Scratch_redirect_urls": {
        "properties": {
          "success": {
            "example": "https://example.com/success",
            "format": "uri",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "error": {
            "example": "https://example.com/error",
            "format": "uri",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "decline": {
            "example": "https://example.com/decline",
            "format": "uri",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "New_Signer_From_Scratch_custom_text": {
        "properties": {
          "request_subject": {
            "maxLength": 150,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "request_body": {
            "maxLength": 2000,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "reminder_subject": {
            "maxLength": 150,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "reminder_body": {
            "maxLength": 2000,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "New_Signer_From_Scratch": {
        "description": "Create a new signer from scratch",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/New_Signer_From_Scratch_info"
          },
          "fields": {
            "description": "Fields to assign to the Signer. Multiple Fields can be added simultaneously.",
            "items": { "$ref": "#/components/schemas/FieldsInput" },
            "type": "array"
          },
          "insert_after_id": {
            "description": "Insert just after the position of the specified signer id",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "signature_level": {
            "enum": [
              "electronic_signature",
              "advanced_electronic_signature",
              "qualified_electronic_signature"
            ],
            "type": "string"
          },
          "signature_authentication_mode": {
            "enum": ["otp_email", "otp_sms", "no_otp"],
            "nullable": true,
            "type": "string"
          },
          "redirect_urls": {
            "$ref": "#/components/schemas/New_Signer_From_Scratch_redirect_urls"
          },
          "custom_text": {
            "$ref": "#/components/schemas/New_Signer_From_Scratch_custom_text"
          },
          "delivery_mode": {
            "$ref": "#/components/schemas/SignerDeliveryMode"
          },
          "identification_attestation_id": {
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "sms_notification": {
            "$ref": "#/components/schemas/SmsNotification_1"
          },
          "email_notification": {
            "$ref": "#/components/schemas/EmailNotification_1"
          },
          "pre_identity_verification_required": {
            "description": "Defines the way the Signer's Identity Documents will be uploaded for Verification. If set to `true`, `signature_level`should be equal to `advanced_electronic_signature` and `delivery_mode` set to `none`.",
            "type": "boolean"
          }
        },
        "required": ["info", "signature_level"],
        "title": "New Signer From Scratch",
        "type": "object"
      },
      "New_Signer_From_Existing_User": {
        "description": "Create a new signer from an existing user",
        "properties": {
          "user_id": {
            "description": "Create signer from an existing user",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "type": "string"
          },
          "fields": {
            "items": { "$ref": "#/components/schemas/FieldsInput" },
            "type": "array"
          },
          "insert_after_id": {
            "description": "Insert just after the position of the specified signer id",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "signature_level": {
            "enum": [
              "electronic_signature",
              "advanced_electronic_signature",
              "qualified_electronic_signature"
            ],
            "type": "string"
          },
          "signature_authentication_mode": {
            "enum": ["otp_email", "otp_sms", "no_otp"],
            "nullable": true,
            "type": "string"
          },
          "redirect_urls": {
            "$ref": "#/components/schemas/New_Signer_From_Scratch_redirect_urls"
          },
          "custom_text": {
            "$ref": "#/components/schemas/New_Signer_From_Scratch_custom_text"
          },
          "delivery_mode": {
            "$ref": "#/components/schemas/SignerDeliveryMode"
          },
          "identification_attestation_id": {
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "sms_notification": {
            "$ref": "#/components/schemas/SmsNotification_1"
          },
          "email_notification": {
            "$ref": "#/components/schemas/EmailNotification_1"
          },
          "pre_identity_verification_required": {
            "description": "Defines the way the Signer's Identity Documents will be uploaded for Verification. If set to `true`, `signature_level`should be equal to `advanced_electronic_signature` and `delivery_mode` set to `none`.",
            "nullable": false,
            "type": "boolean"
          }
        },
        "required": ["signature_level", "user_id"],
        "title": "New Signer From Existing User",
        "type": "object"
      },
      "New_Signer_From_Existing_Contact": {
        "description": "Create a new signer from an existing contact",
        "properties": {
          "contact_id": {
            "description": "Create signer from an existing contact",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "type": "string"
          },
          "fields": {
            "items": { "$ref": "#/components/schemas/FieldsInput" },
            "type": "array"
          },
          "insert_after_id": {
            "description": "Insert just after the position of the specified signer id",
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "signature_level": {
            "enum": [
              "electronic_signature",
              "advanced_electronic_signature",
              "qualified_electronic_signature"
            ],
            "type": "string"
          },
          "signature_authentication_mode": {
            "enum": ["otp_email", "otp_sms", "no_otp"],
            "nullable": true,
            "type": "string"
          },
          "redirect_urls": {
            "$ref": "#/components/schemas/New_Signer_From_Scratch_redirect_urls"
          },
          "custom_text": {
            "$ref": "#/components/schemas/New_Signer_From_Scratch_custom_text"
          },
          "delivery_mode": {
            "$ref": "#/components/schemas/SignerDeliveryMode"
          },
          "identification_attestation_id": {
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "sms_notification": {
            "$ref": "#/components/schemas/SmsNotification_1"
          },
          "email_notification": {
            "$ref": "#/components/schemas/EmailNotification_1"
          },
          "pre_identity_verification_required": {
            "description": "Defines the way the Signer's Identity Documents will be uploaded for Verification. If set to `true`, `signature_level`should be equal to `advanced_electronic_signature` and `delivery_mode` set to `none`.",
            "nullable": false,
            "type": "boolean"
          }
        },
        "required": ["contact_id", "signature_level"],
        "title": "New Signer From Existing Contact",
        "type": "object"
      },
      "UpdateSigner_info": {
        "nullable": true,
        "properties": {
          "first_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "example": "John",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "last_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "example": "Doe",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "email": { "format": "email", "minLength": 1, "type": "string" },
          "phone_number": {
            "description": "E.164 format",
            "example": "+41446667700",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "locale": { "$ref": "#/components/schemas/Locale" }
        },
        "type": "object"
      },
      "Signer_s_IP_address": {
        "oneOf": [
          { "example": "192.0.2.146", "format": "ipv4", "type": "string" },
          {
            "example": "2001:0000:130F:0000:0000:09C0:876A:130B",
            "format": "ipv6",
            "type": "string"
          }
        ],
        "title": "Signer's IP address"
      },
      "User_workspaces_inner": {
        "properties": {
          "id": {
            "example": "9a93d3b5-fb3b-4abf-9e70-26315b33506c",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": ["id"],
        "type": "object"
      },
      "BankAccountConnectionFull_allOf_data_parties": {
        "properties": {
          "role": {
            "description": "The role of the party in relation to the bank account",
            "enum": ["holder", "authorized_user", "other", "unknown"],
            "title": "Role",
            "type": "string"
          },
          "full_name": {
            "description": "The name of the party",
            "example": "John Doe",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "title": "Name",
            "type": "string"
          },
          "legal_person_name": {
            "description": "The full legal name of the party",
            "example": "John Robert Doe",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "title": "Legal person name",
            "type": "string"
          }
        },
        "required": ["full_name", "legal_person_name", "role"],
        "type": "object"
      },
      "BankAccountConnectionFull_allOf_data": {
        "properties": {
          "account_type": {
            "description": "The type of the bank account (personal or business)",
            "enum": ["personal", "business"],
            "nullable": true,
            "title": "Account type",
            "type": "string"
          },
          "account_identifiers": {
            "$ref": "#/components/schemas/get_bank_account_verifications_bankAccountVerificationId_200_response_allOf_extracted_from_document"
          },
          "bank_name": {
            "description": "The name of the bank",
            "example": "Fortuneo",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "title": "Bank name",
            "type": "string"
          },
          "parties": {
            "items": {
              "$ref": "#/components/schemas/BankAccountConnectionFull_allOf_data_parties"
            },
            "type": "array"
          }
        },
        "required": [
          "account_identifiers",
          "account_type",
          "bank_name",
          "parties"
        ],
        "type": "object"
      },
      "InitiateBankAccountLookupWithNaturalPerson_natural_person": {
        "description": "Information about the natural person who owns the bank account",
        "properties": {
          "first_name": {
            "description": "First name of the person",
            "example": "John",
            "maxLength": 255,
            "nullable": false,
            "type": "string"
          },
          "last_name": {
            "description": "Last name of the person",
            "example": "Doe",
            "maxLength": 255,
            "nullable": false,
            "type": "string"
          }
        },
        "required": ["first_name", "last_name"],
        "type": "object"
      },
      "InitiateBankAccountLookupWithLegalPerson_legal_person": {
        "description": "Information about the legal person (company) that owns the bank account",
        "properties": {
          "company_number": {
            "description": "The company number must either be a SIREN (9 characters long) or a SIRET (14 characters long).",
            "example": "794513986",
            "pattern": "^\\d{9}(\\d{5})?$",
            "type": "string"
          }
        },
        "required": ["company_number"],
        "type": "object"
      },
      "InitiateBankAccountWithLegalPerson_legal_person": {
        "additionalProperties": false,
        "description": "The field can not be submitted if field \"natural_person\" is provided.",
        "properties": {
          "name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "description": "Please provide the legal entity name, exactly as it appears on the bank account document.\nPlease match it exactly, with the same characters, same case.\n",
            "example": "Foundation Teaming",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      },
      "InitiateBankAccountWithNaturalPerson_natural_person": {
        "additionalProperties": false,
        "description": "The field can not be submitted if field \"legal_person\" is provided.",
        "properties": {
          "first_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "description": "Please provide the holder first name, exactly as it appears on the bank account document.\nPlease match it exactly, with the same characters, same case.\nOne exception: if the document mentions an honorary title, please don't provide it as part of the name.\n",
            "example": "John",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "last_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "description": "Please provide the holder last name, exactly as it appears on the bank account document.\nPlease match it exactly, with the same characters, same case.\nOne exception: if the document mentions an honorary title, please don't provide it as part of the name.\n",
            "example": "Doe",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      },
      "BankAccountFull_allOf_data_extracted_from_document": {
        "description": "Data extracted from the provided bank account document",
        "properties": {
          "iban": { "$ref": "#/components/schemas/NullableIBAN" },
          "bic": { "$ref": "#/components/schemas/NullableBIC" }
        },
        "required": ["bic", "iban"],
        "type": "object"
      },
      "BankAccountFull_allOf_data": {
        "properties": {
          "extracted_from_document": {
            "$ref": "#/components/schemas/BankAccountFull_allOf_data_extracted_from_document"
          }
        },
        "required": ["extracted_from_document"],
        "type": "object"
      },
      "CompanyFull_allOf_data_extracted_from_document": {
        "properties": {
          "company_number": {
            "description": "Company number extracted from the document.",
            "nullable": true,
            "type": "string"
          },
          "issued_on": {
            "description": "Date when the document was issued.",
            "format": "date",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CompanyFull_allOf_data_company_information_legal_form": {
        "properties": {
          "code": {
            "description": "Legal form code (ISO 20275).",
            "example": "6CHY",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Local legal form name.",
            "example": "SAS, société par actions simplifiée",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["code", "description"],
        "type": "object"
      },
      "CompanyFull_allOf_data_company_information_activities": {
        "properties": {
          "code": {
            "description": "Activity code.",
            "example": "62.01",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Activity name.",
            "example": "Computer programming activities",
            "nullable": true,
            "type": "string"
          },
          "classification": {
            "description": "Activity classification.",
            "example": "NACE",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["classification", "code", "description"],
        "type": "object"
      },
      "CompanyFull_allOf_data_company_information_commercial_registration": {
        "properties": {
          "location": {
            "description": "Indicates the location of the company's commercial register.",
            "example": "CAEN",
            "nullable": true,
            "type": "string"
          },
          "registered_on": {
            "description": "Indicates the company's registration date in the commercial register.",
            "example": "2013-08-01",
            "format": "date",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["location", "registered_on"],
        "type": "object"
      },
      "CompanyFull_allOf_data_company_information": {
        "properties": {
          "name": {
            "description": "Denomination of the company.",
            "example": "YOUSIGN",
            "nullable": true,
            "type": "string"
          },
          "trade_name": {
            "description": "Trade name of the company.",
            "nullable": true,
            "type": "string"
          },
          "company_number": {
            "description": "The number of the company entity.",
            "example": "794513986",
            "nullable": true,
            "type": "string"
          },
          "legal_form": {
            "$ref": "#/components/schemas/CompanyFull_allOf_data_company_information_legal_form"
          },
          "vat_number": {
            "description": "Tax number of the company.",
            "example": "FR61794513986",
            "nullable": true,
            "type": "string"
          },
          "activities": {
            "items": {
              "$ref": "#/components/schemas/CompanyFull_allOf_data_company_information_activities"
            },
            "type": "array"
          },
          "founded_on": {
            "description": "Company's creation date.",
            "example": "2013-07-24",
            "format": "date",
            "nullable": true,
            "type": "string"
          },
          "ceased_on": {
            "description": "Indicates the company's cessation date if company is inactive, otherwise null.",
            "format": "date",
            "nullable": true,
            "type": "string"
          },
          "active": {
            "description": "Indicates whether or not the company is still active.",
            "nullable": true,
            "type": "boolean"
          },
          "commercial_registration": {
            "$ref": "#/components/schemas/CompanyFull_allOf_data_company_information_commercial_registration"
          },
          "has_workforce": {
            "description": "True if the company has at least one employee.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "CompanyFull_allOf_data_headquarter": {
        "properties": {
          "address_line_1": {
            "example": "AVENUE PIERRE BERTHELOT",
            "nullable": true,
            "type": "string"
          },
          "address_line_2": { "nullable": true, "type": "string" },
          "postal_code": {
            "example": "14000",
            "nullable": true,
            "type": "string"
          },
          "city": { "example": "CAEN", "nullable": true, "type": "string" },
          "country_code": {
            "example": "FR",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "address_line_1",
          "address_line_2",
          "city",
          "country_code",
          "postal_code"
        ],
        "type": "object"
      },
      "CompanyFull_allOf_data_legal_representatives": {
        "properties": {
          "title": {
            "description": "The representative's role within the company.",
            "example": "Président",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "Indicates whether the representative is a natural person or a legal entity.",
            "enum": ["natural_person", "legal_person"],
            "nullable": true,
            "type": "string"
          },
          "first_name": {
            "description": "The representative's first name in case of a natural person, otherwise null.",
            "example": "John",
            "nullable": true,
            "type": "string"
          },
          "last_name": {
            "description": "The representative's last name in case of a natural person, otherwise null.",
            "example": "Doe",
            "nullable": true,
            "type": "string"
          },
          "born_on": {
            "description": "The representative's birthdate in case of a natural person, otherwise null.",
            "example": "1994-04-20",
            "format": "date",
            "nullable": true,
            "type": "string"
          },
          "company_name": {
            "description": "The representative's company name in case of a legal person, otherwise null.",
            "nullable": true,
            "type": "string"
          },
          "company_number": {
            "description": "The representative's company number in case of a legal person, otherwise null.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "born_on",
          "company_name",
          "company_number",
          "first_name",
          "last_name",
          "title",
          "type"
        ],
        "type": "object"
      },
      "CompanyFull_allOf_data": {
        "properties": {
          "extracted_from_document": {
            "$ref": "#/components/schemas/CompanyFull_allOf_data_extracted_from_document"
          },
          "company_information": {
            "$ref": "#/components/schemas/CompanyFull_allOf_data_company_information"
          },
          "headquarter": {
            "$ref": "#/components/schemas/CompanyFull_allOf_data_headquarter"
          },
          "legal_representatives": {
            "items": {
              "$ref": "#/components/schemas/CompanyFull_allOf_data_legal_representatives"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "IdentityDocumentFull_allOf_data_extracted_from_document": {
        "description": "Information extracted from the verified identity document",
        "properties": {
          "first_name": {
            "description": "The document holder's first name as it appears on the identity document",
            "example": "John",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "birth_name": {
            "description": "The document holder's birth name (family name at birth)",
            "example": "Doe",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "last_name": {
            "description": "The document holder's current last name (may differ from birth name)",
            "example": "Doe",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "born_on": {
            "description": "The document holder's date of birth as it appears on the document",
            "example": "2024-01-18",
            "format": "date",
            "nullable": true,
            "type": "string"
          },
          "birth_location": {
            "description": "The holder's place of birth as it appears on the document",
            "example": "Paris",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "gender": {
            "description": "The holder's gender as it appears on the document. \"m\" for Male, \"f\" for Female, \"x\" for Non-binary or unspecified.",
            "enum": ["f", "m", "x"],
            "example": "f",
            "nullable": true,
            "type": "string"
          },
          "full_address": {
            "description": "The holder's complete postal address as it appears on the document",
            "example": "13 RUE SAINT MARCELIN\nMARSEILLE 10E (13)",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of identity document that was verified",
            "enum": [
              "id_card",
              "passport",
              "residence_permit",
              "driver_license",
              "ita_ts_cns"
            ],
            "example": "id_card",
            "nullable": true,
            "type": "string"
          },
          "issuing_country_code": {
            "description": "The country that issued the document (ISO 3166-1 alpha-2 code)",
            "example": "US",
            "format": "ISO 3166-1 alpha-2",
            "nullable": true,
            "pattern": "^[A-Za-z]{2}$",
            "type": "string"
          },
          "issued_on": {
            "description": "The date when the document was issued",
            "example": "2024-01-18",
            "format": "date",
            "nullable": true,
            "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string"
          },
          "expired_on": {
            "description": "The date when the document legally expires",
            "example": "2024-01-18",
            "format": "date",
            "nullable": true,
            "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string"
          },
          "document_number": {
            "description": "Document identifier number (may contain letters)",
            "example": "X4RTBPFW4",
            "nullable": true,
            "type": "string"
          },
          "mrz": {
            "$ref": "#/components/schemas/get_id_document_verification_200_response_allOf_extracted_from_document_mrz"
          }
        },
        "required": [
          "birth_location",
          "birth_name",
          "born_on",
          "document_number",
          "expired_on",
          "first_name",
          "full_address",
          "gender",
          "issued_on",
          "issuing_country_code",
          "last_name",
          "mrz",
          "type"
        ],
        "type": "object"
      },
      "IdentityDocumentFull_allOf_data": {
        "properties": {
          "extracted_from_document": {
            "$ref": "#/components/schemas/IdentityDocumentFull_allOf_data_extracted_from_document"
          }
        },
        "required": ["extracted_from_document"],
        "type": "object"
      },
      "IdentityVideoFull_allOf_data_evidence": {
        "description": "Documentary evidence captured during the verification process",
        "properties": {
          "document_front_image_url": {
            "description": "Temporary public link to the front image. Available for 10 minutes after the user completed the verification.",
            "example": "https://storage-b.env.ubble.ai/ubble-ai/88bf48f0-ce4a-449c-9af1-f138a7e09392/ae1f813a-02cf-4ffc-bf71-d823ed74dc8d/bb603e2f-5de9-40f2-9631-8285a33c24c0/tight_crops/aaa.png?X-Amz-Date=20230327T163228Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=xxx",
            "format": "uri",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "document_back_image_url": {
            "description": "Temporary public link to the back image. Available for 10 minutes after the user completed the verification.",
            "example": "https://storage-b.env.ubble.ai/ubble-ai/88bf48f0-ce4a-449c-9af1-f138a7e09392/ae1f813a-02cf-4ffc-bf71-d823ed74dc8d/bb603e2f-5de9-40f2-9631-8285a33c24c0/tight_crops/bbb.png?X-Amz-Date=20230327T163228Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=xxx",
            "format": "uri",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "face_image_url": {
            "description": "Temporary public link to the face image. Available for 10 minutes after the user completed the verification.",
            "example": "https://storage-b.ubble.ai/11-production-ubble-ai/CKQNCMWHRPGT/idv_01jezpmz01mvn7r1n9eg596v5k/9a873da8-2395-4b05-b9a6-56644dfe2e06/9dc6948e-23b8-4405-81f2-28dccc0d9a71/face_asset_generation_0_rtc_face_0_rtc_face/face_crop_41.png?response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=h6aivdggwQIvVyGWnAEw%2F20241216%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20241216T100820Z&X-Amz-Expires=600&X-Amz-SignedHeaders=host&X-Amz-Signature=xxx",
            "format": "uri",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "document_back_image_url",
          "document_front_image_url",
          "face_image_url"
        ],
        "type": "object"
      },
      "IdentityVideoFull_allOf_data": {
        "properties": {
          "extracted_from_document": {
            "$ref": "#/components/schemas/IdentityVideoDocument"
          },
          "evidence": {
            "$ref": "#/components/schemas/IdentityVideoFull_allOf_data_evidence"
          }
        },
        "required": ["evidence", "extracted_from_document"],
        "type": "object"
      },
      "InitiateProofOfAddress_natural_person_address": {
        "additionalProperties": false,
        "description": "Provide the holder full address, exactly as it should appear on the proof of address document.",
        "nullable": true,
        "properties": {
          "line1": {
            "description": "The first line of the address, typically the street name and number.",
            "example": "Rue De Suède",
            "maxLength": 500,
            "minLength": 1,
            "type": "string"
          },
          "line2": {
            "description": "If needed, the second line of the address, typically an apartment or suite number.",
            "maxLength": 500,
            "minLength": 1,
            "nullable": true,
            "type": "string",
            "example": null
          },
          "postal_code": {
            "description": "The postal code of the address.",
            "example": "14000",
            "maxLength": 10,
            "minLength": 1,
            "type": "string"
          },
          "city": {
            "description": "The city of the address.",
            "example": "CAEN",
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": ["city", "line1", "postal_code"],
        "type": "object"
      },
      "InitiateProofOfAddress_natural_person": {
        "additionalProperties": false,
        "properties": {
          "first_name": {
            "description": "Provide the holder first name, exactly as it should appear on the proof of address document.\nPlease match it exactly, with the same characters, same case.\nOne exception: if the document mentions an honorary title, please don't provide it as part of the name.\nThis field can not be submitted without field \"last_name\".\n",
            "example": "John",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "last_name": {
            "description": "Provide the holder last name, exactly as it should appear on the proof of address document.\nPlease match it exactly, with the same characters, same case.\nOne exception: if the document mentions an honorary title, please don't provide it as part of the name.\nThis field can not be submitted without field \"first_name\".\n",
            "example": "Doe",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/InitiateProofOfAddress_natural_person_address"
          }
        },
        "type": "object"
      },
      "ProofOfAddressFull_allOf_data_extracted_from_document_2d_doc_address": {
        "description": "If found, the address extracted from the 2D-Doc.",
        "properties": {
          "line1": {
            "description": "The street type, name and number.",
            "example": "18 rue de Londres",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "postal_code": {
            "description": "The postal code.",
            "example": "75008",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "city": {
            "description": "The city name.",
            "example": "Paris",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "country_code": {
            "example": "FR",
            "format": "ISO 3166-1 alpha-2",
            "maxLength": 2,
            "minLength": 1,
            "nullable": true,
            "pattern": "^[A-Za-z]{2}$",
            "type": "string"
          }
        },
        "required": ["city", "country_code", "line1", "postal_code"],
        "type": "object"
      },
      "ProofOfAddressFull_allOf_data_extracted_from_document_2d_doc": {
        "description": "Data extracted from the 2D-Doc if the document has one.",
        "properties": {
          "full_name": {
            "description": "If found, the full name extracted from the 2D-Doc.",
            "example": "John Doe",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/ProofOfAddressFull_allOf_data_extracted_from_document_2d_doc_address"
          }
        },
        "required": ["address", "full_name"],
        "type": "object"
      },
      "ProofOfAddressFull_allOf_data_extracted_from_document": {
        "description": "Data extracted from the provided proof of address document",
        "properties": {
          "first_name": {
            "description": "If found, the first name as it appeared on the document.",
            "example": "John",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "last_name": {
            "description": "If found, the last name as it appeared on the document.",
            "example": "Doe",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "full_address": {
            "description": "If found, the address as it appeared on the document.",
            "example": "Rue De Suède Av Pierre Berthelot 14000 CAEN",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "issued_on": {
            "description": "If found, the document's issuance date as it appeared on the document.",
            "example": "2022-01-01",
            "format": "date",
            "nullable": true,
            "type": "string"
          },
          "2d_doc": {
            "$ref": "#/components/schemas/ProofOfAddressFull_allOf_data_extracted_from_document_2d_doc"
          }
        },
        "required": [
          "2d_doc",
          "first_name",
          "full_address",
          "issued_on",
          "last_name"
        ],
        "type": "object"
      },
      "ProofOfAddressFull_allOf_data": {
        "properties": {
          "extracted_from_document": {
            "$ref": "#/components/schemas/ProofOfAddressFull_allOf_data_extracted_from_document"
          }
        },
        "required": ["extracted_from_document"],
        "type": "object"
      },
      "InitiateWatchlist_natural_person": {
        "description": "Information about the person to check",
        "properties": {
          "first_name": {
            "description": "First name of the person",
            "example": "Emmanuel",
            "nullable": false,
            "type": "string"
          },
          "last_name": {
            "description": "Last name of the person",
            "example": "Macron",
            "nullable": false,
            "type": "string"
          },
          "born_on": {
            "description": "Date of birth of the person (YYYY-MM-DD)",
            "example": "1977-12-21",
            "format": "date",
            "nullable": false,
            "type": "string"
          }
        },
        "required": ["born_on", "first_name", "last_name"],
        "type": "object"
      },
      "WatchlistFull_allOf_data_politically_exposed_person_sources": {
        "properties": {
          "name": {
            "description": "Name of the source",
            "example": "Wikidata Politically Exposed Persons",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "URL of the source",
            "example": "https://www.opensanctions.org/datasets/wd_peps",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["name", "url"],
        "type": "object"
      },
      "WatchlistFull_allOf_data_politically_exposed_person_positions": {
        "properties": {
          "title": {
            "description": "Title of the political position",
            "example": "Minister of Finance",
            "nullable": true,
            "type": "string"
          },
          "active": {
            "description": "Whether the person is currently politically exposed",
            "example": false,
            "type": "boolean"
          },
          "country_code": {
            "description": "ISO country code where the position is held",
            "example": "FR",
            "format": "ISO 3166-1 alpha-2",
            "nullable": true,
            "type": "string"
          },
          "started_on": {
            "description": "Date when the position started",
            "example": "2020-01-01",
            "nullable": true,
            "type": "string"
          },
          "ended_on": {
            "description": "Date when the position ended − null if ongoing",
            "example": "2021-01-01",
            "nullable": true,
            "type": "string"
          },
          "sources": {
            "description": "Sources of this information",
            "items": {
              "$ref": "#/components/schemas/WatchlistFull_allOf_data_politically_exposed_person_sources"
            },
            "type": "array"
          }
        },
        "required": [
          "active",
          "country_code",
          "ended_on",
          "sources",
          "started_on",
          "title"
        ],
        "type": "object"
      },
      "WatchlistFull_allOf_data_politically_exposed_person": {
        "description": "Information about politically exposed person status",
        "properties": {
          "active": {
            "description": "Whether the person is currently politically exposed",
            "type": "boolean"
          },
          "positions": {
            "items": {
              "$ref": "#/components/schemas/WatchlistFull_allOf_data_politically_exposed_person_positions"
            },
            "type": "array"
          }
        },
        "required": ["active", "positions"],
        "type": "object"
      },
      "WatchlistFull_allOf_data_sanctions_sources": {
        "properties": {
          "name": {
            "description": "Name of the source",
            "example": "CIA World Factbook heads of state and government",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "URL of the source",
            "example": "https://www.opensanctions.org/datasets/us_cia_world_factbook",
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["name", "url"],
        "type": "object"
      },
      "WatchlistFull_allOf_data_sanctions_records": {
        "properties": {
          "description": {
            "description": "Description of the sanction",
            "example": "Management ban",
            "nullable": true,
            "type": "string"
          },
          "authority": {
            "description": "Authority that issued the sanction",
            "example": "Commercial Court of Paris",
            "nullable": true,
            "type": "string"
          },
          "country_code": {
            "description": "ISO country code where the sanction is applicable",
            "example": "FR",
            "format": "ISO 3166-1 alpha-2",
            "nullable": true,
            "type": "string"
          },
          "active": {
            "description": "Whether the sanction is currently active",
            "example": false,
            "type": "boolean"
          },
          "started_on": {
            "description": "Date when the sanction started",
            "example": "2020-01-01",
            "nullable": true,
            "type": "string"
          },
          "ended_on": {
            "description": "Date when the sanction ended − null if ongoing",
            "example": "2021-01-01",
            "nullable": true,
            "type": "string"
          },
          "sources": {
            "description": "Sources of this information",
            "items": {
              "$ref": "#/components/schemas/WatchlistFull_allOf_data_sanctions_sources"
            },
            "type": "array"
          }
        },
        "required": [
          "active",
          "authority",
          "country_code",
          "description",
          "ended_on",
          "sources",
          "started_on"
        ],
        "type": "object"
      },
      "WatchlistFull_allOf_data_sanctions": {
        "description": "List of sanctions against the person",
        "properties": {
          "active": {
            "description": "Whether the person is currently politically exposed",
            "type": "boolean"
          },
          "records": {
            "items": {
              "$ref": "#/components/schemas/WatchlistFull_allOf_data_sanctions_records"
            },
            "type": "array"
          }
        },
        "required": ["active", "records"],
        "type": "object"
      },
      "WatchlistFull_allOf_data": {
        "description": "Verification result data",
        "properties": {
          "politically_exposed_person": {
            "$ref": "#/components/schemas/WatchlistFull_allOf_data_politically_exposed_person"
          },
          "sanctions": {
            "$ref": "#/components/schemas/WatchlistFull_allOf_data_sanctions"
          }
        },
        "required": ["politically_exposed_person", "sanctions"],
        "type": "object"
      },
      "WebhookSubscription_subscribed_events": {
        "description": "Choose between a wildcard symbol to select all Workspaces or specify a list of specific Workspace UUIDs.",
        "oneOf": [
          { "$ref": "#/components/schemas/WebhookWildcardSubscribedEvent" },
          { "$ref": "#/components/schemas/WebhookSubscribedEvents" }
        ]
      },
      "WebhookSubscription_scopes": {
        "oneOf": [
          { "$ref": "#/components/schemas/WebhookWildcardScope" },
          { "$ref": "#/components/schemas/WebhookScopes" }
        ]
      },
      "WebhookSubscription_workspaces": {
        "oneOf": [
          { "$ref": "#/components/schemas/WebhookWildcardWorkspace" },
          { "$ref": "#/components/schemas/WebhookWorkspaces" }
        ]
      },
      "CreateWebhookSubscription_subscribed_events": {
        "description": "Choose between a wildcard symbol to select all subscribed events or specify a list of specific subscribed events.",
        "oneOf": [
          { "$ref": "#/components/schemas/WebhookSubscribedEvents" },
          { "$ref": "#/components/schemas/WebhookWildcardSubscribedEvent" }
        ]
      },
      "CreateWebhookSubscription_scopes": {
        "description": "Choose between a wildcard symbol to select all scopes or specify a list of specific scopes.",
        "oneOf": [
          { "$ref": "#/components/schemas/WebhookScopes" },
          { "$ref": "#/components/schemas/WebhookWildcardScope" }
        ]
      },
      "CreateWebhookSubscription_workspaces": {
        "description": "Choose between a wildcard symbol to select all Workspaces or specify a list of specific Workspace UUIDs. The association of specific Workspaces with Webhook is temporarily restricted in the sandbox environment, only the value wildcard (\"*\") for Workspaces is allowed in this context.",
        "oneOf": [
          { "$ref": "#/components/schemas/WebhookWorkspaces" },
          { "$ref": "#/components/schemas/WebhookWildcardWorkspace" }
        ]
      },
      "Workspace_users_inner": {
        "properties": {
          "id": {
            "example": "89120884-d29a-4b1a-ac7b-a9e73a872795",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SignatureRequest_SignerFromInfoInput_info": {
        "description": "create new signer",
        "properties": {
          "first_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "example": "John",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "last_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "example": "Doe",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "email": { "format": "email", "minLength": 1, "type": "string" },
          "phone_number": {
            "description": "E.164 format. Becomes mandatory if `signature_authentication_mode` requires a phone number.",
            "example": "+41446667700",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "locale": { "$ref": "#/components/schemas/Locale" }
        },
        "required": ["email", "first_name", "last_name", "locale"],
        "type": "object"
      },
      "SignatureRequest_SignerFromInfoInput_redirect_urls": {
        "properties": {
          "success": {
            "example": "https://example.com/success",
            "format": "uri",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "error": {
            "example": "https://example.com/error",
            "format": "uri",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SignatureRequest_SignerFromInfoInput_custom_text": {
        "properties": {
          "request_subject": {
            "maxLength": 150,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "request_body": {
            "maxLength": 500,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "reminder_subject": {
            "maxLength": 150,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "reminder_body": {
            "maxLength": 500,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SignatureRequest_EmailNotification_custom_text": {
        "nullable": true,
        "properties": {
          "request_subject": {
            "maxLength": 150,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "request_body": {
            "maxLength": 2000,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "reminder_subject": {
            "maxLength": 150,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "reminder_body": {
            "maxLength": 2000,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SignatureRequest_PlaceholderSignerSubstituteFromInfoInput_info": {
        "description": "Create new signer",
        "properties": {
          "first_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "example": "John",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "last_name": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "example": "Doe",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "email": { "format": "email", "minLength": 1, "type": "string" },
          "phone_number": {
            "description": "E.164 format. Becomes mandatory if `signature_authentication_mode` requires a phone number.",
            "example": "+41446667700",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "locale": { "$ref": "#/components/schemas/Locale" }
        },
        "required": ["email", "first_name", "last_name", "locale"],
        "type": "object"
      },
      "Signature_2": {
        "properties": {
          "document_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "type": { "enum": ["signature"], "type": "string" },
          "page": { "format": "int32", "minimum": 1, "type": "integer" },
          "x": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "height": {
            "description": "Default value is 37",
            "format": "int32",
            "maximum": 1000,
            "minimum": 37,
            "type": "integer"
          },
          "width": {
            "description": "Default value is 85",
            "format": "int32",
            "maximum": 2000,
            "minimum": 85,
            "type": "integer"
          },
          "reason": {
            "allOf": [{ "$ref": "#/components/schemas/HumanName" }],
            "description": "Provide extra context to explain why the Document is being signed. Once the Document is signed, the custom reason is stored in the Audit Trail and is included in the signature certificate.\nThe default value is: \"Signed by [Signer first name] [Signer last name]\".\n",
            "example": "Signed by John Doe",
            "maxLength": 150,
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["document_id", "page", "type", "x", "y"],
        "title": "Signature",
        "type": "object"
      },
      "Mention_2": {
        "properties": {
          "document_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "type": { "enum": ["mention"], "type": "string" },
          "page": { "format": "int32", "minimum": 1, "type": "integer" },
          "x": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "width": {
            "description": "If not set, the width is automatically calculated with the mention length",
            "format": "int32",
            "minimum": 24,
            "type": "integer"
          },
          "height": {
            "description": "The height must be 24 or a multiple of 15 greater than 24. If height is not provided, it will be calculated depending on the number of newlines in the mention",
            "example": 150,
            "format": "int32",
            "minimum": 24,
            "nullable": true,
            "type": "integer"
          },
          "mention": { "type": "string" },
          "name": {
            "description": "Name of the Field.",
            "example": "Job Title",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "required": ["document_id", "mention", "page", "type", "x", "y"],
        "title": "Mention",
        "type": "object"
      },
      "Text_2": {
        "properties": {
          "document_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "type": { "enum": ["text"], "type": "string" },
          "page": { "format": "int32", "minimum": 1, "type": "integer" },
          "x": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "width": {
            "description": "If not set, the width is automatically calculated with the max_length value",
            "example": 90,
            "format": "int32",
            "minimum": 24,
            "type": "integer"
          },
          "height": {
            "description": "The height must be 24 or a multiple of 15 greater than 24.",
            "example": 150,
            "format": "int32",
            "minimum": 24,
            "type": "integer"
          },
          "max_length": { "maximum": 32767, "minimum": 1, "type": "integer" },
          "question": {
            "example": "What is your job title?",
            "maxLength": 255,
            "type": "string"
          },
          "instruction": {
            "example": "Your position in the company",
            "nullable": true,
            "type": "string"
          },
          "optional": { "type": "boolean" },
          "name": {
            "description": "Name of the Field.",
            "example": "Job Title",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "default_value": {
            "description": "If a default value is provided, the Field will be pre-filled with this value. The Signer can modify it before signing unless the Field is set to `read-only`.",
            "example": "Software Engineer",
            "maxLength": 32767,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "read_only": {
            "default": false,
            "description": "If set to `true`, the Signer cannot modify the Field and the default value (if provided) will remain unchanged.",
            "type": "boolean"
          }
        },
        "required": [
          "document_id",
          "max_length",
          "optional",
          "page",
          "question",
          "type",
          "x",
          "y"
        ],
        "title": "Text",
        "type": "object"
      },
      "Checkbox_2": {
        "properties": {
          "document_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "type": { "enum": ["checkbox"], "type": "string" },
          "page": { "format": "int32", "minimum": 1, "type": "integer" },
          "x": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "size": {
            "description": "The omission of size parameter is considered as deprecated. The size determines both the width and height of the checkbox.",
            "format": "int32",
            "maximum": 240,
            "minimum": 8,
            "type": "integer"
          },
          "optional": { "type": "boolean" },
          "name": {
            "example": "Checkbox 1",
            "nullable": true,
            "type": "string"
          },
          "checked": { "type": "boolean" },
          "default_checked": { "type": "boolean" },
          "read_only": {
            "default": false,
            "description": "If set to `true`, the checkbox cannot be modified by the signer.",
            "type": "boolean"
          }
        },
        "required": [
          "checked",
          "document_id",
          "optional",
          "page",
          "type",
          "x",
          "y"
        ],
        "title": "Checkbox",
        "type": "object"
      },
      "RadioGroup_2_radios_inner": {
        "properties": {
          "name": {
            "description": "Radio button's name",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "x": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "y": {
            "format": "int32",
            "maximum": 32767,
            "minimum": 0,
            "type": "integer"
          },
          "size": {
            "description": "The omission of size parameter is considered as deprecated. The size determines both the width and height of the checkbox.",
            "format": "int32",
            "maximum": 240,
            "minimum": 8,
            "type": "integer"
          },
          "default_checked": {
            "default": false,
            "description": "Indicates whether the radio is initially checked (`true`) or unchecked (`false`).",
            "type": "boolean"
          }
        },
        "required": ["x", "y"],
        "type": "object"
      },
      "RadioGroup_2": {
        "properties": {
          "document_id": {
            "example": "9b6ed2f3-244f-487a-baa1-bbe4f51c8748",
            "format": "uuid",
            "type": "string"
          },
          "type": { "enum": ["radio_group"], "type": "string" },
          "page": { "format": "int32", "minimum": 1, "type": "integer" },
          "optional": { "type": "boolean" },
          "name": {
            "description": "Radio group's name",
            "example": "radio_group_name_1",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "read_only": {
            "default": false,
            "description": "If set to `true`, the radio button cannot be modified by the Signer.",
            "type": "boolean"
          },
          "radios": {
            "items": {
              "$ref": "#/components/schemas/RadioGroup_2_radios_inner"
            },
            "type": "array"
          }
        },
        "required": ["document_id", "optional", "page", "radios", "type"],
        "title": "RadioGroup",
        "type": "object"
      },
      "OTP_Message": {
        "properties": {
          "custom_text": {
            "description": "Custom text contained is the one-time password SMS sent to the Signer. This feature is available from SCALE plan, and disabled by default. Please contact [customer support](https://yousign.app/auth/workspace/help) to request an activation. This value is a string composed of GSM characters supported by 7-bit encoding, must contain \"{code}\", the length must be less than 105 and cannot contain URL, email, phone number and IP address.",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": ["custom_text"],
        "title": "OTP Message",
        "type": "object"
      },
      "BadRequestResponse": {
        "properties": {
          "type": { "type": "string" },
          "detail": { "type": "string" }
        },
        "required": ["detail", "type"],
        "title": "BadRequestResponse",
        "type": "object"
      },
      "UnauthorizedResponse": {
        "properties": {
          "type": { "type": "string" },
          "detail": { "type": "string" }
        },
        "required": ["detail", "type"],
        "title": "UnauthorizedResponse",
        "type": "object"
      },
      "ForbiddenResponse": {
        "properties": {
          "type": { "type": "string" },
          "detail": { "type": "string" }
        },
        "required": ["detail", "type"],
        "title": "ForbiddenResponse",
        "type": "object"
      },
      "NotFoundResponse": {
        "properties": {
          "type": { "type": "string" },
          "detail": { "type": "string" }
        },
        "required": ["detail", "type"],
        "title": "NotFoundResponse",
        "type": "object"
      },
      "MethodNotAllowed": {
        "properties": { "message": { "type": "string" } },
        "required": ["message"],
        "title": "MethodNotAllowed",
        "type": "object"
      },
      "UnsupportedMediaTypeResponse": {
        "properties": {
          "type": { "type": "string" },
          "detail": { "type": "string" }
        },
        "required": ["detail", "type"],
        "title": "UnsupportedMediaTypeResponse",
        "type": "object"
      },
      "TooManyRequestsResponse": {
        "properties": { "message": { "type": "string" } },
        "required": ["message"],
        "title": "TooManyRequestsResponse",
        "type": "object"
      },
      "InternalServerError": {
        "properties": {
          "type": { "example": "about:blank", "type": "string" },
          "detail": { "example": "Something wrong occurred.", "type": "string" }
        },
        "required": ["detail", "type"],
        "title": "InternalServerError",
        "type": "object"
      }
    },
    "securitySchemes": { "bearerAuth": { "scheme": "bearer", "type": "http" } }
  },
  "x-readme": { "explorer-enabled": true, "proxy-enabled": true }
}
